Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_A
Instance: K100.9.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_A K100.9.red /scratch/opt/lxu/CFLG/results/Kgroup_A Gurobi 7200 LEFPAI Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_A K100.9.red LEFPAI Large
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_A/K100.9.red

 read graph
data loaded


after absorb:21 22

max_piece:4
problem_graph/original graph: node: 30/22 edge: 78/70 dlt: 0.5840503453289713 break_avg_len: 0.2620738729040255 break_max_len: 0.584049761278626Vbar/V, Ebar/E(30, 30, 78, 78)
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 108 rows, 234 columns and 390 nonzeros
Model fingerprint: 0xdde997dd
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Presolve removed 108 rows and 234 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0   -0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective -0.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.104537 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.895463

 more cuts: false 0.5840503453289713 false
is_attach:trueformulation:LEFPAI0 78 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.895463
MIPGapAbs  0.999998
Threads  1

Optimize a model with 2941 rows, 2631 columns and 8529 nonzeros
Model fingerprint: 0x5a9d963a
Model has 2259 simple general constraints
  2259 INDICATOR
Variable types: 186 continuous, 2445 integer (2445 binary)
Coefficient statistics:
  Matrix range     [2e-02, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [2e-02, 6e-01]
  RHS range        [2e-02, 1e+00]
  GenCon rhs range [6e-07, 6e-01]
  GenCon coe range [1e+00, 1e+00]
Presolve added 1019 rows and 0 columns
Presolve removed 0 rows and 257 columns
Presolve time: 0.07s
Presolved: 3960 rows, 2374 columns, 13112 nonzeros
Variable types: 108 continuous, 2266 integer (2266 binary)
Found heuristic solution: objective 78.0000000
Found heuristic solution: objective 28.0000000
Found heuristic solution: objective 27.0000000

Root relaxation: objective 8.108737e-01, 1513 iterations, 0.03 seconds (0.06 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.81087    0  132   27.00000    0.81087  97.0%     -    0s
H    0     0                      17.0000000    0.81087  95.2%     -    0s
H    0     0                      11.0000000    0.81087  92.6%     -    0s
H    0     0                      10.0000000    0.81087  91.9%     -    0s
H    0     0                       9.0000000    0.81087  91.0%     -    0s
H    0     0                       8.0000000    0.81087  89.9%     -    0s
H    0     0                       7.0000000    0.81087  88.4%     -    0s
     0     0    1.48877    0  207    7.00000    1.48877  78.7%     -    0s
H    0     0                       6.0000000    1.59219  73.5%     -    0s
H    0     0                       5.0000000    1.59219  68.2%     -    0s
H    0     0                       4.0000000    1.59219  60.2%     -    0s
     0     0    1.59219    0  209    4.00000    1.59219  60.2%     -    0s
     0     0    1.59219    0  221    4.00000    1.59219  60.2%     -    0s
     0     0    1.75508    0  188    4.00000    1.75508  56.1%     -    0s
     0     0    1.82744    0  178    4.00000    1.82744  54.3%     -    0s
     0     0    1.82924    0  179    4.00000    1.82924  54.3%     -    0s
     0     0    1.82924    0  179    4.00000    1.82924  54.3%     -    0s
     0     0    2.00000    0  116    4.00000    2.00000  50.0%     -    0s
     0     0    2.00000    0  143    4.00000    2.00000  50.0%     -    0s
     0     0    2.00000    0   74    4.00000    2.00000  50.0%     -    0s
H    0     0                       3.0000000    2.00000  33.3%     -    0s
     0     0    2.00000    0  126    3.00000    2.00000  33.3%     -    0s
     0     0    2.00000    0  122    3.00000    2.00000  33.3%     -    0s
     0     0    2.00000    0  176    3.00000    2.00000  33.3%     -    0s
     0     0     cutoff    0         3.00000    3.00000  0.00%     -    0s

Explored 1 nodes (6448 simplex iterations) in 0.67 seconds (0.69 work units)
Thread count was 1 (of 16 available processors)

Solution count 10: 3 3 3 ... 10

Optimal solution found (tolerance 1.00e-04)
Best objective 3.000000000000e+00, best bound 3.000000000000e+00, gap 0.0000%

User-callback calls 833, time in user-callback 0.00 sec

 sepatime0 0 0
3.0Stat(MathOptInterface.OPTIMAL, 3.0, 3.0, 0.0, 0.0, 1.104537, 0.6714968681335449, 1, Main.CFLG.LEFPAI, "", #undef)
