Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_B
Instance: treeB.700.105
Result path: /scratch/opt/lxu/CFLG/results/tree_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAD
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_B treeB.700.105 /scratch/opt/lxu/CFLG/results/tree_B Gurobi 7200 LEFPAD Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_B treeB.700.105 LEFPAD Small
/scratch/opt/lxu/CFLG/benchmarks/tree_B/treeB.700.105

 read graph
data loaded


after absorb:538 700

max_piece:20
problem_graph/original graph: node: 538/700 edge: 642/804 dlt: 0.3757050471451041 break_avg_len: 1.8820364978483757 break_max_len: 6.950036573192747Vbar/V, Ebar/E(234, 538, 338, 642)
(1, 223)(1, 316)(1, 63)(2, 346)(6, 121)(8, 106)(8, 412)(8, 167)(9, 346)(9, 496)(9, 15)(10, 293)(11, 456)(13, 321)(13, 423)(13, 70)(13, 244)(14, 408)(6, 14)(14, 270)(16, 173)(16, 153)(18, 355)(18, 192)(22, 72)(22, 485)(25, 118)(26, 164)(30, 469)(30, 35)(30, 59)(34, 276)(34, 436)(34, 496)(34, 341)(38, 184)(40, 323)(26, 42)(46, 498)(46, 214)(46, 302)(6, 47)(54, 336)(54, 526)(54, 397)(54, 63)(56, 483)(56, 419)(29, 60)(63, 256)(65, 509)(65, 424)(65, 328)(65, 218)(77, 172)(17, 78)(78, 203)(78, 450)(78, 451)(9, 78)(80, 106)(80, 313)(92, 525)(92, 259)(92, 227)(94, 155)(94, 113)(59, 94)(97, 357)(97, 125)(104, 468)(104, 159)(104, 323)(109, 214)(109, 159)(109, 160)(109, 401)(111, 170)(111, 524)(92, 111)(111, 424)(112, 181)(112, 350)(112, 323)(72, 119)(119, 393)(122, 353)(122, 210)(125, 429)(125, 127)(121, 127)(131, 248)(129, 131)(14, 131)(60, 132)(132, 226)(11, 136)(136, 528)(137, 428)(137, 512)(139, 497)(140, 408)(140, 445)(24, 142)(143, 160)(143, 175)(144, 483)(144, 215)(150, 181)(150, 374)(77, 151)(151, 374)(105, 152)(153, 163)(156, 401)(160, 518)(40, 163)(100, 163)(24, 167)(157, 171)(171, 469)(171, 460)(171, 259)(171, 451)(105, 173)(100, 176)(100, 177)(176, 180)(182, 417)(183, 234)(183, 374)(187, 320)(187, 276)(129, 192)(192, 459)(182, 193)(193, 508)(184, 193)(199, 450)(199, 412)(132, 199)(203, 317)(209, 355)(209, 528)(184, 209)(139, 210)(105, 214)(215, 518)(172, 218)(172, 221)(221, 449)(57, 221)(221, 224)(221, 313)(103, 223)(225, 498)(225, 483)(226, 536)(156, 227)(231, 503)(240, 500)(77, 240)(224, 240)(43, 247)(24, 249)(249, 287)(150, 249)(252, 443)(252, 424)(176, 252)(183, 261)(261, 376)(142, 269)(94, 269)(269, 451)(269, 360)(271, 321)(129, 271)(94, 271)(119, 277)(277, 401)(139, 277)(284, 372)(10, 284)(290, 359)(290, 316)(300, 415)(270, 300)(301, 310)(301, 425)(231, 305)(305, 365)(309, 414)(309, 469)(70, 309)(310, 428)(313, 497)(36, 316)(316, 428)(175, 316)(316, 364)(316, 454)(80, 317)(293, 317)(56, 319)(152, 319)(43, 319)(103, 320)(320, 455)(214, 321)(327, 357)(42, 327)(302, 328)(328, 484)(328, 365)(329, 371)(187, 329)(333, 450)(333, 374)(334, 372)(334, 449)(334, 467)(164, 336)(336, 357)(336, 385)(256, 337)(72, 337)(245, 341)(341, 385)(256, 344)(302, 344)(139, 344)(172, 350)(256, 353)(310, 359)(302, 359)(170, 360)(360, 389)(364, 405)(365, 405)(10, 371)(118, 371)(25, 385)(36, 389)(47, 391)(391, 445)(26, 397)(397, 455)(300, 398)(398, 456)(346, 398)(398, 487)(106, 399)(40, 399)(234, 413)(122, 413)(47, 414)(275, 417)(6, 417)(155, 419)(157, 419)(424, 451)(22, 425)(47, 426)(248, 426)(426, 454)(248, 429)(164, 429)(293, 429)(431, 435)(247, 431)(72, 431)(365, 431)(244, 435)(437, 483)(310, 437)(159, 437)(245, 439)(423, 439)(180, 439)(177, 443)(38, 445)(35, 445)(245, 446)(254, 446)(113, 446)(446, 459)(17, 448)(254, 448)(180, 448)(450, 484)(29, 451)(275, 453)(97, 453)(453, 460)(405, 453)(459, 512)(333, 459)(425, 463)(159, 463)(210, 467)(293, 467)(226, 468)(473, 518)(176, 473)(25, 474)(372, 474)(423, 474)(474, 484)(121, 484)(405, 485)(11, 496)(423, 496)(72, 500)(15, 500)(415, 508)(10, 509)(412, 509)(313, 509)(487, 512)(514, 536)(57, 514)(176, 514)(393, 518)(503, 522)(184, 522)(254, 524)(287, 524)(35, 524)(436, 525)(455, 525)(415, 526)(376, 526)(498, 532)(38, 532)(327, 532)(65, 535)(2, 535)(Dict(5 => 3.0, 55 => 5.0, 114 => 5.0, 110 => 5.0, 123 => 4.0, 60 => 6.0, 30 => 8.0, 32 => 2.0, 6 => 2.0, 117 => 9.0, 234 => 8.0, 215 => 4.0, 197 => 5.0, 73 => 2.0, 182 => 6.0, 153 => 7.0, 210 => 9.0, 151 => 2.0, 90 => 18.0, 139 => 6.0, 13 => 4.0, 54 => 4.0, 63 => 8.0, 191 => 8.0, 207 => 2.0, 62 => 7.0, 205 => 2.0, 218 => 4.0, 224 => 2.0, 122 => 6.0, 179 => 4.0, 12 => 2.0, 28 => 13.0, 75 => 3.0, 23 => 2.0, 188 => 8.0, 92 => 12.0, 41 => 2.0, 43 => 5.0, 11 => 3.0, 36 => 4.0, 82 => 7.0, 85 => 2.0, 130 => 6.0, 119 => 3.0, 162 => 3.0, 84 => 2.0, 203 => 4.0, 25 => 10.0, 108 => 4.0, 172 => 7.0, 71 => 4.0, 66 => 2.0, 76 => 2.0, 103 => 5.0, 232 => 3.0, 34 => 1.0, 50 => 5.0, 208 => 2.0, 59 => 5.0, 2 => 4.0, 27 => 7.0, 10 => 4.0, 26 => 4.0, 18 => 1.0, 124 => 3.0, 87 => 4.0, 42 => 2.0, 147 => 2.0, 140 => 5.0, 202 => 6.0, 230 => 2.0, 16 => 4.0, 200 => 6.0, 180 => 3.0, 141 => 8.0, 160 => 7.0, 19 => 2.0, 187 => 2.0, 213 => 2.0, 135 => 6.0, 44 => 5.0, 31 => 7.0, 227 => 2.0, 74 => 4.0, 138 => 21.0, 106 => 17.0, 61 => 2.0, 46 => 3.0, 212 => 12.0, 225 => 4.0, 228 => 2.0, 128 => 2.0, 57 => 6.0, 152 => 4.0, 170 => 9.0, 193 => 13.0, 129 => 4.0, 163 => 4.0, 209 => 7.0, 131 => 6.0, 120 => 2.0, 226 => 2.0, 101 => 2.0, 78 => 4.0, 133 => 13.0, 184 => 2.0, 17 => 2.0, 37 => 1.0, 1 => 3.0, 137 => 4.0, 53 => 9.0, 175 => 13.0, 190 => 2.0, 201 => 4.0, 121 => 3.0, 166 => 4.0, 89 => 7.0, 14 => 2.0, 80 => 2.0, 3 => 4.0, 178 => 2.0, 51 => 6.0, 155 => 15.0, 181 => 2.0, 143 => 10.0, 48 => 8.0, 113 => 10.0, 97 => 6.0, 174 => 6.0, 142 => 2.0, 134 => 4.0), [1, 2, 5, 6, 12, 13, 17, 19, 26, 27, 31, 32, 34, 37, 50, 51, 54, 55, 60, 62, 63, 75, 76, 80, 82, 84, 87, 89, 90, 92, 101, 108, 110, 113, 114, 117, 120, 121, 122, 123, 128, 129, 134, 135, 137, 138, 142, 143, 151, 160, 163, 166, 170, 172, 179, 182, 184, 187, 193, 203, 207, 208, 209, 212, 213, 215, 227, 228, 230, 232, 234, 3, 10, 11, 14, 16, 18, 23, 25, 28, 30, 36, 41, 42, 43, 44, 46, 48, 53, 57, 59, 61, 66, 71, 73, 74, 78, 85, 97, 103, 106, 119, 124, 130, 131, 133, 139, 140, 141, 147, 152, 153, 155, 162, 174, 175, 178, 180, 181, 188, 190, 191, 197, 200, 201, 202, 205, 210, 218, 224, 225, 226], 366, 470)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 836 rows, 1410 columns and 2350 nonzeros
Model fingerprint: 0xaedcdf43
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 836 rows and 1410 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.3200000e+02   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  1.320000000e+02

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.876825 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.123175

 more cuts: false 0.3757050471451041 false
is_attach:trueformulation:LEFPAD0 470 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.123175
MIPGapAbs  0.999998
Threads  1

Optimize a model with 6779 rows, 5492 columns and 16803 nonzeros
Model fingerprint: 0xa71f84eb
Variable types: 2563 continuous, 2929 integer (2929 binary)
Coefficient statistics:
  Matrix range     [3e-03, 7e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [4e-03, 7e+00]
  RHS range        [1e-06, 7e+00]
Presolve removed 4737 rows and 3256 columns
Presolve time: 0.03s
Presolved: 2042 rows, 2236 columns, 6256 nonzeros
Variable types: 1235 continuous, 1001 integer (1001 binary)
Found heuristic solution: objective 1079.0000000

Explored 0 nodes (0 simplex iterations) in 0.05 seconds (0.03 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 1079 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.079000000000e+03, best bound 1.079000000000e+03, gap 0.0000%

User-callback calls 546, time in user-callback 0.00 sec

 sepatime0 0 0
1079.0Stat(MathOptInterface.OPTIMAL, 1079.0, 1079.0, 0.0, 0.0, 1.876825, 0.05211591720581055, 0, Main.CFLG.LEFPAD, "", #undef)
