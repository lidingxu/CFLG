Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_B
Instance: treeB.700.70
Result path: /scratch/opt/lxu/CFLG/results/tree_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAD
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_B treeB.700.70 /scratch/opt/lxu/CFLG/results/tree_B Gurobi 7200 LEFPAD Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_B treeB.700.70 LEFPAD Small
/scratch/opt/lxu/CFLG/benchmarks/tree_B/treeB.700.70

 read graph
data loaded


after absorb:545 700

max_piece:24
problem_graph/original graph: node: 545/700 edge: 614/769 dlt: 0.37440436847593095 break_avg_len: 1.8756805169901691 break_max_len: 8.285043455360594Vbar/V, Ebar/E(188, 545, 257, 614)
(1, 224)(1, 320)(1, 60)(2, 350)(6, 123)(8, 108)(8, 414)(9, 350)(9, 499)(10, 297)(11, 459)(13, 215)(13, 68)(14, 410)(6, 14)(14, 273)(15, 173)(15, 153)(24, 164)(23, 31)(31, 280)(31, 438)(31, 499)(35, 185)(37, 326)(24, 39)(43, 215)(43, 306)(6, 44)(51, 340)(51, 532)(51, 399)(51, 60)(56, 472)(27, 57)(60, 259)(63, 510)(63, 426)(63, 331)(77, 172)(78, 203)(16, 78)(78, 453)(78, 454)(9, 78)(80, 108)(80, 317)(93, 529)(95, 115)(95, 192)(56, 95)(98, 361)(98, 127)(105, 458)(106, 159)(106, 326)(111, 215)(111, 159)(111, 160)(111, 403)(113, 170)(113, 528)(93, 113)(113, 426)(114, 181)(114, 326)(72, 121)(121, 395)(124, 357)(124, 211)(127, 431)(127, 129)(123, 129)(57, 132)(11, 136)(136, 535)(137, 429)(137, 513)(139, 500)(140, 410)(140, 448)(22, 142)(143, 160)(143, 175)(144, 486)(144, 216)(150, 181)(150, 377)(77, 151)(151, 377)(107, 152)(153, 163)(160, 519)(37, 163)(102, 163)(171, 472)(171, 463)(171, 454)(107, 173)(102, 176)(102, 177)(176, 180)(182, 419)(183, 236)(183, 377)(192, 462)(182, 193)(193, 509)(185, 193)(199, 453)(199, 414)(132, 199)(203, 321)(209, 535)(185, 209)(139, 211)(107, 215)(216, 519)(172, 222)(222, 452)(54, 222)(222, 226)(222, 317)(105, 224)(77, 242)(72, 242)(226, 242)(40, 249)(250, 291)(150, 250)(22, 250)(254, 446)(254, 426)(176, 254)(183, 263)(263, 379)(142, 272)(95, 272)(272, 454)(272, 364)(121, 281)(281, 403)(288, 375)(10, 288)(304, 417)(273, 304)(305, 314)(313, 416)(313, 472)(68, 313)(314, 429)(317, 500)(320, 429)(175, 320)(320, 368)(80, 321)(297, 321)(152, 323)(40, 323)(330, 361)(39, 330)(306, 331)(331, 487)(331, 369)(10, 332)(280, 332)(337, 453)(337, 377)(338, 375)(338, 452)(338, 470)(164, 340)(259, 341)(72, 341)(259, 348)(306, 348)(139, 348)(259, 357)(314, 363)(306, 363)(170, 364)(368, 407)(369, 407)(24, 399)(399, 458)(304, 400)(400, 459)(350, 400)(108, 401)(37, 401)(236, 415)(124, 415)(44, 416)(278, 419)(6, 419)(426, 454)(44, 427)(427, 431)(164, 431)(297, 431)(249, 433)(72, 433)(369, 433)(439, 486)(314, 439)(159, 439)(247, 442)(425, 442)(180, 442)(177, 446)(35, 448)(247, 449)(257, 449)(115, 449)(449, 462)(16, 451)(257, 451)(180, 451)(453, 487)(27, 454)(278, 456)(456, 463)(407, 456)(462, 513)(337, 462)(305, 466)(159, 466)(211, 470)(297, 470)(476, 519)(176, 476)(23, 477)(375, 477)(425, 477)(477, 487)(123, 487)(72, 488)(407, 488)(11, 499)(425, 499)(417, 509)(10, 510)(414, 510)(317, 510)(54, 515)(176, 515)(395, 519)(257, 528)(291, 528)(438, 529)(417, 532)(379, 532)(43, 539)(35, 539)(330, 539)(63, 542)(2, 542)(Dict(35 => 10.0, 55 => 9.0, 110 => 6.0, 114 => 6.0, 123 => 3.0, 60 => 8.0, 30 => 18.0, 32 => 11.0, 67 => 9.0, 73 => 12.0, 164 => 3.0, 115 => 4.0, 153 => 6.0, 112 => 4.0, 185 => 6.0, 90 => 4.0, 139 => 5.0, 13 => 5.0, 63 => 3.0, 86 => 33.0, 168 => 6.0, 91 => 5.0, 62 => 12.0, 183 => 2.0, 150 => 4.0, 58 => 8.0, 179 => 4.0, 12 => 3.0, 28 => 5.0, 75 => 8.0, 173 => 3.0, 148 => 2.0, 92 => 2.0, 43 => 11.0, 69 => 1.0, 36 => 6.0, 171 => 3.0, 98 => 8.0, 68 => 2.0, 82 => 2.0, 85 => 7.0, 130 => 6.0, 119 => 16.0, 162 => 4.0, 95 => 3.0, 25 => 3.0, 71 => 2.0, 66 => 2.0, 76 => 4.0, 103 => 12.0, 93 => 2.0, 50 => 6.0, 27 => 3.0, 18 => 2.0, 26 => 12.0, 10 => 1.0, 167 => 16.0, 42 => 2.0, 144 => 20.0, 132 => 4.0, 87 => 3.0, 100 => 26.0, 127 => 16.0, 169 => 4.0, 79 => 6.0, 16 => 12.0, 20 => 11.0, 140 => 2.0, 141 => 2.0, 160 => 2.0, 19 => 15.0, 187 => 8.0, 49 => 5.0, 135 => 8.0, 44 => 8.0, 9 => 6.0, 146 => 8.0, 74 => 9.0, 109 => 5.0, 94 => 9.0, 29 => 6.0, 107 => 17.0, 46 => 3.0, 57 => 4.0, 128 => 4.0, 159 => 2.0, 70 => 17.0, 152 => 9.0, 21 => 1.0, 38 => 6.0, 163 => 5.0, 120 => 8.0, 101 => 13.0, 78 => 9.0, 105 => 2.0, 133 => 3.0, 72 => 2.0, 24 => 6.0, 184 => 2.0, 17 => 4.0, 1 => 4.0, 137 => 3.0, 22 => 4.0, 47 => 6.0, 53 => 2.0, 154 => 33.0, 175 => 1.0, 99 => 7.0, 121 => 4.0, 166 => 10.0, 96 => 4.0, 51 => 12.0, 33 => 14.0, 155 => 8.0, 181 => 3.0, 143 => 4.0, 40 => 2.0, 97 => 2.0, 165 => 2.0, 142 => 4.0), [1, 12, 16, 18, 20, 21, 22, 24, 26, 27, 32, 36, 43, 46, 50, 57, 62, 63, 69, 70, 71, 73, 74, 79, 82, 85, 90, 91, 92, 93, 94, 95, 98, 101, 105, 109, 110, 112, 115, 121, 132, 133, 135, 137, 142, 143, 144, 150, 155, 163, 165, 166, 169, 171, 184, 185, 9, 10, 13, 17, 19, 25, 28, 29, 30, 33, 35, 38, 40, 42, 44, 47, 49, 51, 53, 55, 58, 60, 66, 67, 68, 72, 75, 76, 78, 86, 87, 96, 97, 99, 100, 103, 107, 114, 119, 120, 123, 127, 128, 130, 139, 140, 141, 146, 148, 152, 153, 154, 159, 160, 162, 164, 167, 168, 173, 175, 179, 181, 183, 187], 308, 377)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 685 rows, 1131 columns and 1885 nonzeros
Model fingerprint: 0x9b289d65
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 685 rows and 1131 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.2000000e+02   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  1.200000000e+02

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.873997 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.126003

 more cuts: false 0.37440436847593095 false
is_attach:trueformulation:LEFPAD0 377 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.126003
MIPGapAbs  0.999998
Threads  1

Optimize a model with 5571 rows, 4490 columns and 13750 nonzeros
Model fingerprint: 0x9235893f
Variable types: 2091 continuous, 2399 integer (2399 binary)
Coefficient statistics:
  Matrix range     [7e-04, 8e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e-03, 8e+00]
  RHS range        [1e-06, 8e+00]
Presolve removed 3881 rows and 2684 columns
Presolve time: 0.03s
Presolved: 1690 rows, 1806 columns, 5053 nonzeros
Variable types: 1003 continuous, 803 integer (803 binary)
Found heuristic solution: objective 1130.0000000

Explored 0 nodes (0 simplex iterations) in 0.05 seconds (0.02 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 1130 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.130000000000e+03, best bound 1.130000000000e+03, gap 0.0000%

User-callback calls 558, time in user-callback 0.00 sec

 sepatime0 0 0
1130.0Stat(MathOptInterface.OPTIMAL, 1130.0, 1130.0, 0.0, 0.0, 1.873997, 0.04706883430480957, 0, Main.CFLG.LEFPAD, "", #undef)
