Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_A
Instance: treeA.500.50
Result path: /scratch/opt/lxu/CFLG/results/tree_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_A treeA.500.50 /scratch/opt/lxu/CFLG/results/tree_A Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_A treeA.500.50 LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/tree_A/treeA.500.50

 read graph
data loaded


after absorb:311 500

max_piece:28
problem_graph/original graph: node: 311/500 edge: 360/549 dlt: 0.37369444700957516 break_avg_len: 2.279536126758407 break_max_len: 10.03281309615021Vbar/V, Ebar/E(134, 311, 183, 360)
(3, 270)(5, 95)(5, 258)(13, 248)(18, 35)(30, 218)(30, 130)(38, 181)(38, 268)(38, 199)(39, 235)(39, 130)(25, 41)(41, 60)(42, 187)(42, 310)(42, 177)(43, 74)(44, 235)(35, 45)(45, 157)(5, 48)(49, 283)(49, 253)(53, 147)(53, 201)(57, 134)(1, 62)(66, 257)(66, 289)(68, 140)(68, 287)(69, 116)(3, 72)(72, 97)(74, 135)(36, 74)(78, 161)(81, 175)(81, 87)(44, 81)(85, 248)(85, 156)(87, 232)(87, 187)(90, 109)(90, 140)(41, 91)(91, 107)(73, 92)(92, 236)(94, 96)(94, 201)(1, 96)(87, 100)(25, 100)(102, 268)(102, 199)(31, 102)(34, 105)(97, 106)(106, 146)(106, 262)(106, 201)(109, 113)(85, 113)(40, 117)(42, 117)(60, 117)(107, 117)(117, 155)(30, 119)(57, 119)(135, 260)(144, 269)(96, 144)(145, 292)(30, 145)(34, 146)(146, 207)(151, 180)(94, 151)(36, 151)(151, 287)(153, 204)(35, 153)(159, 264)(159, 218)(62, 159)(166, 216)(48, 166)(78, 175)(175, 255)(116, 177)(26, 181)(181, 260)(184, 253)(130, 184)(4, 184)(184, 219)(147, 185)(105, 185)(69, 185)(148, 188)(188, 270)(148, 191)(192, 216)(192, 269)(192, 286)(25, 197)(197, 249)(135, 197)(180, 199)(204, 232)(140, 204)(43, 206)(157, 206)(53, 207)(24, 207)(100, 207)(207, 212)(208, 235)(204, 208)(212, 253)(212, 296)(180, 213)(116, 213)(48, 214)(18, 214)(36, 217)(161, 219)(217, 223)(117, 223)(225, 270)(130, 225)(226, 260)(57, 226)(226, 262)(73, 228)(217, 233)(95, 233)(233, 270)(234, 257)(1, 234)(206, 234)(107, 236)(241, 281)(191, 242)(242, 270)(249, 281)(248, 252)(36, 252)(31, 252)(219, 253)(100, 255)(4, 255)(134, 258)(167, 260)(156, 264)(219, 264)(267, 282)(1, 267)(1, 278)(228, 278)(13, 278)(105, 278)(38, 278)(26, 278)(148, 282)(204, 283)(241, 285)(281, 285)(40, 286)(85, 289)(167, 289)(148, 289)(24, 292)(43, 292)(40, 296)(267, 302)(155, 302)(60, 310)(156, 310)(Dict(5 => 5.0, 56 => 2.0, 35 => 2.0, 55 => 4.0, 123 => 2.0, 60 => 8.0, 30 => 2.0, 32 => 4.0, 67 => 7.0, 45 => 4.0, 117 => 10.0, 73 => 4.0, 112 => 7.0, 90 => 3.0, 63 => 1.0, 62 => 2.0, 122 => 2.0, 58 => 6.0, 52 => 3.0, 12 => 5.0, 28 => 2.0, 23 => 7.0, 111 => 7.0, 41 => 13.0, 11 => 4.0, 36 => 3.0, 68 => 25.0, 69 => 6.0, 98 => 2.0, 82 => 4.0, 130 => 8.0, 119 => 5.0, 125 => 5.0, 39 => 3.0, 84 => 4.0, 77 => 2.0, 7 => 4.0, 108 => 2.0, 59 => 5.0, 50 => 4.0, 93 => 2.0, 27 => 8.0, 10 => 2.0, 26 => 4.0, 87 => 24.0, 132 => 4.0, 116 => 2.0, 100 => 2.0, 127 => 4.0, 79 => 1.0, 16 => 3.0, 20 => 8.0, 19 => 1.0, 49 => 2.0, 9 => 23.0, 106 => 5.0, 109 => 12.0, 61 => 4.0, 29 => 2.0, 94 => 4.0, 107 => 9.0, 46 => 5.0, 128 => 4.0, 102 => 2.0, 57 => 3.0, 70 => 6.0, 21 => 4.0, 38 => 14.0, 129 => 9.0, 88 => 2.0, 131 => 8.0, 101 => 4.0, 105 => 6.0, 133 => 2.0, 72 => 8.0, 24 => 37.0, 8 => 4.0, 17 => 2.0, 37 => 13.0, 53 => 11.0, 22 => 2.0, 47 => 4.0, 121 => 4.0, 14 => 10.0, 3 => 3.0, 80 => 8.0, 96 => 2.0, 33 => 6.0, 40 => 2.0, 48 => 6.0, 113 => 2.0, 97 => 8.0, 134 => 1.0), [3, 12, 27, 30, 35, 38, 45, 52, 56, 60, 105, 108, 109, 112, 113, 128, 130, 132, 7, 8, 9, 14, 29, 32, 36, 39, 48, 49, 53, 55, 58, 59, 61, 67, 73, 82, 84, 94, 96, 102, 106, 107, 119, 121, 129, 131, 133, 10, 16, 19, 21, 22, 23, 37, 40, 41, 46, 47, 50, 63, 68, 77, 79, 88, 90, 93, 101, 111, 117, 134, 5, 11, 17, 20, 24, 26, 28, 33, 57, 62, 69, 70, 72, 80, 87, 97, 98, 100, 116, 122, 123, 125, 127], 227, 276)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 503 rows, 828 columns and 1380 nonzeros
Model fingerprint: 0x00ead931
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 503 rows and 828 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    9.3000000e+01   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  9.300000000e+01

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.794601 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.205399

 more cuts: false 0.37369444700957516 false
is_attach:trueformulation:LEFPAI0 276 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.205399
MIPGapAbs  0.999998
Threads  1

Optimize a model with 2390 rows, 2565 columns and 5423 nonzeros
Model fingerprint: 0x60e8ce8d
Model has 1007 simple general constraints
  1007 INDICATOR
Variable types: 779 continuous, 1786 integer (1786 binary)
Coefficient statistics:
  Matrix range     [1e-03, 7e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e-03, 7e+00]
  RHS range        [1e-06, 7e+00]
  GenCon rhs range [4e-03, 7e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 2390 rows and 2565 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 754 

Optimal solution found (tolerance 1.00e-04)
Best objective 7.540000000000e+02, best bound 7.540000000000e+02, gap 0.0000%

User-callback calls 1006, time in user-callback 0.00 sec

 sepatime0 0 0
754.0Stat(MathOptInterface.OPTIMAL, 754.0, 754.0, 0.0, 0.0, 1.794601, 0.009629964828491211, 0, Main.CFLG.LEFPAI, "", #undef)
