Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_A
Instance: treeA.500.75
Result path: /scratch/opt/lxu/CFLG/results/tree_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_A treeA.500.75 /scratch/opt/lxu/CFLG/results/tree_A Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_A treeA.500.75 LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/tree_A/treeA.500.75

 read graph
data loaded


after absorb:325 500

max_piece:20
problem_graph/original graph: node: 325/500 edge: 399/574 dlt: 0.3714517040518965 break_avg_len: 2.1374764724389843 break_max_len: 7.267543709448426Vbar/V, Ebar/E(173, 325, 247, 399)
(3, 177)(3, 80)(3, 221)(8, 289)(10, 205)(10, 277)(18, 243)(18, 270)(24, 40)(24, 104)(24, 313)(35, 239)(37, 181)(37, 94)(41, 71)(42, 114)(42, 271)(45, 288)(31, 45)(48, 68)(50, 204)(50, 197)(51, 94)(51, 148)(8, 52)(40, 52)(33, 52)(56, 298)(56, 123)(56, 247)(61, 281)(11, 61)(61, 154)(62, 98)(62, 162)(63, 160)(63, 154)(69, 109)(69, 265)(11, 69)(74, 275)(74, 247)(76, 279)(76, 303)(76, 129)(77, 279)(77, 98)(77, 249)(77, 210)(78, 112)(78, 153)(78, 301)(55, 80)(81, 237)(79, 81)(8, 82)(82, 127)(82, 111)(86, 180)(88, 98)(88, 205)(43, 88)(39, 90)(97, 255)(97, 204)(100, 297)(100, 126)(101, 150)(36, 101)(102, 122)(90, 102)(102, 153)(48, 103)(103, 204)(104, 253)(74, 104)(48, 105)(105, 288)(5, 105)(107, 169)(107, 227)(111, 179)(97, 114)(30, 114)(115, 127)(43, 115)(71, 115)(117, 288)(5, 117)(111, 120)(120, 276)(120, 284)(120, 221)(122, 124)(123, 260)(68, 127)(127, 170)(35, 129)(129, 147)(130, 306)(130, 133)(72, 133)(126, 139)(79, 139)(139, 163)(111, 141)(141, 221)(141, 290)(124, 141)(72, 148)(39, 150)(158, 207)(154, 158)(160, 306)(35, 160)(33, 160)(161, 227)(81, 161)(45, 166)(166, 301)(168, 224)(40, 168)(169, 212)(169, 265)(169, 270)(170, 265)(172, 270)(174, 260)(172, 174)(150, 177)(41, 177)(172, 177)(71, 177)(179, 242)(186, 237)(189, 252)(189, 300)(89, 192)(39, 192)(192, 290)(126, 197)(163, 197)(112, 200)(41, 201)(201, 240)(162, 202)(119, 202)(79, 202)(207, 289)(86, 209)(36, 209)(209, 293)(68, 210)(211, 320)(186, 211)(89, 211)(163, 212)(213, 237)(213, 300)(216, 314)(30, 218)(218, 271)(148, 218)(2, 220)(220, 298)(224, 255)(62, 227)(227, 233)(197, 227)(224, 228)(111, 228)(233, 275)(126, 233)(233, 310)(109, 234)(200, 234)(55, 236)(24, 236)(43, 238)(180, 240)(242, 281)(243, 313)(245, 297)(216, 245)(245, 325)(238, 246)(246, 249)(124, 247)(1, 249)(127, 249)(250, 283)(250, 290)(250, 284)(83, 252)(31, 253)(238, 256)(109, 256)(256, 289)(127, 260)(192, 263)(89, 263)(107, 263)(181, 265)(212, 265)(270, 274)(227, 274)(115, 274)(37, 274)(240, 275)(1, 276)(205, 276)(187, 277)(68, 277)(2, 279)(280, 303)(83, 280)(147, 281)(72, 283)(187, 283)(287, 297)(86, 293)(150, 296)(243, 296)(220, 296)(189, 296)(45, 296)(47, 300)(1, 301)(47, 310)(252, 312)(239, 312)(154, 313)(276, 314)(207, 316)(163, 316)(197, 316)(287, 317)(36, 317)(170, 317)(119, 320)(51, 321)(174, 321)(1, 323)(30, 323)(234, 323)(94, 325)(168, 325)(Dict(5 => 1.0, 56 => 1.0, 55 => 2.0, 123 => 2.0, 110 => 2.0, 60 => 4.0, 30 => 2.0, 32 => 1.0, 6 => 4.0, 117 => 4.0, 145 => 2.0, 73 => 2.0, 164 => 8.0, 115 => 2.0, 153 => 2.0, 112 => 2.0, 151 => 19.0, 139 => 2.0, 13 => 12.0, 54 => 3.0, 86 => 2.0, 168 => 2.0, 158 => 1.0, 150 => 2.0, 52 => 2.0, 173 => 5.0, 23 => 2.0, 111 => 2.0, 92 => 1.0, 41 => 2.0, 43 => 19.0, 11 => 1.0, 68 => 3.0, 36 => 2.0, 98 => 3.0, 69 => 4.0, 82 => 3.0, 85 => 5.0, 118 => 2.0, 125 => 4.0, 39 => 2.0, 84 => 6.0, 77 => 2.0, 126 => 2.0, 172 => 2.0, 103 => 2.0, 76 => 2.0, 59 => 3.0, 93 => 2.0, 124 => 2.0, 10 => 5.0, 18 => 3.0, 167 => 4.0, 87 => 22.0, 132 => 8.0, 140 => 3.0, 100 => 5.0, 127 => 5.0, 169 => 2.0, 157 => 10.0, 16 => 2.0, 141 => 2.0, 160 => 10.0, 135 => 2.0, 44 => 8.0, 9 => 4.0, 106 => 1.0, 109 => 1.0, 29 => 2.0, 46 => 12.0, 102 => 2.0, 128 => 2.0, 159 => 3.0, 170 => 11.0, 88 => 5.0, 163 => 5.0, 129 => 6.0, 101 => 2.0, 105 => 3.0, 133 => 2.0, 24 => 2.0, 8 => 11.0, 137 => 9.0, 53 => 2.0, 22 => 18.0, 47 => 6.0, 154 => 4.0, 166 => 2.0, 89 => 2.0, 80 => 2.0, 51 => 8.0, 33 => 4.0, 155 => 6.0, 143 => 2.0, 40 => 4.0, 97 => 2.0, 165 => 11.0, 142 => 5.0), [9, 13, 16, 18, 24, 32, 39, 40, 41, 46, 47, 51, 54, 68, 73, 77, 84, 86, 88, 92, 97, 98, 100, 102, 103, 105, 106, 115, 117, 125, 132, 133, 135, 140, 145, 150, 151, 155, 158, 160, 163, 164, 166, 167, 169, 170, 172, 5, 6, 8, 10, 11, 22, 23, 29, 30, 33, 36, 43, 44, 52, 53, 55, 56, 59, 60, 69, 76, 80, 82, 85, 87, 89, 93, 101, 109, 110, 111, 112, 118, 123, 124, 126, 127, 128, 129, 137, 139, 141, 142, 143, 153, 154, 157, 159, 165, 168, 173], 271, 345)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 616 rows, 1035 columns and 1725 nonzeros
Model fingerprint: 0xc6446141
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 616 rows and 1035 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    9.8000000e+01   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  9.800000000e+01

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.801303 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.198697

 more cuts: false 0.3714517040518965 false
is_attach:trueformulation:LEFPAI0 345 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.198697
MIPGapAbs  0.999998
Threads  1

Optimize a model with 2884 rows, 3132 columns and 6585 nonzeros
Model fingerprint: 0x50c7ab97
Model has 1210 simple general constraints
  1210 INDICATOR
Variable types: 961 continuous, 2171 integer (2171 binary)
Coefficient statistics:
  Matrix range     [3e-04, 7e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-04, 7e+00]
  RHS range        [1e-06, 7e+00]
  GenCon rhs range [6e-03, 7e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 2884 rows and 3132 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 711 

Optimal solution found (tolerance 1.00e-04)
Best objective 7.110000000000e+02, best bound 7.110000000000e+02, gap 0.0000%

User-callback calls 841, time in user-callback 0.00 sec

 sepatime0 0 0
711.0Stat(MathOptInterface.OPTIMAL, 711.0, 711.0, 0.0, 0.0, 1.801303, 0.010936975479125977, 0, Main.CFLG.LEFPAI, "", #undef)
