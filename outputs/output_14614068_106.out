Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B
Instance: K400.10.con.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAV
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B K400.10.con.red /scratch/opt/lxu/CFLG/results/Kgroup_B Gurobi 7200 LEFPAV Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_B K400.10.con.red LEFPAV Small
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B/K400.10.con.red

 read graph
data loaded


after absorb:220 221

max_piece:30
problem_graph/original graph: node: 333/221 edge: 1035/923 dlt: 0.03522927822971286 break_avg_len: 0.12566811132763275 break_max_len: 1.0Vbar/V, Ebar/E(333, 333, 1035, 1035)
(1, 116)(1, 152)(1, 38)(1, 78)(1, 200)(2, 221)(119, 221)(2, 157)(2, 183)(2, 109)(2, 177)(2, 6)(2, 141)(3, 159)(3, 222)(83, 222)(3, 51)(3, 223)(181, 223)(3, 81)(4, 57)(1, 224)(4, 224)(4, 152)(4, 59)(4, 139)(4, 38)(4, 78)(4, 96)(4, 85)(4, 200)(5, 92)(5, 48)(5, 225)(10, 225)(5, 94)(5, 26)(5, 30)(5, 28)(6, 183)(6, 141)(6, 34)(7, 115)(7, 22)(7, 99)(8, 18)(8, 182)(8, 218)(8, 129)(8, 132)(8, 54)(9, 97)(9, 75)(9, 76)(9, 203)(9, 206)(9, 19)(9, 17)(9, 185)(9, 193)(9, 168)(9, 113)(10, 92)(10, 155)(10, 26)(10, 214)(10, 12)(10, 28)(11, 119)(2, 11)(11, 226)(109, 226)(11, 227)(146, 227)(11, 228)(52, 228)(11, 177)(12, 30)(12, 32)(12, 214)(12, 211)(13, 27)(13, 98)(13, 150)(14, 102)(14, 117)(15, 86)(15, 50)(15, 192)(15, 229)(127, 229)(15, 131)(15, 164)(15, 66)(16, 35)(16, 159)(3, 16)(16, 230)(83, 230)(16, 51)(16, 181)(16, 81)(17, 84)(17, 97)(17, 186)(18, 29)(18, 210)(18, 231)(182, 231)(18, 129)(18, 132)(19, 97)(19, 201)(19, 122)(17, 19)(19, 186)(19, 27)(20, 36)(20, 204)(20, 47)(20, 88)(20, 164)(21, 102)(21, 67)(21, 232)(120, 232)(21, 77)(21, 80)(21, 100)(14, 21)(22, 207)(22, 233)(99, 233)(23, 31)(24, 47)(24, 36)(25, 83)(25, 51)(25, 215)(25, 56)(25, 111)(25, 162)(25, 114)(26, 92)(26, 48)(26, 104)(26, 234)(155, 234)(26, 107)(27, 235)(98, 235)(27, 196)(28, 153)(28, 30)(28, 212)(28, 214)(28, 156)(28, 211)(29, 210)(29, 108)(30, 156)(30, 32)(32, 192)(32, 236)(211, 236)(33, 119)(2, 33)(33, 109)(33, 153)(33, 146)(33, 52)(33, 177)(11, 237)(33, 237)(33, 180)(34, 71)(34, 190)(3, 35)(35, 83)(35, 238)(51, 238)(35, 181)(35, 239)(81, 239)(36, 240)(47, 240)(36, 110)(36, 192)(37, 62)(38, 115)(38, 241)(96, 241)(38, 99)(38, 78)(38, 207)(38, 242)(152, 242)(22, 38)(38, 243)(59, 243)(29, 39)(8, 244)(39, 244)(18, 39)(39, 182)(39, 210)(39, 54)(39, 245)(218, 245)(39, 129)(39, 132)(18, 40)(40, 182)(40, 210)(40, 129)(39, 40)(29, 40)(40, 132)(40, 54)(41, 169)(41, 123)(41, 179)(41, 246)(215, 246)(41, 87)(25, 41)(41, 247)(162, 247)(41, 65)(41, 114)(42, 69)(42, 248)(72, 248)(42, 208)(43, 151)(44, 145)(44, 89)(20, 44)(44, 131)(44, 164)(44, 46)(45, 117)(45, 67)(46, 145)(20, 46)(46, 131)(46, 164)(47, 192)(49, 159)(49, 105)(20, 50)(50, 131)(50, 164)(46, 50)(51, 249)(83, 249)(51, 181)(52, 119)(52, 250)(109, 250)(52, 251)(146, 251)(53, 169)(41, 53)(43, 53)(53, 215)(53, 87)(25, 53)(53, 162)(53, 114)(29, 54)(18, 54)(54, 182)(54, 210)(54, 218)(54, 129)(54, 252)(132, 252)(55, 101)(55, 201)(55, 253)(216, 253)(55, 122)(55, 254)(61, 254)(55, 62)(55, 95)(55, 141)(55, 196)(56, 151)(43, 255)(56, 255)(1, 57)(57, 256)(139, 256)(57, 200)(38, 57)(57, 152)(57, 85)(57, 59)(24, 58)(58, 72)(58, 93)(27, 58)(42, 58)(13, 58)(58, 165)(58, 98)(58, 220)(59, 99)(22, 60)(60, 115)(7, 60)(60, 207)(60, 99)(61, 101)(61, 71)(61, 62)(61, 257)(95, 257)(62, 71)(62, 101)(63, 92)(63, 118)(63, 129)(48, 63)(64, 102)(64, 120)(64, 205)(21, 258)(64, 258)(64, 74)(64, 80)(14, 64)(64, 67)(65, 174)(65, 215)(65, 259)(160, 259)(65, 114)(65, 68)(50, 260)(66, 260)(46, 66)(67, 102)(67, 117)(14, 261)(67, 261)(68, 160)(68, 105)(68, 174)(70, 175)(69, 70)(70, 154)(70, 72)(70, 219)(42, 70)(70, 208)(70, 262)(209, 262)(69, 72)(72, 208)(73, 118)(73, 218)(63, 73)(8, 73)(73, 263)(161, 263)(73, 149)(74, 264)(120, 264)(74, 77)(21, 265)(74, 265)(74, 80)(74, 100)(74, 166)(75, 84)(75, 97)(75, 186)(19, 266)(75, 266)(17, 267)(75, 267)(76, 97)(75, 76)(76, 203)(19, 76)(17, 76)(76, 268)(185, 268)(76, 193)(76, 168)(76, 113)(77, 194)(78, 115)(78, 152)(78, 96)(78, 99)(79, 144)(79, 105)(31, 79)(80, 120)(77, 80)(80, 207)(81, 154)(51, 81)(81, 181)(82, 188)(23, 82)(82, 184)(82, 167)(82, 269)(134, 269)(83, 181)(37, 270)(84, 270)(84, 271)(176, 271)(84, 141)(1, 85)(85, 272)(116, 272)(85, 171)(85, 199)(85, 200)(50, 86)(86, 127)(66, 86)(86, 187)(45, 86)(87, 169)(43, 87)(87, 215)(25, 87)(87, 162)(87, 114)(36, 88)(47, 273)(88, 273)(88, 110)(24, 88)(88, 164)(88, 163)(89, 145)(20, 89)(89, 164)(46, 89)(86, 90)(90, 191)(90, 127)(90, 107)(90, 148)(45, 90)(91, 117)(91, 149)(45, 91)(48, 92)(93, 159)(36, 93)(24, 274)(93, 274)(72, 93)(88, 93)(42, 93)(93, 204)(93, 165)(94, 109)(94, 146)(52, 94)(95, 101)(71, 95)(96, 115)(22, 96)(96, 275)(152, 275)(59, 96)(96, 207)(96, 99)(84, 97)(97, 186)(100, 120)(77, 100)(89, 100)(100, 194)(66, 100)(100, 187)(71, 101)(57, 102)(59, 102)(102, 139)(103, 144)(103, 136)(31, 103)(79, 103)(91, 104)(31, 105)(105, 174)(106, 276)(117, 276)(91, 106)(67, 106)(45, 106)(32, 107)(107, 172)(104, 277)(107, 277)(107, 148)(12, 107)(107, 127)(107, 214)(86, 107)(107, 191)(107, 170)(109, 119)(109, 177)(6, 109)(47, 110)(110, 192)(35, 278)(111, 278)(16, 111)(3, 111)(83, 111)(51, 279)(111, 279)(111, 181)(81, 111)(111, 112)(25, 112)(51, 112)(56, 112)(35, 112)(81, 112)(113, 158)(113, 193)(113, 150)(114, 160)(22, 115)(99, 115)(116, 217)(116, 171)(116, 199)(116, 200)(92, 118)(48, 118)(118, 129)(6, 119)(119, 141)(34, 119)(119, 177)(119, 183)(119, 153)(119, 190)(77, 120)(117, 121)(14, 121)(67, 121)(101, 122)(37, 122)(122, 176)(61, 122)(62, 122)(123, 280)(215, 280)(123, 160)(65, 281)(123, 281)(114, 123)(68, 123)(123, 124)(83, 124)(124, 125)(124, 215)(65, 124)(68, 124)(41, 125)(123, 125)(83, 125)(125, 162)(65, 125)(125, 215)(68, 125)(126, 171)(116, 126)(126, 213)(85, 126)(50, 127)(127, 192)(45, 127)(128, 200)(129, 182)(129, 132)(130, 144)(130, 184)(103, 130)(82, 130)(79, 130)(130, 134)(130, 188)(36, 131)(131, 204)(47, 131)(20, 131)(88, 131)(131, 192)(131, 164)(29, 132)(132, 282)(182, 282)(132, 210)(133, 138)(104, 133)(106, 133)(91, 133)(133, 149)(133, 283)(170, 283)(23, 134)(134, 184)(134, 284)(167, 284)(18, 135)(135, 182)(129, 135)(40, 135)(132, 135)(54, 285)(135, 285)(22, 136)(60, 136)(77, 136)(136, 207)(80, 136)(137, 159)(49, 137)(89, 137)(137, 178)(137, 194)(44, 137)(137, 166)(117, 138)(106, 286)(138, 286)(91, 138)(138, 149)(45, 138)(1, 139)(128, 139)(139, 200)(57, 140)(102, 287)(140, 287)(128, 140)(121, 140)(139, 140)(140, 288)(205, 288)(14, 140)(67, 140)(71, 141)(34, 289)(141, 289)(101, 141)(141, 153)(141, 190)(62, 141)(142, 290)(169, 290)(87, 142)(25, 142)(53, 142)(43, 291)(142, 291)(56, 292)(142, 292)(123, 143)(143, 160)(143, 293)(179, 293)(143, 162)(65, 294)(143, 294)(114, 143)(143, 215)(68, 143)(143, 295)(174, 295)(136, 144)(60, 144)(31, 144)(47, 145)(36, 145)(88, 145)(20, 145)(131, 296)(145, 296)(145, 297)(164, 297)(145, 204)(119, 146)(2, 146)(109, 146)(146, 177)(6, 146)(147, 175)(147, 154)(147, 219)(147, 209)(86, 148)(104, 148)(32, 148)(148, 172)(127, 148)(91, 148)(45, 148)(148, 170)(117, 149)(121, 149)(150, 158)(115, 152)(59, 152)(99, 152)(71, 153)(153, 190)(34, 153)(92, 155)(48, 155)(104, 155)(155, 170)(71, 156)(156, 192)(95, 156)(119, 157)(6, 157)(158, 175)(69, 159)(159, 204)(24, 159)(118, 161)(121, 161)(63, 161)(161, 218)(8, 161)(149, 161)(162, 174)(123, 162)(162, 179)(162, 215)(160, 162)(65, 162)(114, 162)(47, 163)(36, 163)(163, 192)(110, 163)(36, 164)(47, 164)(159, 165)(36, 165)(24, 165)(72, 165)(88, 165)(42, 165)(165, 204)(120, 166)(77, 298)(166, 298)(89, 166)(166, 299)(194, 299)(44, 166)(100, 300)(166, 300)(23, 167)(167, 213)(158, 168)(168, 301)(193, 301)(168, 302)(203, 302)(113, 168)(150, 303)(168, 303)(25, 169)(43, 169)(114, 169)(56, 169)(138, 170)(104, 170)(91, 304)(170, 304)(45, 170)(171, 217)(108, 171)(30, 172)(32, 172)(172, 192)(172, 305)(211, 305)(115, 173)(7, 173)(78, 173)(173, 213)(167, 173)(173, 188)(160, 174)(31, 174)(101, 176)(37, 176)(62, 176)(6, 177)(141, 177)(34, 177)(177, 183)(153, 177)(177, 190)(159, 178)(49, 178)(123, 179)(160, 306)(179, 306)(65, 307)(179, 307)(114, 179)(179, 215)(174, 179)(109, 180)(146, 180)(94, 180)(52, 180)(11, 308)(180, 308)(159, 181)(29, 182)(182, 210)(71, 183)(183, 190)(153, 183)(141, 309)(183, 309)(34, 310)(183, 310)(23, 184)(31, 184)(17, 185)(185, 193)(185, 203)(113, 185)(97, 185)(19, 185)(75, 185)(186, 201)(122, 186)(186, 196)(50, 311)(187, 311)(66, 187)(46, 187)(7, 188)(60, 188)(167, 188)(189, 210)(182, 189)(189, 218)(128, 189)(8, 189)(39, 189)(29, 189)(108, 189)(71, 190)(86, 312)(191, 312)(127, 191)(66, 191)(15, 191)(45, 191)(158, 313)(193, 313)(150, 314)(193, 314)(89, 194)(44, 194)(46, 194)(195, 202)(87, 195)(41, 195)(53, 195)(179, 195)(162, 195)(114, 195)(195, 215)(196, 201)(61, 196)(95, 196)(98, 196)(95, 197)(101, 197)(197, 201)(122, 315)(197, 315)(176, 197)(55, 316)(197, 316)(186, 197)(197, 216)(61, 197)(62, 197)(196, 197)(10, 317)(198, 317)(94, 198)(198, 214)(5, 318)(198, 318)(12, 198)(30, 198)(28, 198)(199, 217)(108, 199)(199, 200)(101, 201)(37, 201)(122, 201)(176, 201)(61, 201)(62, 201)(169, 319)(202, 319)(142, 320)(202, 320)(41, 202)(43, 202)(53, 321)(202, 321)(56, 202)(87, 322)(202, 322)(25, 202)(162, 202)(114, 202)(158, 203)(193, 203)(113, 203)(150, 323)(203, 323)(69, 204)(36, 204)(42, 204)(47, 324)(204, 324)(110, 204)(24, 204)(88, 204)(164, 204)(163, 204)(57, 205)(102, 205)(128, 205)(121, 205)(139, 205)(21, 205)(14, 325)(205, 325)(67, 205)(97, 206)(75, 206)(76, 206)(19, 206)(17, 206)(185, 206)(158, 206)(193, 206)(168, 206)(113, 326)(206, 326)(59, 207)(99, 207)(69, 208)(175, 209)(154, 209)(108, 210)(30, 211)(192, 211)(156, 211)(119, 212)(183, 212)(190, 212)(153, 212)(177, 212)(11, 212)(33, 212)(34, 212)(115, 213)(152, 213)(78, 213)(96, 213)(30, 327)(214, 327)(32, 214)(172, 214)(211, 214)(174, 215)(160, 215)(114, 328)(215, 328)(101, 329)(216, 329)(201, 216)(37, 216)(122, 216)(176, 216)(61, 216)(62, 330)(216, 330)(141, 216)(108, 217)(18, 218)(182, 331)(218, 331)(129, 218)(132, 218)(154, 332)(219, 332)(209, 219)(159, 220)(36, 220)(24, 333)(220, 333)(72, 220)(93, 220)(88, 220)(42, 220)(204, 220)(165, 220)(Dict{Int64, Float64}(), Int64[], 333, 1035)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 1368 rows, 3105 columns and 5175 nonzeros
Model fingerprint: 0x95c1c253
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Presolve removed 1368 rows and 3105 columns
Presolve time: 0.01s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0   -0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective -0.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.938311 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.061689

 more cuts: false 0.03522927822971286 false
is_attach:trueformulation:LEFPAV0 1035 0
Set parameter PreCrush to value 1

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.061689
MIPGapAbs  0.999998
PreCrush  1
Threads  1

Optimize a model with 16458 rows, 10940 columns and 45270 nonzeros
Model fingerprint: 0x4269715a
Variable types: 2403 continuous, 8537 integer (8537 binary)
Coefficient statistics:
  Matrix range     [5e-04, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [5e-04, 1e+00]
  RHS range        [5e-04, 1e+00]
Found heuristic solution: objective 1011.0000000
Presolve removed 16308 rows and 10798 columns
Presolve time: 0.16s
Presolved: 150 rows, 142 columns, 408 nonzeros
Found heuristic solution: objective 785.0000000
Variable types: 45 continuous, 97 integer (97 binary)
Found heuristic solution: objective 779.0000000

Root relaxation: objective 7.610000e+02, 50 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  761.00000    0    2  779.00000  761.00000  2.31%     -    0s
     0     0  761.00000    0    2  779.00000  761.00000  2.31%     -    0s
H    0     0                     761.0000000  761.00000  0.00%     -    0s
     0     0  761.00000    0    2  761.00000  761.00000  0.00%     -    0s

Explored 1 nodes (51 simplex iterations) in 0.17 seconds (0.11 work units)
Thread count was 1 (of 16 available processors)

Solution count 4: 761 779 785 1011 

Optimal solution found (tolerance 1.00e-04)
Warning: max constraint violation (1.0000e-06) exceeds tolerance
Best objective 7.610000000000e+02, best bound 7.610000000000e+02, gap 0.0000%

User-callback calls 2316, time in user-callback 0.81 sec

 sepatime0 2320 0
761.0Stat(MathOptInterface.OPTIMAL, 761.0, 761.0, 0.0, 0.0, 1.938311, 0.17168688774108887, 1, Main.CFLG.LEFPAV, "", #undef)
