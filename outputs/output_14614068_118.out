Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B
Instance: K400.2.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B K400.2.red /scratch/opt/lxu/CFLG/results/Kgroup_B Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_B K400.2.red LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B/K400.2.red

 read graph
data loaded


after absorb:226 228

max_piece:18
problem_graph/original graph: node: 341/228 edge: 1061/948 dlt: 0.058609377308083396 break_avg_len: 0.20946914114255558 break_max_len: 1.0Vbar/V, Ebar/E(340, 341, 1060, 1061)
(2, 227)(121, 227)(2, 112)(3, 228)(202, 228)(3, 83)(3, 153)(3, 183)(3, 85)(3, 51)(4, 70)(4, 126)(4, 107)(4, 9)(4, 150)(4, 139)(5, 185)(5, 155)(5, 61)(5, 62)(5, 143)(6, 117)(6, 59)(6, 101)(6, 229)(213, 229)(7, 17)(7, 134)(7, 54)(8, 161)(8, 147)(8, 186)(8, 230)(106, 230)(8, 156)(8, 132)(8, 191)(8, 46)(9, 146)(9, 126)(9, 25)(9, 110)(9, 150)(10, 117)(10, 96)(10, 78)(10, 154)(10, 54)(10, 224)(10, 131)(10, 59)(10, 134)(11, 184)(11, 32)(11, 220)(11, 174)(12, 35)(12, 104)(12, 42)(12, 210)(12, 152)(12, 153)(12, 84)(12, 51)(12, 19)(12, 23)(13, 206)(13, 201)(14, 149)(14, 129)(14, 221)(14, 88)(14, 130)(14, 225)(14, 164)(14, 65)(15, 202)(3, 15)(15, 183)(15, 83)(16, 114)(16, 85)(16, 183)(17, 179)(17, 134)(18, 114)(18, 85)(18, 183)(16, 231)(18, 231)(19, 232)(72, 232)(19, 104)(19, 233)(42, 233)(19, 43)(19, 210)(19, 153)(19, 23)(19, 90)(20, 22)(20, 223)(20, 173)(20, 38)(20, 196)(20, 178)(20, 31)(20, 162)(21, 59)(21, 213)(21, 234)(101, 234)(22, 38)(22, 60)(22, 31)(23, 69)(23, 72)(23, 33)(23, 104)(23, 42)(23, 43)(23, 182)(23, 48)(23, 158)(24, 213)(21, 24)(24, 120)(24, 63)(24, 59)(24, 50)(24, 235)(46, 235)(24, 191)(24, 101)(25, 146)(25, 131)(25, 96)(25, 110)(25, 150)(25, 236)(135, 236)(25, 52)(26, 60)(26, 165)(26, 111)(26, 205)(26, 68)(27, 184)(27, 32)(27, 220)(27, 174)(11, 27)(28, 76)(28, 237)(171, 237)(28, 89)(28, 187)(28, 212)(29, 160)(29, 216)(29, 86)(29, 222)(30, 238)(138, 238)(30, 117)(30, 224)(30, 239)(131, 239)(30, 240)(96, 240)(10, 30)(31, 38)(31, 60)(32, 170)(33, 182)(33, 112)(33, 87)(34, 103)(34, 194)(34, 176)(35, 202)(3, 35)(35, 104)(35, 43)(35, 210)(35, 153)(35, 51)(19, 35)(35, 90)(35, 133)(36, 173)(31, 36)(36, 97)(36, 241)(100, 241)(34, 36)(36, 103)(36, 111)(36, 242)(47, 242)(36, 196)(37, 47)(37, 173)(36, 37)(37, 196)(37, 97)(37, 100)(37, 113)(34, 37)(38, 60)(17, 39)(7, 243)(39, 243)(39, 134)(39, 54)(17, 244)(40, 244)(7, 40)(39, 245)(40, 245)(40, 134)(40, 54)(1, 41)(41, 141)(41, 166)(41, 81)(41, 102)(42, 72)(43, 246)(72, 246)(43, 104)(42, 43)(43, 247)(153, 247)(44, 207)(44, 91)(45, 94)(45, 48)(45, 112)(33, 45)(45, 248)(151, 248)(45, 87)(46, 147)(46, 120)(46, 140)(46, 63)(46, 186)(47, 249)(173, 249)(31, 47)(47, 100)(34, 47)(38, 47)(47, 111)(47, 196)(48, 158)(48, 112)(48, 182)(33, 250)(48, 250)(48, 87)(49, 251)(159, 251)(49, 88)(49, 148)(49, 109)(49, 215)(21, 50)(50, 120)(50, 140)(50, 63)(6, 50)(50, 98)(50, 213)(50, 101)(51, 202)(51, 104)(43, 51)(51, 153)(19, 51)(51, 90)(51, 133)(52, 131)(7, 52)(39, 52)(52, 134)(53, 57)(1, 53)(41, 53)(53, 141)(53, 81)(17, 54)(54, 224)(54, 154)(54, 134)(55, 103)(55, 68)(55, 252)(201, 252)(56, 253)(105, 253)(56, 149)(56, 181)(14, 56)(56, 129)(56, 219)(56, 221)(56, 88)(56, 225)(56, 164)(56, 254)(65, 254)(1, 57)(57, 141)(57, 87)(58, 255)(95, 255)(58, 198)(44, 58)(58, 167)(59, 101)(61, 155)(61, 62)(62, 155)(63, 256)(120, 256)(63, 257)(140, 257)(58, 64)(64, 128)(64, 95)(64, 258)(92, 258)(64, 198)(44, 259)(64, 259)(64, 167)(5, 65)(65, 149)(65, 215)(65, 185)(65, 260)(221, 260)(65, 225)(65, 168)(66, 120)(66, 140)(63, 66)(67, 206)(55, 67)(13, 67)(67, 201)(68, 111)(69, 94)(1, 69)(57, 69)(69, 182)(33, 69)(69, 158)(70, 142)(71, 176)(73, 220)(73, 209)(73, 174)(73, 170)(11, 73)(62, 74)(74, 168)(13, 74)(75, 118)(75, 99)(27, 75)(58, 76)(76, 128)(76, 178)(76, 92)(64, 76)(76, 187)(76, 113)(77, 216)(77, 207)(77, 95)(29, 77)(77, 91)(77, 198)(77, 226)(78, 117)(78, 154)(59, 78)(78, 213)(78, 101)(79, 161)(79, 186)(79, 156)(80, 84)(80, 197)(79, 80)(12, 80)(80, 82)(80, 200)(80, 152)(1, 81)(69, 81)(81, 141)(81, 261)(102, 261)(81, 182)(57, 81)(81, 166)(82, 132)(82, 200)(83, 202)(3, 84)(51, 84)(35, 84)(85, 202)(85, 183)(1, 87)(88, 225)(88, 262)(129, 262)(88, 149)(89, 171)(22, 89)(89, 178)(20, 89)(90, 104)(90, 263)(153, 263)(72, 90)(43, 90)(90, 166)(91, 216)(29, 91)(86, 91)(58, 92)(92, 95)(92, 178)(92, 198)(44, 92)(92, 167)(92, 113)(93, 94)(48, 93)(93, 112)(33, 93)(93, 264)(151, 264)(45, 93)(87, 93)(94, 158)(48, 265)(94, 265)(94, 112)(94, 182)(33, 266)(94, 266)(87, 94)(44, 95)(91, 95)(95, 267)(198, 267)(95, 268)(167, 268)(96, 131)(52, 96)(96, 134)(97, 103)(97, 194)(71, 97)(34, 269)(97, 269)(97, 176)(21, 270)(98, 270)(6, 98)(98, 154)(59, 98)(98, 213)(98, 101)(99, 184)(32, 99)(99, 220)(99, 174)(11, 99)(27, 99)(100, 173)(34, 100)(38, 100)(100, 111)(1, 102)(69, 102)(23, 102)(102, 166)(102, 182)(71, 103)(103, 194)(72, 271)(104, 271)(42, 272)(104, 272)(105, 149)(105, 181)(14, 105)(105, 129)(105, 221)(88, 105)(105, 225)(105, 164)(65, 105)(106, 273)(161, 273)(106, 147)(106, 186)(106, 156)(79, 106)(70, 274)(107, 274)(107, 142)(61, 108)(108, 143)(109, 159)(109, 112)(93, 109)(109, 151)(45, 109)(110, 146)(110, 131)(52, 110)(96, 110)(110, 275)(135, 275)(31, 111)(38, 111)(60, 111)(112, 121)(113, 196)(100, 113)(114, 202)(3, 114)(85, 276)(114, 276)(114, 183)(57, 115)(1, 115)(41, 115)(115, 277)(141, 277)(53, 278)(115, 278)(115, 279)(144, 279)(81, 115)(87, 115)(116, 155)(62, 280)(116, 280)(74, 116)(116, 168)(59, 281)(117, 281)(117, 213)(101, 117)(103, 119)(119, 194)(119, 165)(55, 119)(34, 119)(119, 201)(120, 140)(122, 216)(122, 207)(77, 282)(122, 282)(29, 122)(91, 122)(122, 198)(122, 283)(226, 283)(103, 123)(119, 123)(55, 284)(123, 284)(67, 123)(123, 285)(201, 285)(47, 124)(124, 286)(173, 286)(36, 124)(38, 124)(37, 124)(124, 196)(31, 124)(124, 165)(111, 287)(124, 287)(100, 124)(125, 155)(62, 125)(74, 125)(125, 168)(116, 125)(126, 146)(118, 126)(126, 127)(127, 146)(118, 127)(58, 288)(128, 288)(95, 128)(92, 128)(128, 198)(44, 128)(128, 289)(167, 289)(129, 290)(225, 290)(129, 291)(149, 291)(130, 206)(71, 130)(130, 176)(131, 134)(132, 161)(132, 186)(106, 132)(132, 156)(79, 132)(72, 292)(133, 292)(104, 133)(42, 293)(133, 293)(43, 133)(133, 210)(133, 294)(153, 294)(19, 133)(23, 133)(90, 133)(133, 166)(131, 135)(96, 135)(135, 150)(52, 135)(136, 176)(130, 136)(71, 136)(136, 148)(136, 164)(14, 136)(137, 295)(145, 295)(137, 155)(125, 296)(137, 296)(62, 297)(137, 297)(137, 298)(218, 298)(74, 137)(137, 168)(116, 137)(138, 160)(138, 224)(131, 138)(29, 138)(96, 138)(10, 138)(78, 138)(138, 222)(70, 299)(139, 299)(107, 139)(139, 157)(139, 150)(139, 172)(1, 300)(141, 300)(87, 141)(127, 142)(143, 155)(61, 301)(143, 301)(62, 143)(1, 144)(41, 144)(141, 302)(144, 302)(53, 144)(144, 166)(81, 144)(13, 145)(125, 145)(62, 145)(74, 145)(145, 168)(116, 145)(99, 146)(75, 146)(27, 146)(147, 177)(147, 207)(86, 147)(121, 303)(148, 303)(148, 159)(2, 148)(149, 225)(149, 215)(70, 150)(126, 150)(94, 151)(57, 151)(48, 151)(112, 151)(33, 151)(87, 304)(151, 304)(152, 153)(84, 152)(3, 152)(51, 305)(152, 305)(35, 306)(152, 306)(72, 153)(104, 153)(42, 153)(117, 154)(101, 154)(6, 307)(154, 307)(154, 308)(213, 308)(59, 309)(154, 309)(156, 161)(147, 156)(156, 186)(156, 177)(156, 207)(86, 156)(17, 157)(70, 157)(107, 157)(39, 157)(40, 157)(142, 157)(157, 310)(172, 310)(2, 158)(158, 182)(33, 158)(121, 159)(112, 159)(86, 160)(160, 222)(147, 161)(161, 177)(86, 161)(22, 311)(162, 311)(162, 223)(162, 173)(38, 312)(162, 312)(60, 162)(31, 162)(162, 313)(205, 313)(120, 163)(140, 163)(63, 163)(6, 163)(50, 163)(163, 179)(98, 163)(163, 213)(164, 314)(181, 314)(164, 315)(221, 315)(130, 164)(65, 164)(164, 168)(47, 165)(165, 173)(36, 165)(31, 165)(111, 316)(165, 316)(100, 165)(72, 166)(42, 166)(43, 166)(23, 166)(91, 167)(167, 198)(44, 167)(155, 168)(62, 168)(137, 169)(169, 190)(125, 169)(74, 169)(116, 169)(13, 169)(145, 169)(170, 209)(22, 171)(171, 223)(162, 171)(17, 172)(70, 172)(107, 317)(172, 317)(39, 172)(142, 172)(40, 172)(31, 173)(38, 173)(111, 173)(173, 223)(60, 173)(174, 184)(32, 174)(170, 174)(175, 176)(130, 175)(71, 175)(164, 175)(14, 175)(136, 175)(175, 192)(177, 318)(207, 318)(86, 177)(37, 178)(38, 178)(178, 196)(100, 178)(113, 319)(178, 319)(159, 180)(88, 180)(49, 180)(109, 180)(93, 180)(180, 215)(65, 181)(181, 221)(168, 181)(57, 182)(183, 202)(118, 184)(61, 185)(143, 185)(147, 186)(177, 186)(186, 207)(86, 186)(161, 320)(186, 320)(58, 187)(128, 187)(95, 187)(167, 187)(171, 188)(28, 188)(146, 188)(110, 188)(187, 188)(188, 212)(82, 189)(189, 197)(79, 189)(80, 321)(189, 321)(12, 189)(18, 189)(189, 200)(16, 189)(68, 190)(190, 201)(147, 191)(120, 191)(140, 191)(63, 191)(186, 191)(66, 191)(46, 191)(176, 192)(130, 192)(71, 192)(148, 192)(164, 192)(14, 192)(136, 192)(17, 193)(7, 322)(193, 322)(40, 323)(193, 323)(39, 193)(134, 193)(54, 193)(71, 194)(176, 194)(130, 195)(181, 195)(195, 206)(173, 324)(196, 324)(31, 196)(100, 325)(196, 325)(38, 196)(111, 196)(196, 223)(162, 196)(84, 197)(85, 197)(152, 197)(44, 326)(198, 326)(91, 198)(146, 199)(184, 199)(199, 203)(11, 199)(99, 199)(27, 199)(75, 199)(132, 200)(79, 200)(68, 201)(146, 203)(184, 203)(11, 203)(27, 203)(99, 203)(75, 203)(70, 204)(131, 204)(107, 204)(25, 204)(96, 204)(52, 204)(110, 204)(150, 204)(135, 204)(139, 204)(22, 327)(205, 327)(205, 328)(223, 328)(173, 205)(38, 205)(60, 205)(31, 205)(71, 206)(176, 206)(86, 207)(1, 208)(41, 208)(115, 208)(141, 208)(53, 208)(166, 208)(144, 329)(208, 329)(15, 208)(83, 208)(72, 330)(210, 330)(104, 210)(42, 210)(43, 210)(153, 210)(23, 210)(90, 210)(18, 211)(183, 211)(16, 211)(58, 212)(76, 212)(171, 212)(128, 212)(187, 331)(212, 331)(135, 212)(167, 212)(101, 213)(59, 332)(213, 332)(17, 214)(193, 214)(6, 214)(154, 214)(179, 214)(54, 214)(213, 214)(185, 215)(61, 215)(5, 215)(143, 215)(207, 216)(177, 216)(160, 216)(86, 216)(216, 222)(155, 218)(125, 218)(62, 333)(218, 333)(181, 218)(74, 218)(168, 334)(218, 334)(116, 218)(145, 335)(218, 335)(88, 336)(219, 336)(105, 219)(219, 337)(225, 337)(129, 219)(149, 338)(219, 338)(14, 219)(184, 220)(32, 220)(174, 339)(220, 339)(168, 221)(78, 222)(86, 222)(22, 340)(223, 340)(38, 341)(223, 341)(60, 223)(31, 223)(117, 224)(131, 224)(59, 224)(154, 224)(78, 224)(134, 224)(215, 225)(216, 226)(95, 226)(91, 226)(29, 226)(198, 226)(44, 226)(Dict(128 => 1.0), [128], 341, 1061)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 1402 rows, 3183 columns and 5305 nonzeros
Model fingerprint: 0x29bc3eca
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 1402 rows and 3183 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  1.000000000e+00

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.928095 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.071905

 more cuts: false 0.058609377308083396 false
is_attach:trueformulation:LEFPAI0 1061 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.071905
MIPGapAbs  0.999998
Threads  1

Optimize a model with 10519 rows, 11122 columns and 27687 nonzeros
Model fingerprint: 0xe801794c
Model has 6196 simple general constraints
  6196 INDICATOR
Variable types: 2463 continuous, 8659 integer (8659 binary)
Coefficient statistics:
  Matrix range     [2e-04, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [2e-04, 1e+00]
  RHS range        [1e-06, 1e+00]
  GenCon rhs range [6e-08, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 9861 rows and 10563 columns
Presolve time: 0.11s
Presolved: 658 rows, 559 columns, 1716 nonzeros
Variable types: 35 continuous, 524 integer (524 binary)
Found heuristic solution: objective 800.0000000
Found heuristic solution: objective 799.0000000
Performing another presolve...
Presolve removed 658 rows and 559 columns
Presolve time: 0.00s
Found heuristic solution: objective 789.0000000

Explored 1 nodes (0 simplex iterations) in 0.13 seconds (0.09 work units)
Thread count was 1 (of 16 available processors)

Solution count 3: 789 799 800 

Optimal solution found (tolerance 1.00e-04)
Warning: max constraint violation (1.0000e-06) exceeds tolerance
Warning: max general constraint violation (1.0000e-06) exceeds tolerance
Best objective 7.890000000000e+02, best bound 7.890000000000e+02, gap 0.0000%

User-callback calls 1658, time in user-callback 0.00 sec

 sepatime0 0 0
789.0Stat(MathOptInterface.OPTIMAL, 789.0, 789.0, 0.0, 0.0, 1.928095, 0.12843990325927734, 1, Main.CFLG.LEFPAI, "", #undef)
