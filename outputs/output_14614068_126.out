Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B
Instance: K400.3.con.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B K400.3.con.red /scratch/opt/lxu/CFLG/results/Kgroup_B Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_B K400.3.con.red LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B/K400.3.con.red

 read graph
data loaded


after absorb:210 210

max_piece:24
problem_graph/original graph: node: 304/210 edge: 900/806 dlt: 0.04199473671043244 break_avg_len: 0.1504344790604824 break_max_len: 1.0Vbar/V, Ebar/E(303, 304, 899, 900)
(1, 123)(1, 211)(191, 211)(2, 114)(2, 151)(2, 212)(104, 212)(2, 213)(171, 213)(2, 5)(3, 75)(3, 47)(3, 50)(1, 214)(4, 214)(4, 123)(4, 133)(4, 215)(79, 215)(4, 191)(6, 110)(6, 93)(6, 19)(6, 216)(55, 216)(7, 15)(7, 192)(7, 170)(8, 181)(8, 217)(37, 217)(8, 88)(8, 218)(48, 218)(9, 33)(9, 170)(9, 219)(29, 219)(9, 220)(204, 220)(9, 221)(201, 221)(2, 10)(5, 10)(10, 114)(10, 140)(10, 222)(141, 222)(10, 171)(10, 223)(151, 223)(10, 209)(10, 224)(63, 224)(11, 112)(11, 88)(11, 92)(12, 106)(12, 86)(12, 30)(3, 13)(13, 47)(13, 50)(13, 32)(6, 14)(14, 147)(14, 57)(14, 46)(14, 58)(14, 199)(15, 192)(15, 225)(78, 225)(15, 157)(16, 199)(6, 16)(16, 176)(16, 226)(147, 226)(16, 57)(16, 58)(16, 135)(14, 16)(17, 64)(17, 227)(96, 227)(17, 228)(39, 228)(17, 195)(17, 21)(17, 229)(82, 229)(17, 158)(18, 74)(18, 230)(115, 230)(18, 71)(18, 231)(210, 231)(18, 232)(94, 232)(19, 197)(19, 93)(20, 35)(20, 56)(20, 72)(21, 64)(21, 96)(21, 39)(21, 198)(22, 140)(22, 100)(22, 233)(141, 233)(22, 194)(10, 234)(22, 234)(22, 151)(22, 209)(22, 162)(22, 235)(108, 235)(22, 63)(22, 23)(23, 125)(23, 82)(23, 108)(23, 51)(24, 53)(24, 181)(24, 111)(24, 48)(8, 24)(25, 163)(25, 236)(97, 236)(25, 237)(45, 237)(25, 86)(26, 238)(200, 238)(26, 169)(26, 152)(26, 89)(27, 208)(27, 81)(27, 38)(27, 71)(27, 74)(28, 35)(28, 239)(56, 239)(28, 72)(29, 33)(29, 201)(30, 175)(4, 30)(30, 240)(173, 240)(30, 79)(31, 95)(31, 190)(31, 168)(3, 32)(32, 241)(47, 241)(32, 75)(33, 44)(34, 44)(33, 34)(34, 105)(35, 56)(15, 36)(36, 208)(36, 78)(36, 157)(36, 242)(50, 242)(37, 92)(38, 163)(38, 81)(38, 174)(39, 243)(64, 243)(39, 198)(40, 145)(40, 64)(40, 67)(41, 153)(41, 177)(41, 148)(41, 83)(41, 179)(42, 244)(145, 244)(42, 116)(42, 67)(40, 42)(42, 158)(42, 126)(43, 113)(43, 116)(43, 132)(43, 59)(43, 101)(43, 143)(45, 175)(45, 173)(46, 116)(46, 245)(59, 245)(46, 101)(48, 181)(37, 246)(48, 246)(15, 50)(51, 178)(51, 188)(52, 208)(36, 52)(52, 203)(50, 52)(12, 52)(53, 247)(111, 247)(53, 133)(53, 191)(22, 54)(23, 54)(54, 125)(54, 194)(54, 108)(54, 162)(55, 93)(56, 248)(72, 248)(6, 57)(55, 57)(57, 147)(19, 58)(6, 249)(58, 249)(55, 58)(58, 250)(147, 250)(59, 113)(59, 116)(59, 101)(42, 59)(60, 109)(60, 251)(160, 251)(60, 69)(61, 113)(61, 67)(61, 116)(61, 101)(40, 61)(42, 61)(61, 145)(46, 61)(59, 61)(61, 85)(62, 112)(11, 62)(62, 92)(2, 63)(5, 63)(63, 114)(63, 139)(63, 140)(63, 252)(100, 252)(63, 141)(63, 195)(63, 198)(63, 104)(63, 151)(21, 63)(63, 209)(19, 65)(65, 72)(28, 65)(65, 90)(61, 65)(65, 70)(66, 253)(207, 253)(66, 254)(154, 254)(66, 103)(66, 190)(66, 168)(64, 67)(68, 137)(31, 68)(68, 95)(68, 169)(68, 200)(68, 148)(68, 206)(68, 152)(68, 183)(68, 155)(69, 207)(69, 115)(69, 182)(69, 165)(69, 255)(160, 255)(69, 210)(69, 103)(19, 70)(59, 70)(46, 70)(61, 70)(14, 70)(71, 189)(24, 71)(73, 199)(73, 256)(138, 256)(34, 257)(73, 257)(73, 147)(57, 73)(73, 117)(16, 73)(14, 73)(74, 176)(74, 115)(71, 74)(74, 210)(74, 94)(47, 258)(75, 258)(41, 76)(76, 159)(76, 167)(53, 259)(77, 259)(77, 111)(77, 124)(77, 189)(24, 77)(77, 174)(44, 78)(78, 157)(78, 105)(1, 79)(79, 123)(79, 191)(80, 112)(80, 184)(80, 127)(80, 92)(81, 189)(71, 81)(74, 81)(81, 174)(82, 96)(64, 82)(39, 82)(83, 179)(7, 84)(84, 170)(84, 134)(84, 204)(85, 260)(116, 260)(67, 261)(85, 261)(17, 85)(40, 262)(85, 262)(85, 158)(85, 126)(85, 143)(42, 263)(85, 263)(86, 175)(45, 86)(86, 173)(30, 86)(87, 146)(83, 87)(72, 87)(87, 186)(87, 179)(87, 197)(88, 181)(37, 88)(48, 88)(20, 264)(89, 264)(72, 89)(19, 90)(90, 146)(90, 197)(90, 93)(91, 265)(153, 265)(91, 139)(91, 177)(91, 148)(26, 91)(91, 185)(89, 91)(41, 91)(94, 110)(94, 115)(71, 94)(94, 210)(64, 96)(39, 266)(96, 266)(96, 198)(86, 97)(45, 97)(12, 97)(98, 114)(2, 98)(98, 122)(98, 171)(98, 194)(98, 162)(99, 131)(99, 166)(99, 136)(5, 100)(96, 100)(100, 139)(100, 140)(100, 141)(100, 195)(100, 198)(100, 104)(100, 151)(21, 100)(100, 267)(209, 267)(101, 116)(101, 143)(102, 113)(59, 268)(102, 268)(46, 102)(101, 102)(61, 102)(43, 102)(102, 164)(70, 102)(104, 269)(114, 269)(104, 171)(5, 270)(104, 270)(44, 105)(75, 106)(86, 106)(3, 106)(47, 106)(30, 106)(32, 106)(13, 106)(49, 107)(107, 136)(108, 140)(108, 141)(10, 108)(108, 151)(108, 209)(63, 108)(109, 207)(66, 109)(109, 182)(109, 160)(69, 109)(55, 110)(93, 110)(111, 191)(112, 184)(92, 112)(67, 113)(113, 132)(113, 116)(101, 271)(113, 271)(40, 113)(113, 143)(42, 113)(113, 145)(85, 113)(5, 114)(114, 272)(171, 272)(115, 182)(71, 115)(103, 115)(115, 273)(210, 273)(67, 116)(40, 116)(116, 145)(44, 117)(34, 117)(117, 157)(105, 274)(117, 274)(118, 207)(66, 118)(109, 275)(118, 275)(118, 205)(119, 163)(119, 208)(27, 119)(52, 119)(95, 120)(120, 183)(68, 276)(120, 276)(120, 155)(120, 187)(120, 137)(54, 121)(114, 121)(98, 121)(121, 122)(121, 171)(121, 162)(122, 188)(122, 202)(51, 122)(122, 178)(122, 277)(130, 277)(123, 191)(53, 278)(124, 278)(124, 175)(111, 124)(124, 133)(124, 191)(22, 125)(125, 140)(125, 141)(125, 194)(108, 279)(125, 279)(10, 125)(125, 162)(63, 125)(126, 145)(64, 126)(67, 126)(17, 126)(39, 126)(40, 126)(126, 280)(158, 280)(1, 127)(123, 281)(127, 281)(79, 127)(127, 191)(106, 128)(128, 196)(30, 128)(118, 129)(129, 172)(129, 156)(129, 205)(129, 159)(129, 282)(161, 282)(130, 202)(51, 130)(130, 178)(130, 188)(131, 193)(107, 131)(49, 131)(131, 136)(116, 132)(82, 132)(101, 132)(17, 132)(132, 143)(51, 132)(132, 188)(1, 133)(111, 133)(123, 133)(133, 191)(7, 134)(3, 134)(13, 134)(32, 134)(110, 135)(6, 135)(55, 135)(135, 147)(57, 135)(58, 135)(49, 136)(95, 137)(31, 137)(138, 283)(199, 283)(34, 138)(138, 147)(57, 138)(16, 284)(138, 284)(14, 138)(64, 139)(26, 139)(5, 139)(89, 139)(96, 139)(139, 169)(35, 139)(39, 139)(139, 195)(139, 198)(21, 285)(139, 285)(2, 140)(5, 140)(114, 140)(140, 171)(104, 140)(140, 151)(5, 141)(139, 141)(140, 141)(141, 195)(141, 198)(141, 286)(151, 286)(141, 209)(131, 142)(107, 142)(142, 202)(49, 142)(142, 166)(136, 142)(116, 143)(82, 143)(17, 143)(51, 143)(76, 144)(144, 167)(64, 145)(67, 145)(19, 146)(146, 287)(197, 287)(93, 146)(6, 147)(55, 147)(148, 288)(153, 288)(148, 177)(148, 206)(1, 150)(150, 175)(123, 150)(4, 289)(150, 289)(127, 150)(150, 173)(30, 150)(79, 150)(5, 151)(114, 151)(151, 171)(104, 151)(152, 169)(152, 206)(154, 207)(154, 165)(103, 154)(154, 190)(129, 155)(95, 155)(31, 155)(76, 155)(155, 290)(183, 290)(155, 187)(144, 155)(66, 156)(118, 156)(156, 172)(109, 156)(156, 205)(44, 157)(105, 157)(64, 158)(67, 158)(96, 158)(39, 158)(40, 158)(158, 198)(145, 158)(21, 158)(83, 291)(159, 291)(159, 186)(41, 159)(159, 179)(160, 207)(115, 160)(160, 182)(18, 160)(160, 210)(83, 161)(161, 172)(161, 186)(156, 161)(161, 205)(159, 161)(140, 162)(141, 162)(162, 171)(162, 194)(10, 292)(162, 292)(151, 162)(162, 209)(108, 162)(63, 162)(163, 174)(33, 164)(29, 164)(101, 164)(9, 164)(43, 164)(165, 207)(103, 293)(165, 293)(131, 166)(107, 166)(49, 166)(166, 201)(83, 167)(41, 167)(159, 167)(161, 167)(129, 167)(165, 168)(154, 168)(103, 168)(168, 190)(89, 169)(44, 170)(33, 170)(5, 171)(118, 172)(172, 186)(109, 172)(172, 205)(1, 173)(173, 175)(4, 173)(79, 173)(53, 174)(111, 174)(174, 189)(124, 174)(1, 175)(133, 175)(4, 175)(175, 191)(79, 175)(6, 176)(55, 176)(147, 176)(57, 176)(58, 176)(135, 294)(176, 294)(153, 295)(177, 295)(178, 188)(177, 179)(146, 179)(148, 179)(179, 197)(110, 180)(60, 180)(160, 180)(94, 180)(37, 296)(181, 296)(182, 297)(207, 297)(165, 182)(66, 182)(154, 182)(103, 182)(129, 183)(76, 183)(183, 187)(144, 183)(92, 184)(153, 185)(185, 200)(152, 185)(148, 185)(26, 185)(185, 206)(146, 186)(83, 186)(179, 186)(186, 197)(95, 187)(137, 187)(31, 187)(53, 189)(111, 189)(24, 189)(165, 190)(103, 190)(44, 192)(170, 192)(78, 192)(157, 192)(107, 193)(49, 193)(193, 202)(136, 193)(178, 193)(188, 193)(140, 194)(141, 194)(171, 194)(10, 194)(151, 194)(194, 209)(108, 194)(63, 194)(64, 195)(96, 298)(195, 298)(39, 299)(195, 299)(195, 198)(21, 300)(195, 300)(158, 195)(127, 196)(150, 196)(79, 196)(93, 197)(64, 198)(5, 198)(34, 199)(147, 199)(57, 199)(117, 199)(135, 199)(105, 199)(169, 200)(152, 301)(200, 301)(178, 202)(86, 203)(106, 203)(3, 203)(50, 203)(30, 203)(12, 302)(203, 302)(33, 204)(170, 204)(29, 204)(201, 204)(66, 205)(109, 205)(103, 207)(15, 208)(78, 208)(157, 208)(2, 209)(5, 209)(114, 209)(140, 303)(209, 303)(195, 209)(198, 209)(104, 209)(151, 304)(209, 304)(21, 209)(165, 210)(103, 210)(Dict(158 => 1.0), [158], 304, 900)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 1204 rows, 2700 columns and 4500 nonzeros
Model fingerprint: 0x1a52f84b
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 1204 rows and 2700 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  1.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.891851 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.108149

 more cuts: false 0.04199473671043244 false
is_attach:trueformulation:LEFPAI0 900 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.108149
MIPGapAbs  0.999998
Threads  1

Optimize a model with 8743 rows, 9312 columns and 22916 nonzeros
Model fingerprint: 0xb9ef6f69
Model has 5104 simple general constraints
  5104 INDICATOR
Variable types: 2104 continuous, 7208 integer (7208 binary)
Coefficient statistics:
  Matrix range     [1e-03, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e-03, 1e+00]
  RHS range        [1e-06, 1e+00]
  GenCon rhs range [4e-08, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 6235 rows and 7131 columns
Presolve time: 0.27s
Presolved: 2508 rows, 2181 columns, 14504 nonzeros
Variable types: 315 continuous, 1866 integer (1857 binary)
Found heuristic solution: objective 768.0000000
Found heuristic solution: objective 766.0000000
Found heuristic solution: objective 756.0000000

Root relaxation: objective 6.790000e+02, 540 iterations, 0.01 seconds (0.01 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0  679.00000    0    2  756.00000  679.00000  10.2%     -    0s
H    0     0                     681.0000000  679.00000  0.29%     -    0s
     0     0  679.00000    0    4  681.00000  679.00000  0.29%     -    0s
H    0     0                     679.0000000  679.00000  0.00%     -    0s
     0     0  679.00000    0    4  679.00000  679.00000  0.00%     -    0s

Cutting planes:
  Learned: 3
  Cover: 2
  Implied bound: 2
  MIR: 54
  Relax-and-lift: 1

Explored 1 nodes (1052 simplex iterations) in 0.38 seconds (0.24 work units)
Thread count was 1 (of 16 available processors)

Solution count 5: 679 681 756 ... 768

Optimal solution found (tolerance 1.00e-04)
Best objective 6.790000000000e+02, best bound 6.790000000000e+02, gap 0.0000%

User-callback calls 1741, time in user-callback 0.00 sec

 sepatime0 0 0
679.0Stat(MathOptInterface.OPTIMAL, 679.0, 679.0, 0.0, 0.0, 1.891851, 0.37820887565612793, 1, Main.CFLG.LEFPAI, "", #undef)
