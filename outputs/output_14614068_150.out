Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B
Instance: K400.6.con.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B K400.6.con.red /scratch/opt/lxu/CFLG/results/Kgroup_B Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_B K400.6.con.red LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B/K400.6.con.red

 read graph
data loaded


after absorb:240 241

max_piece:24
problem_graph/original graph: node: 347/241 edge: 1141/1035 dlt: 0.044828124074343306 break_avg_len: 0.16265419252215768 break_max_len: 1.0Vbar/V, Ebar/E(347, 347, 1141, 1141)
(1, 126)(1, 72)(2, 171)(2, 192)(2, 6)(3, 216)(3, 31)(3, 113)(3, 196)(3, 87)(3, 52)(3, 241)(56, 241)(3, 242)(140, 242)(3, 215)(5, 173)(5, 157)(5, 167)(5, 11)(5, 243)(143, 243)(5, 229)(7, 244)(125, 244)(7, 23)(7, 227)(8, 141)(8, 118)(8, 55)(9, 245)(78, 245)(9, 157)(9, 121)(9, 167)(9, 137)(9, 135)(9, 226)(9, 200)(10, 100)(10, 225)(10, 246)(19, 246)(10, 53)(10, 203)(10, 238)(10, 65)(10, 28)(10, 180)(10, 240)(11, 173)(11, 143)(11, 229)(12, 101)(12, 89)(13, 126)(13, 234)(13, 228)(13, 169)(14, 86)(14, 210)(14, 247)(188, 247)(15, 120)(15, 127)(15, 197)(15, 144)(16, 99)(16, 76)(16, 155)(16, 133)(16, 194)(16, 197)(16, 232)(16, 22)(16, 66)(16, 181)(17, 113)(17, 28)(17, 69)(18, 126)(18, 234)(13, 248)(18, 248)(18, 249)(104, 249)(18, 29)(18, 228)(18, 169)(19, 141)(20, 104)(20, 231)(21, 224)(21, 93)(22, 107)(22, 83)(22, 199)(21, 22)(23, 227)(24, 33)(25, 250)(109, 250)(25, 164)(26, 183)(26, 153)(27, 130)(27, 238)(27, 79)(27, 115)(28, 113)(19, 28)(28, 203)(28, 238)(28, 69)(29, 73)(29, 234)(13, 29)(29, 45)(29, 251)(228, 251)(30, 221)(30, 217)(30, 60)(14, 30)(31, 190)(31, 236)(32, 184)(32, 92)(26, 32)(32, 43)(32, 122)(4, 32)(32, 183)(34, 237)(34, 199)(34, 232)(33, 34)(21, 34)(34, 194)(34, 76)(34, 162)(35, 101)(12, 35)(35, 195)(35, 88)(23, 36)(36, 252)(108, 252)(36, 165)(36, 189)(37, 216)(3, 37)(31, 37)(37, 113)(37, 196)(37, 52)(37, 253)(56, 253)(37, 254)(215, 254)(38, 106)(39, 129)(39, 171)(39, 192)(39, 119)(23, 40)(7, 40)(40, 61)(40, 103)(40, 227)(19, 41)(41, 238)(41, 141)(8, 41)(41, 55)(42, 238)(42, 255)(141, 255)(8, 42)(41, 42)(42, 55)(43, 184)(43, 153)(43, 198)(43, 92)(26, 43)(43, 62)(43, 256)(183, 256)(44, 257)(70, 257)(44, 207)(44, 73)(44, 166)(44, 102)(45, 228)(46, 127)(33, 46)(46, 131)(46, 162)(46, 258)(120, 258)(46, 68)(47, 198)(2, 48)(6, 48)(48, 105)(48, 129)(48, 158)(48, 192)(48, 171)(48, 209)(49, 58)(1, 49)(49, 126)(49, 151)(49, 101)(12, 49)(49, 195)(35, 49)(49, 89)(49, 169)(50, 100)(10, 50)(50, 225)(50, 85)(19, 259)(50, 259)(50, 53)(50, 203)(50, 238)(50, 65)(28, 50)(50, 180)(50, 240)(51, 198)(42, 51)(51, 55)(47, 260)(51, 260)(52, 261)(216, 261)(31, 52)(52, 220)(52, 190)(52, 113)(52, 196)(52, 262)(87, 262)(52, 56)(52, 140)(52, 69)(8, 53)(42, 53)(41, 53)(19, 53)(53, 55)(53, 206)(53, 238)(53, 141)(54, 150)(54, 97)(46, 54)(55, 238)(55, 263)(141, 263)(31, 56)(56, 113)(56, 140)(56, 264)(215, 264)(2, 57)(57, 158)(57, 233)(12, 57)(57, 88)(57, 195)(35, 57)(1, 58)(58, 126)(58, 72)(58, 151)(58, 89)(59, 206)(59, 130)(59, 238)(41, 59)(27, 265)(59, 265)(59, 79)(59, 115)(60, 106)(61, 103)(61, 227)(23, 63)(63, 165)(36, 63)(63, 189)(64, 197)(64, 128)(64, 131)(64, 150)(64, 144)(65, 134)(65, 100)(65, 225)(65, 180)(65, 266)(203, 266)(65, 85)(66, 267)(76, 267)(66, 107)(66, 83)(66, 199)(21, 66)(22, 66)(66, 235)(66, 124)(66, 181)(42, 67)(51, 67)(55, 67)(47, 67)(68, 127)(15, 68)(68, 197)(68, 120)(68, 144)(69, 113)(70, 207)(70, 166)(70, 102)(3, 71)(37, 71)(38, 71)(71, 223)(71, 196)(56, 71)(71, 140)(71, 178)(71, 215)(72, 189)(70, 73)(73, 207)(73, 228)(74, 268)(175, 268)(75, 90)(75, 122)(75, 208)(4, 75)(32, 75)(75, 136)(75, 214)(76, 107)(76, 199)(21, 76)(22, 269)(76, 269)(76, 181)(77, 104)(20, 270)(77, 270)(77, 231)(78, 157)(78, 224)(78, 167)(78, 271)(137, 271)(78, 200)(78, 145)(36, 79)(79, 108)(7, 79)(79, 165)(23, 79)(63, 79)(80, 272)(125, 272)(23, 80)(7, 273)(80, 273)(80, 165)(80, 227)(81, 151)(36, 81)(81, 274)(156, 274)(81, 130)(12, 81)(81, 195)(81, 89)(81, 205)(63, 81)(82, 95)(82, 201)(82, 213)(83, 275)(107, 275)(83, 224)(83, 199)(21, 83)(84, 229)(85, 113)(85, 87)(28, 85)(85, 203)(69, 85)(60, 86)(86, 188)(87, 276)(216, 276)(31, 87)(87, 190)(87, 277)(113, 277)(87, 196)(56, 87)(87, 203)(87, 140)(69, 87)(2, 88)(88, 129)(88, 158)(88, 192)(48, 88)(88, 119)(88, 171)(1, 89)(72, 89)(91, 116)(20, 91)(91, 231)(77, 91)(92, 184)(26, 92)(92, 278)(183, 278)(92, 153)(8, 94)(94, 118)(67, 94)(47, 94)(95, 148)(95, 222)(95, 231)(96, 239)(84, 96)(97, 120)(46, 97)(39, 98)(95, 98)(82, 98)(98, 202)(99, 197)(61, 99)(85, 100)(19, 100)(100, 203)(28, 100)(100, 180)(69, 100)(58, 101)(1, 101)(89, 101)(102, 207)(102, 189)(103, 125)(7, 103)(103, 227)(104, 234)(13, 104)(104, 169)(6, 105)(105, 129)(105, 158)(105, 192)(105, 118)(105, 279)(171, 279)(103, 107)(21, 107)(23, 108)(72, 108)(108, 165)(108, 189)(99, 110)(110, 197)(110, 127)(61, 110)(110, 144)(15, 280)(110, 280)(68, 281)(110, 281)(16, 110)(111, 156)(111, 151)(12, 111)(81, 282)(111, 282)(111, 195)(89, 111)(111, 146)(111, 205)(112, 198)(43, 112)(62, 112)(112, 152)(112, 153)(56, 112)(17, 112)(112, 215)(31, 113)(113, 140)(114, 283)(120, 283)(114, 284)(127, 284)(114, 131)(33, 114)(15, 114)(68, 114)(114, 162)(46, 285)(114, 285)(115, 130)(111, 115)(79, 115)(81, 115)(115, 205)(116, 148)(116, 222)(95, 116)(35, 116)(116, 231)(116, 119)(24, 117)(6, 118)(6, 119)(105, 119)(119, 286)(129, 286)(119, 158)(119, 287)(192, 287)(48, 119)(119, 288)(171, 288)(120, 144)(5, 121)(121, 218)(78, 121)(121, 157)(11, 121)(121, 226)(121, 167)(121, 200)(122, 191)(4, 122)(123, 210)(14, 123)(123, 289)(188, 289)(123, 163)(124, 125)(107, 124)(124, 224)(83, 124)(21, 124)(22, 124)(23, 125)(125, 227)(72, 126)(126, 207)(120, 127)(33, 127)(120, 128)(128, 197)(128, 131)(128, 150)(114, 128)(128, 144)(15, 128)(68, 128)(46, 128)(6, 129)(129, 192)(36, 130)(108, 130)(79, 130)(130, 165)(23, 130)(63, 290)(130, 290)(120, 131)(131, 197)(131, 291)(144, 291)(15, 131)(68, 131)(129, 132)(132, 171)(39, 292)(132, 292)(132, 191)(132, 209)(132, 192)(105, 132)(119, 132)(103, 133)(61, 133)(22, 133)(66, 133)(133, 235)(83, 133)(107, 133)(133, 181)(134, 238)(134, 180)(134, 203)(5, 135)(78, 135)(135, 293)(157, 293)(135, 294)(226, 294)(135, 295)(167, 295)(135, 137)(135, 200)(135, 173)(121, 135)(135, 143)(90, 136)(74, 136)(136, 175)(137, 157)(134, 137)(137, 224)(137, 167)(137, 145)(109, 138)(138, 212)(138, 179)(45, 138)(39, 139)(95, 139)(98, 139)(82, 139)(139, 202)(31, 140)(140, 220)(140, 190)(140, 230)(140, 236)(140, 172)(94, 296)(142, 296)(67, 142)(142, 147)(93, 143)(117, 143)(144, 197)(134, 145)(145, 165)(79, 145)(80, 145)(145, 177)(145, 224)(124, 145)(2, 146)(35, 146)(146, 158)(12, 146)(146, 195)(48, 146)(146, 233)(88, 146)(57, 146)(118, 147)(8, 147)(94, 297)(147, 297)(67, 147)(148, 222)(35, 148)(119, 148)(43, 149)(26, 149)(32, 149)(4, 149)(51, 149)(67, 149)(149, 204)(149, 214)(47, 149)(120, 150)(97, 150)(46, 150)(1, 151)(126, 151)(72, 151)(36, 151)(108, 151)(89, 298)(151, 298)(63, 151)(37, 152)(38, 152)(56, 152)(152, 196)(152, 215)(62, 153)(150, 154)(54, 299)(154, 299)(97, 154)(103, 155)(76, 155)(107, 155)(133, 300)(155, 300)(155, 194)(83, 155)(22, 155)(155, 235)(66, 155)(155, 301)(181, 301)(108, 156)(130, 156)(151, 302)(156, 302)(63, 156)(89, 156)(36, 156)(157, 224)(93, 157)(143, 157)(2, 158)(6, 158)(129, 158)(158, 192)(158, 171)(70, 159)(73, 303)(159, 303)(44, 159)(159, 228)(78, 160)(157, 160)(9, 160)(121, 160)(160, 167)(137, 160)(135, 160)(160, 304)(200, 304)(160, 226)(161, 198)(43, 161)(112, 161)(62, 161)(152, 161)(153, 161)(56, 161)(17, 161)(161, 215)(120, 162)(127, 305)(162, 305)(33, 306)(162, 306)(15, 162)(68, 162)(86, 163)(163, 188)(109, 164)(125, 165)(7, 165)(165, 227)(23, 165)(166, 207)(40, 166)(102, 307)(166, 307)(166, 189)(157, 167)(167, 224)(167, 173)(93, 167)(143, 167)(168, 185)(71, 308)(168, 308)(37, 309)(168, 309)(140, 168)(3, 168)(31, 168)(56, 168)(168, 196)(168, 215)(58, 169)(1, 169)(126, 169)(101, 169)(99, 170)(110, 170)(170, 197)(166, 170)(61, 170)(40, 170)(102, 170)(6, 171)(129, 310)(171, 310)(171, 192)(118, 171)(172, 190)(172, 311)(236, 311)(157, 173)(93, 173)(143, 312)(173, 312)(117, 173)(24, 174)(174, 237)(174, 186)(33, 174)(117, 174)(174, 219)(172, 176)(96, 176)(176, 187)(84, 176)(125, 177)(7, 177)(80, 177)(177, 224)(124, 313)(177, 313)(83, 177)(107, 177)(177, 235)(38, 314)(178, 314)(106, 178)(109, 179)(164, 179)(25, 179)(180, 315)(203, 315)(69, 180)(85, 180)(99, 181)(107, 181)(83, 181)(22, 316)(181, 316)(61, 181)(182, 198)(62, 182)(51, 182)(182, 204)(17, 182)(183, 198)(62, 183)(153, 183)(26, 184)(183, 184)(153, 184)(71, 185)(3, 185)(152, 185)(37, 185)(38, 185)(185, 196)(56, 185)(140, 185)(178, 185)(185, 215)(24, 186)(186, 237)(33, 186)(117, 186)(187, 230)(163, 187)(23, 189)(190, 236)(129, 191)(171, 191)(39, 191)(191, 209)(191, 192)(105, 191)(6, 192)(19, 193)(193, 238)(50, 193)(10, 193)(100, 193)(28, 193)(53, 193)(193, 317)(240, 317)(76, 194)(107, 194)(83, 194)(194, 199)(21, 194)(22, 194)(194, 235)(66, 318)(194, 318)(124, 194)(181, 194)(101, 195)(12, 195)(89, 195)(196, 216)(31, 196)(113, 196)(56, 196)(140, 196)(196, 319)(215, 319)(61, 197)(62, 320)(198, 320)(153, 198)(93, 199)(21, 321)(199, 321)(199, 224)(157, 200)(134, 200)(167, 200)(137, 200)(145, 200)(74, 201)(175, 201)(39, 202)(74, 202)(175, 202)(201, 202)(82, 202)(113, 203)(69, 203)(198, 204)(62, 204)(51, 322)(204, 322)(67, 204)(47, 204)(2, 205)(35, 205)(158, 205)(12, 205)(195, 323)(205, 323)(48, 205)(205, 233)(88, 205)(57, 205)(146, 324)(205, 324)(19, 206)(206, 238)(141, 206)(8, 206)(41, 206)(42, 206)(55, 206)(72, 207)(189, 207)(142, 208)(122, 208)(4, 208)(94, 208)(208, 325)(214, 325)(147, 208)(2, 209)(6, 209)(105, 326)(209, 326)(129, 209)(158, 209)(192, 327)(209, 327)(118, 209)(171, 328)(209, 328)(86, 329)(210, 329)(188, 210)(163, 210)(1, 211)(126, 211)(13, 330)(211, 330)(104, 211)(29, 211)(211, 228)(169, 211)(18, 331)(211, 331)(179, 212)(45, 212)(90, 213)(74, 213)(175, 213)(201, 213)(136, 213)(147, 214)(142, 214)(4, 214)(94, 214)(31, 215)(113, 215)(140, 215)(31, 332)(216, 332)(190, 216)(113, 333)(216, 333)(56, 216)(140, 216)(69, 216)(215, 216)(217, 334)(221, 334)(38, 217)(60, 217)(178, 217)(106, 217)(218, 220)(11, 335)(218, 335)(5, 218)(143, 218)(218, 229)(24, 219)(219, 237)(186, 219)(117, 219)(220, 230)(190, 336)(220, 336)(172, 220)(31, 220)(220, 236)(38, 221)(60, 221)(178, 221)(106, 221)(35, 222)(119, 222)(38, 223)(123, 223)(14, 223)(178, 223)(188, 223)(163, 223)(93, 224)(134, 225)(100, 225)(180, 225)(203, 225)(85, 225)(78, 337)(226, 337)(157, 226)(167, 338)(226, 338)(137, 226)(224, 226)(200, 339)(226, 339)(70, 228)(207, 228)(24, 229)(174, 229)(143, 229)(190, 230)(172, 340)(230, 340)(230, 341)(236, 341)(164, 231)(109, 231)(25, 231)(179, 231)(76, 342)(232, 342)(155, 232)(107, 232)(194, 343)(232, 343)(83, 232)(199, 232)(22, 344)(232, 344)(66, 232)(181, 232)(12, 233)(88, 233)(195, 233)(35, 233)(228, 234)(45, 234)(125, 235)(103, 235)(107, 345)(235, 345)(83, 346)(235, 346)(22, 235)(124, 235)(181, 235)(24, 237)(33, 237)(117, 237)(19, 347)(238, 347)(141, 238)(24, 239)(174, 239)(219, 239)(229, 239)(19, 240)(238, 240)(100, 240)(28, 240)(53, 240)(69, 240)(17, 240)(Dict{Int64, Float64}(), Int64[], 347, 1141)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 1488 rows, 3423 columns and 5705 nonzeros
Model fingerprint: 0xe0ca5251
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Presolve removed 1488 rows and 3423 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0   -0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective -0.000000000e+00

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.956871 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.043129

 more cuts: false 0.044828124074343306 false
is_attach:trueformulation:LEFPAI0 1141 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.043129
MIPGapAbs  0.999998
Threads  1

Optimize a model with 10655 rows, 11313 columns and 27848 nonzeros
Model fingerprint: 0x751fc524
Model has 6055 simple general constraints
  6055 INDICATOR
Variable types: 2629 continuous, 8684 integer (8684 binary)
Coefficient statistics:
  Matrix range     [2e-04, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [2e-04, 1e+00]
  RHS range        [2e-04, 1e+00]
  GenCon rhs range [4e-08, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 8745 rows and 9620 columns
Presolve time: 0.30s
Presolved: 1910 rows, 1693 columns, 11760 nonzeros
Variable types: 294 continuous, 1399 integer (1399 binary)
Found heuristic solution: objective 972.0000000
Found heuristic solution: objective 971.0000000
Found heuristic solution: objective 965.0000000

Root relaxation: objective 8.910000e+02, 439 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

H    0     0                     891.0000000  891.00000  0.00%     -    0s
     0     0  891.00000    0   51  891.00000  891.00000  0.00%     -    0s

Explored 1 nodes (439 simplex iterations) in 0.33 seconds (0.22 work units)
Thread count was 1 (of 16 available processors)

Solution count 4: 891 965 971 972 

Optimal solution found (tolerance 1.00e-04)
Warning: max constraint violation (1.0000e-06) exceeds tolerance
Warning: max general constraint violation (1.0000e-06) exceeds tolerance
Best objective 8.910000000000e+02, best bound 8.910000000000e+02, gap 0.0000%

User-callback calls 2258, time in user-callback 0.00 sec

 sepatime0 0 0
891.0Stat(MathOptInterface.OPTIMAL, 891.0, 891.0, 0.0, 0.0, 1.956871, 0.3346431255340576, 1, Main.CFLG.LEFPAI, "", #undef)
