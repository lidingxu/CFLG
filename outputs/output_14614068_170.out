Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B
Instance: K400.9.con.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAV
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_B K400.9.con.red /scratch/opt/lxu/CFLG/results/Kgroup_B Gurobi 7200 LEFPAV Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_B K400.9.con.red LEFPAV Small
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_B/K400.9.con.red

 read graph
data loaded


after absorb:210 211

max_piece:24
problem_graph/original graph: node: 328/211 edge: 979/862 dlt: 0.043690673578734594 break_avg_len: 0.15387685648567612 break_max_len: 1.0Vbar/V, Ebar/E(326, 328, 977, 979)
(1, 211)(111, 211)(1, 191)(1, 212)(123, 212)(2, 114)(2, 151)(2, 105)(2, 171)(3, 207)(3, 35)(3, 28)(3, 150)(3, 213)(76, 213)(5, 214)(96, 214)(5, 215)(176, 215)(5, 182)(5, 57)(5, 135)(5, 216)(31, 216)(7, 15)(7, 217)(208, 217)(7, 154)(8, 37)(9, 218)(27, 218)(9, 219)(29, 219)(9, 220)(204, 220)(9, 166)(9, 221)(201, 221)(10, 145)(10, 20)(10, 222)(45, 222)(10, 189)(10, 185)(10, 223)(91, 223)(10, 104)(10, 144)(11, 192)(11, 112)(11, 19)(11, 55)(11, 26)(11, 30)(11, 94)(11, 197)(12, 95)(12, 42)(12, 137)(12, 130)(13, 28)(13, 127)(14, 193)(14, 49)(14, 136)(15, 154)(16, 193)(16, 38)(16, 108)(16, 224)(49, 224)(16, 166)(16, 225)(136, 225)(14, 226)(16, 226)(17, 67)(17, 83)(17, 40)(17, 158)(18, 90)(18, 75)(19, 55)(19, 197)(19, 94)(6, 227)(20, 227)(20, 146)(20, 56)(20, 73)(20, 91)(21, 175)(4, 21)(21, 40)(22, 117)(18, 228)(22, 228)(22, 157)(22, 70)(22, 75)(22, 160)(22, 106)(23, 208)(7, 23)(24, 45)(25, 105)(25, 27)(25, 229)(29, 229)(25, 204)(25, 166)(9, 230)(25, 230)(25, 201)(26, 200)(26, 169)(26, 231)(152, 231)(26, 232)(192, 232)(26, 206)(27, 105)(6, 28)(28, 56)(28, 35)(28, 73)(29, 105)(27, 29)(29, 233)(201, 233)(30, 55)(30, 197)(31, 234)(96, 234)(31, 235)(182, 235)(32, 181)(32, 124)(33, 106)(33, 34)(34, 157)(34, 106)(6, 35)(35, 236)(146, 236)(35, 73)(15, 36)(36, 208)(7, 36)(36, 237)(154, 237)(36, 50)(36, 168)(38, 48)(39, 87)(39, 65)(39, 238)(184, 238)(39, 198)(8, 40)(40, 124)(1, 41)(41, 111)(41, 123)(41, 133)(41, 80)(42, 143)(43, 175)(43, 184)(39, 43)(2, 44)(44, 93)(44, 114)(44, 140)(44, 171)(44, 151)(44, 184)(45, 146)(45, 239)(91, 239)(46, 184)(39, 46)(46, 143)(43, 46)(46, 80)(46, 191)(47, 165)(47, 78)(47, 190)(47, 168)(37, 48)(38, 49)(48, 49)(15, 50)(50, 110)(50, 208)(50, 154)(51, 148)(51, 101)(51, 178)(51, 199)(52, 53)(33, 52)(52, 86)(53, 191)(22, 54)(54, 117)(18, 54)(54, 157)(54, 240)(70, 240)(54, 160)(54, 106)(30, 54)(55, 94)(6, 56)(56, 241)(73, 241)(57, 96)(57, 182)(57, 58)(57, 90)(31, 242)(57, 242)(58, 90)(31, 58)(58, 182)(59, 175)(59, 153)(21, 59)(4, 59)(60, 110)(60, 113)(60, 102)(60, 103)(60, 85)(61, 113)(61, 132)(62, 96)(44, 62)(62, 176)(62, 87)(62, 68)(5, 62)(62, 135)(63, 107)(63, 112)(55, 63)(11, 63)(64, 101)(64, 141)(64, 199)(64, 177)(64, 148)(17, 64)(64, 209)(64, 158)(65, 87)(65, 184)(66, 119)(66, 89)(8, 66)(66, 243)(173, 243)(66, 187)(68, 87)(65, 68)(44, 68)(68, 198)(69, 188)(69, 118)(69, 101)(69, 172)(69, 199)(69, 122)(51, 69)(69, 178)(69, 244)(81, 244)(69, 245)(155, 245)(69, 130)(70, 147)(70, 90)(18, 70)(30, 70)(70, 246)(160, 246)(71, 193)(49, 71)(16, 71)(71, 174)(14, 71)(64, 72)(72, 177)(72, 209)(72, 141)(17, 72)(72, 247)(158, 247)(72, 199)(6, 73)(73, 146)(74, 151)(74, 138)(74, 77)(74, 166)(16, 74)(74, 93)(14, 74)(75, 90)(58, 75)(76, 207)(35, 76)(76, 248)(150, 248)(77, 97)(77, 145)(56, 77)(77, 104)(13, 77)(78, 165)(78, 190)(78, 168)(34, 249)(79, 249)(79, 250)(117, 250)(79, 170)(79, 157)(79, 106)(1, 80)(80, 111)(80, 123)(80, 251)(191, 251)(81, 188)(81, 132)(81, 118)(81, 101)(81, 172)(81, 199)(81, 252)(122, 252)(61, 81)(81, 130)(82, 253)(163, 253)(82, 161)(82, 167)(82, 194)(75, 82)(18, 82)(52, 82)(82, 180)(22, 82)(58, 82)(82, 254)(162, 254)(82, 129)(82, 210)(21, 83)(40, 255)(83, 255)(83, 158)(84, 96)(57, 84)(58, 84)(5, 84)(84, 179)(31, 84)(85, 113)(85, 256)(202, 256)(85, 120)(86, 110)(33, 86)(34, 86)(86, 170)(79, 86)(44, 87)(2, 87)(87, 184)(1, 88)(88, 111)(88, 123)(88, 133)(88, 186)(41, 88)(80, 88)(88, 159)(37, 89)(48, 257)(89, 257)(90, 182)(31, 90)(6, 91)(91, 146)(53, 92)(65, 92)(92, 180)(92, 210)(92, 194)(92, 205)(92, 198)(80, 92)(92, 191)(93, 258)(114, 258)(93, 151)(2, 93)(93, 105)(93, 140)(93, 171)(95, 115)(72, 95)(95, 158)(42, 95)(96, 182)(56, 97)(73, 97)(97, 104)(98, 188)(95, 98)(98, 137)(98, 141)(98, 172)(12, 98)(98, 199)(98, 122)(98, 209)(98, 259)(130, 259)(99, 139)(37, 99)(99, 124)(8, 260)(99, 260)(40, 99)(99, 195)(99, 126)(32, 99)(66, 100)(100, 119)(89, 100)(8, 100)(100, 261)(173, 261)(100, 187)(101, 262)(141, 262)(101, 199)(101, 148)(101, 263)(209, 263)(102, 165)(78, 102)(47, 102)(102, 190)(103, 110)(103, 264)(149, 264)(103, 142)(103, 128)(20, 265)(104, 265)(6, 104)(56, 104)(73, 104)(91, 104)(105, 114)(105, 266)(171, 266)(107, 169)(107, 152)(107, 192)(26, 107)(38, 108)(49, 108)(48, 108)(108, 267)(136, 267)(109, 188)(109, 148)(109, 209)(101, 109)(51, 109)(109, 178)(109, 199)(111, 268)(123, 268)(111, 191)(112, 192)(55, 112)(30, 112)(112, 197)(113, 165)(113, 132)(113, 190)(102, 113)(78, 113)(47, 113)(114, 171)(115, 139)(115, 177)(72, 269)(115, 269)(83, 115)(17, 115)(115, 158)(115, 126)(64, 115)(107, 116)(116, 169)(116, 152)(116, 192)(26, 116)(63, 116)(34, 117)(117, 170)(117, 157)(106, 117)(118, 165)(118, 132)(118, 190)(102, 118)(78, 118)(47, 118)(61, 118)(119, 139)(99, 119)(8, 119)(40, 119)(119, 195)(119, 173)(119, 126)(111, 120)(88, 270)(120, 270)(41, 271)(120, 271)(120, 159)(122, 188)(122, 132)(118, 122)(101, 122)(122, 141)(122, 172)(122, 199)(122, 178)(122, 209)(61, 122)(122, 273)(130, 273)(123, 191)(38, 125)(108, 125)(125, 204)(67, 126)(8, 126)(40, 274)(126, 274)(126, 195)(17, 275)(126, 275)(124, 126)(83, 126)(126, 158)(127, 147)(90, 127)(110, 128)(1, 128)(128, 149)(128, 133)(128, 142)(128, 186)(128, 159)(52, 129)(75, 129)(129, 210)(129, 161)(130, 137)(101, 130)(130, 141)(130, 172)(130, 199)(130, 178)(130, 209)(61, 130)(130, 188)(131, 153)(59, 131)(4, 131)(132, 165)(132, 190)(102, 132)(78, 132)(47, 132)(1, 133)(111, 276)(133, 276)(133, 191)(80, 133)(123, 277)(133, 277)(125, 134)(134, 204)(134, 278)(196, 278)(9, 134)(134, 201)(96, 279)(135, 279)(135, 182)(57, 135)(31, 135)(38, 280)(136, 280)(49, 136)(48, 136)(137, 172)(61, 137)(42, 137)(71, 138)(97, 138)(77, 138)(138, 174)(14, 138)(67, 139)(8, 139)(40, 281)(139, 281)(139, 195)(17, 282)(139, 282)(124, 139)(83, 139)(126, 139)(139, 158)(114, 140)(140, 151)(2, 140)(105, 140)(140, 171)(141, 199)(141, 148)(141, 209)(110, 142)(1, 142)(142, 149)(133, 142)(142, 186)(142, 159)(39, 143)(80, 143)(143, 191)(97, 144)(144, 145)(144, 283)(189, 283)(24, 144)(104, 144)(144, 174)(97, 284)(145, 284)(56, 145)(91, 145)(104, 285)(145, 285)(6, 146)(147, 182)(90, 147)(110, 149)(149, 159)(150, 207)(146, 150)(35, 150)(28, 150)(114, 286)(151, 286)(105, 151)(151, 171)(152, 169)(152, 192)(79, 152)(152, 287)(206, 287)(21, 153)(83, 153)(4, 153)(40, 153)(153, 158)(153, 195)(154, 165)(81, 155)(132, 155)(118, 155)(122, 155)(155, 172)(51, 155)(113, 156)(132, 288)(156, 288)(118, 156)(156, 172)(61, 289)(156, 289)(106, 157)(40, 158)(1, 159)(111, 159)(133, 159)(41, 159)(123, 159)(159, 186)(147, 160)(58, 160)(90, 160)(18, 290)(160, 290)(30, 160)(75, 160)(53, 161)(33, 161)(86, 161)(52, 161)(161, 162)(162, 167)(162, 194)(75, 162)(52, 162)(162, 291)(180, 291)(58, 162)(84, 162)(129, 162)(162, 210)(75, 292)(163, 292)(18, 163)(163, 180)(22, 163)(58, 163)(162, 163)(86, 163)(160, 163)(161, 163)(129, 163)(66, 164)(164, 175)(100, 164)(89, 164)(134, 164)(164, 196)(4, 164)(164, 173)(164, 187)(27, 293)(166, 293)(29, 166)(136, 166)(166, 201)(167, 180)(53, 167)(33, 167)(86, 167)(52, 167)(161, 167)(129, 167)(165, 168)(154, 168)(168, 190)(55, 169)(169, 206)(33, 294)(170, 294)(34, 295)(170, 295)(157, 170)(106, 170)(132, 172)(118, 172)(61, 296)(172, 296)(37, 173)(89, 173)(8, 173)(97, 174)(174, 189)(24, 297)(174, 297)(4, 298)(175, 298)(96, 299)(176, 299)(176, 182)(57, 176)(135, 300)(176, 300)(31, 176)(139, 177)(40, 177)(177, 195)(17, 177)(153, 177)(83, 301)(177, 301)(126, 302)(177, 302)(158, 303)(177, 303)(178, 304)(188, 304)(101, 178)(141, 305)(178, 305)(178, 199)(148, 306)(178, 306)(178, 307)(209, 307)(64, 178)(96, 179)(176, 179)(5, 308)(179, 308)(135, 179)(62, 309)(179, 309)(31, 179)(75, 180)(53, 180)(58, 180)(84, 180)(180, 210)(129, 180)(124, 181)(37, 181)(183, 193)(38, 183)(125, 183)(108, 183)(89, 183)(48, 183)(49, 183)(136, 183)(2, 184)(171, 184)(45, 185)(35, 185)(185, 189)(24, 185)(91, 185)(144, 185)(1, 186)(111, 186)(123, 310)(186, 310)(133, 311)(186, 311)(41, 186)(89, 187)(48, 187)(8, 187)(173, 312)(187, 312)(101, 313)(188, 313)(141, 314)(188, 314)(188, 315)(199, 315)(148, 188)(188, 316)(209, 316)(64, 188)(97, 189)(45, 189)(24, 189)(165, 317)(190, 317)(117, 192)(157, 192)(106, 192)(38, 193)(108, 193)(49, 193)(48, 193)(136, 193)(180, 318)(194, 318)(53, 194)(58, 194)(84, 194)(75, 194)(194, 210)(129, 194)(4, 195)(8, 195)(40, 195)(21, 319)(195, 319)(124, 195)(83, 195)(125, 196)(29, 196)(196, 204)(9, 196)(25, 196)(196, 201)(55, 197)(94, 197)(87, 320)(198, 320)(65, 321)(198, 321)(44, 198)(184, 198)(148, 322)(199, 322)(169, 200)(152, 200)(34, 200)(117, 200)(55, 200)(79, 200)(157, 200)(106, 200)(200, 323)(206, 323)(105, 201)(27, 201)(113, 324)(202, 324)(132, 202)(156, 202)(61, 202)(137, 202)(98, 203)(115, 203)(72, 203)(12, 203)(42, 203)(95, 203)(27, 204)(29, 204)(166, 204)(136, 204)(38, 204)(201, 204)(108, 204)(68, 205)(135, 205)(62, 205)(198, 205)(179, 205)(192, 206)(34, 206)(79, 206)(6, 207)(146, 207)(56, 207)(35, 325)(207, 325)(73, 207)(28, 207)(15, 326)(208, 326)(154, 208)(199, 327)(209, 327)(148, 209)(53, 210)(58, 210)(84, 328)(210, 328)(31, 210)(Dict(300 => 1.0), [300], 327, 978)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 1305 rows, 2934 columns and 4890 nonzeros
Model fingerprint: 0x02c14e07
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 1305 rows and 2934 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  1.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.515637 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.484363

 more cuts: false 0.043690673578734594 false
is_attach:trueformulation:LEFPAV0 978 0
Set parameter PreCrush to value 1

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.484363
MIPGapAbs  0.999998
PreCrush  1
Threads  1

Optimize a model with 16079 rows, 10607 columns and 44317 nonzeros
Model fingerprint: 0x89bce5ab
Variable types: 2283 continuous, 8324 integer (8324 binary)
Coefficient statistics:
  Matrix range     [3e-04, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-04, 1e+00]
  RHS range        [1e-06, 1e+00]
Found heuristic solution: objective 948.0000000
Presolve removed 16045 rows and 10594 columns
Presolve time: 0.06s
Presolved: 34 rows, 13 columns, 90 nonzeros
Found heuristic solution: objective 704.0000000
Variable types: 0 continuous, 13 integer (13 binary)
Found heuristic solution: objective 703.0000000

Explored 1 nodes (0 simplex iterations) in 0.06 seconds (0.06 work units)
Thread count was 1 (of 16 available processors)

Solution count 3: 703 704 948 

Optimal solution found (tolerance 1.00e-04)
Warning: max constraint violation (1.0000e-06) exceeds tolerance
Best objective 7.030000000000e+02, best bound 7.030000000000e+02, gap 0.0000%

User-callback calls 1399, time in user-callback 0.65 sec

 sepatime0 1539 0
703.0Stat(MathOptInterface.OPTIMAL, 703.0, 703.0, 0.0, 0.0, 1.515637, 0.06379199028015137, 1, Main.CFLG.LEFPAV, "", #undef)
