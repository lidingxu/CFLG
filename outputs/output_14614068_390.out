Data path: /scratch/opt/lxu/CFLG/benchmarks/random_B
Instance: r_30_0.1_54.txt
Result path: /scratch/opt/lxu/CFLG/results/random_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_B r_30_0.1_54.txt /scratch/opt/lxu/CFLG/results/random_B Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_B r_30_0.1_54.txt LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/random_B/r_30_0.1_54.txt

 read graph
data loaded


after absorb:25 30

max_piece:12
problem_graph/original graph: node: 27/30 edge: 51/54 dlt: 0.14985539479029872 break_avg_len: 0.6346816720530298 break_max_len: 1.5720943579988345Vbar/V, Ebar/E(24, 27, 48, 51)
(1, 8)(2, 18)(2, 8)(2, 3)(3, 23)(1, 4)(4, 13)(5, 23)(5, 13)(5, 6)(1, 6)(6, 11)(7, 9)(7, 19)(2, 7)(7, 15)(1, 9)(9, 19)(2, 9)(1, 11)(1, 12)(12, 21)(13, 18)(15, 19)(11, 15)(12, 15)(8, 15)(3, 17)(17, 23)(4, 17)(6, 17)(18, 19)(19, 20)(20, 22)(4, 20)(11, 22)(21, 22)(8, 22)(12, 23)(12, 24)(23, 24)(18, 25)(3, 26)(25, 26)(17, 25)(23, 27)(25, 27)(4, 25)(Dict(4 => 1.0, 6 => 2.0, 24 => 2.0), [24, 4, 6], 27, 51)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 78 rows, 153 columns and 255 nonzeros
Model fingerprint: 0x5dd12e09
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 78 rows and 153 columns
Presolve time: 0.02s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.02 seconds (0.00 work units)
Optimal objective  3.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.720155 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.279845

 more cuts: false 0.14985539479029872 false
is_attach:trueformulation:LEFPAI0 51 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.279845
MIPGapAbs  0.999998
Threads  1

Optimize a model with 379 rows, 424 columns and 915 nonzeros
Model fingerprint: 0xddd61a83
Model has 166 simple general constraints
  166 INDICATOR
Variable types: 129 continuous, 295 integer (295 binary)
Coefficient statistics:
  Matrix range     [1e-02, 2e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e-02, 2e+00]
  RHS range        [1e-06, 2e+00]
  GenCon rhs range [1e-07, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 379 rows and 424 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds (0.00 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 50 

Optimal solution found (tolerance 1.00e-04)
Best objective 5.000000000000e+01, best bound 5.000000000000e+01, gap 0.0000%

User-callback calls 865, time in user-callback 0.00 sec

 sepatime0 0 0
50.0Stat(MathOptInterface.OPTIMAL, 50.0, 50.0, 0.0, 0.0, 1.720155, 0.003248929977416992, 0, Main.CFLG.LEFPAI, "", #undef)
