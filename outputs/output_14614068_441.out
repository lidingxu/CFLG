Data path: /scratch/opt/lxu/CFLG/benchmarks/random_B
Instance: r_40_0.4_297.txt
Result path: /scratch/opt/lxu/CFLG/results/random_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAD
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_B r_40_0.4_297.txt /scratch/opt/lxu/CFLG/results/random_B Gurobi 7200 LEFPAD Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_B r_40_0.4_297.txt LEFPAD Large
/scratch/opt/lxu/CFLG/benchmarks/random_B/r_40_0.4_297.txt

 read graph
data loaded

problem_graph/original graph: node: 40/40 edge: 297/297 dlt: 1.2585651957027357 break_avg_len: 0.6292825978513679 break_max_len: 0.9985183215968443Vbar/V, Ebar/E(40, 40, 297, 297)
(1, 6)(1, 8)(1, 9)(1, 12)(1, 14)(1, 16)(1, 22)(1, 29)(1, 30)(1, 31)(1, 32)(1, 38)(1, 39)(2, 3)(2, 5)(2, 7)(2, 8)(2, 9)(2, 10)(2, 14)(2, 18)(2, 19)(2, 20)(2, 21)(2, 23)(2, 24)(2, 26)(2, 32)(2, 33)(2, 34)(2, 35)(2, 36)(2, 37)(3, 5)(3, 6)(3, 7)(3, 11)(3, 12)(3, 13)(3, 15)(3, 17)(3, 21)(3, 23)(3, 26)(3, 27)(3, 34)(3, 35)(3, 36)(3, 38)(3, 39)(4, 11)(4, 12)(4, 14)(4, 18)(4, 22)(4, 25)(4, 28)(4, 30)(4, 32)(4, 35)(4, 37)(4, 39)(5, 6)(5, 9)(5, 10)(5, 17)(5, 18)(5, 19)(5, 23)(5, 25)(5, 29)(5, 38)(6, 7)(6, 9)(6, 10)(6, 11)(6, 12)(6, 14)(6, 15)(6, 23)(6, 25)(6, 26)(6, 30)(6, 37)(6, 39)(6, 40)(7, 8)(7, 12)(7, 15)(7, 16)(7, 17)(7, 19)(7, 20)(7, 24)(7, 30)(7, 32)(7, 33)(7, 35)(7, 36)(7, 38)(7, 40)(8, 10)(8, 13)(8, 16)(8, 21)(8, 22)(8, 23)(8, 25)(8, 28)(8, 31)(8, 32)(8, 33)(8, 35)(8, 38)(8, 39)(9, 12)(9, 13)(9, 14)(9, 15)(9, 17)(9, 20)(9, 23)(9, 25)(9, 29)(9, 30)(9, 33)(9, 34)(9, 35)(9, 38)(9, 40)(10, 13)(10, 14)(10, 22)(10, 23)(10, 24)(10, 27)(10, 33)(10, 39)(11, 14)(11, 17)(11, 18)(11, 19)(11, 22)(11, 25)(11, 26)(11, 28)(11, 33)(11, 34)(11, 35)(11, 36)(11, 38)(11, 40)(12, 17)(12, 18)(12, 19)(12, 21)(12, 26)(12, 28)(12, 32)(12, 35)(12, 37)(13, 15)(13, 16)(13, 17)(13, 19)(13, 20)(13, 21)(13, 32)(13, 35)(13, 39)(14, 16)(14, 17)(14, 19)(14, 20)(14, 21)(14, 25)(14, 34)(14, 36)(14, 37)(14, 39)(15, 16)(15, 17)(15, 24)(15, 26)(15, 27)(15, 28)(15, 29)(15, 31)(15, 32)(15, 33)(15, 35)(15, 37)(15, 38)(15, 40)(16, 17)(16, 18)(16, 19)(16, 21)(16, 24)(16, 27)(16, 29)(16, 36)(16, 38)(17, 18)(17, 27)(17, 34)(17, 36)(17, 39)(17, 40)(18, 25)(18, 27)(18, 28)(18, 31)(18, 33)(18, 38)(18, 39)(19, 21)(19, 22)(19, 23)(19, 27)(19, 29)(19, 35)(19, 37)(19, 40)(20, 26)(20, 27)(20, 28)(20, 30)(20, 33)(20, 39)(20, 40)(21, 37)(21, 38)(21, 39)(22, 27)(22, 30)(22, 31)(22, 33)(22, 35)(22, 38)(22, 39)(23, 24)(23, 26)(23, 29)(23, 33)(23, 35)(24, 28)(24, 30)(24, 35)(24, 36)(24, 39)(24, 40)(25, 26)(25, 27)(25, 31)(25, 33)(25, 34)(25, 36)(25, 38)(25, 39)(26, 28)(26, 32)(26, 38)(26, 39)(26, 40)(27, 30)(27, 31)(27, 37)(27, 39)(28, 30)(28, 31)(28, 33)(28, 39)(29, 30)(29, 34)(29, 35)(29, 36)(29, 40)(30, 31)(30, 32)(30, 34)(30, 37)(30, 38)(31, 32)(31, 35)(31, 37)(31, 38)(31, 39)(32, 35)(33, 36)(33, 38)(33, 39)(33, 40)(35, 38)(35, 40)(36, 37)(37, 40)(Dict{Int64, Float64}(), Int64[], 40, 297)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 337 rows, 891 columns and 1485 nonzeros
Model fingerprint: 0xe14f3d08
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Presolve removed 337 rows and 891 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0   -0.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective -0.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.304786 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.695214

 more cuts: false 1.2585651957027357 false
is_attach:trueformulation:LEFPAD0 297 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.695214
MIPGapAbs  0.999998
Threads  1

Optimize a model with 75492 rows, 48408 columns and 225425 nonzeros
Model fingerprint: 0x6e528635
Variable types: 24184 continuous, 24224 integer (24224 binary)
Coefficient statistics:
  Matrix range     [2e-05, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 1e+00]
  RHS range        [3e-01, 1e+00]
Found heuristic solution: objective 42.0000000
Presolve removed 24521 rows and 1888 columns
Presolve time: 0.88s
Presolved: 50971 rows, 46520 columns, 196039 nonzeros
Variable types: 23134 continuous, 23386 integer (23386 binary)

Root relaxation: objective 7.422350e-01, 23158 iterations, 3.67 seconds (6.26 work units)
Total elapsed time = 6.93s (DegenMoves)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.74224    0  773   42.00000    0.74224  98.2%     -    8s
H    0     0                       6.0000000    0.74224  87.6%     -    8s
H    0     0                       5.0000000    0.74224  85.2%     -    8s
H    0     0                       4.0000000    0.74224  81.4%     -    8s
H    0     0                       3.0000000    0.74224  75.3%     -    8s
     0     0    0.75038    0  865    3.00000    0.75038  75.0%     -   16s
     0     0    0.75069    0  764    3.00000    0.75069  75.0%     -   21s
     0     0    0.75528    0  920    3.00000    0.75528  74.8%     -   25s
     0     0    0.75550    0  873    3.00000    0.75550  74.8%     -   30s
     0     0    0.75914    0 1065    3.00000    0.75914  74.7%     -   33s
     0     0    0.75915    0 1107    3.00000    0.75915  74.7%     -   35s
     0     0    0.76241    0 1039    3.00000    0.76241  74.6%     -   38s
     0     0    0.76244    0 1038    3.00000    0.76244  74.6%     -   45s
     0     0    0.76367    0 1075    3.00000    0.76367  74.5%     -   47s
     0     0    0.76367    0 1075    3.00000    0.76367  74.5%     -   49s
     0     0    0.76419    0 1106    3.00000    0.76419  74.5%     -   50s
     0     0    0.76419    0 1107    3.00000    0.76419  74.5%     -   52s
     0     0    0.76440    0  996    3.00000    0.76440  74.5%     -   53s
     0     0    0.76463    0  999    3.00000    0.76463  74.5%     -   55s
     0     0    0.76463    0  997    3.00000    0.76463  74.5%     -   56s
     0     0    0.76464    0 1000    3.00000    0.76464  74.5%     -   58s
     0     0    0.76481    0 1068    3.00000    0.76481  74.5%     -   59s
     0     0    0.76485    0 1071    3.00000    0.76485  74.5%     -   67s
     0     0    0.76485    0 1070    3.00000    0.76485  74.5%     -   68s
     0     0    0.76573    0 1118    3.00000    0.76573  74.5%     -   70s
     0     0    0.76598    0  950    3.00000    0.76598  74.5%     -   71s
     0     0    0.76708    0 1001    3.00000    0.76708  74.4%     -   73s
     0     0    0.76729    0 1051    3.00000    0.76729  74.4%     -   74s
H    0     0                       2.0000000    0.76729  61.6%     -   77s
     0     0    0.76729    0 1051    2.00000    0.76729  61.6%     -   77s
     0     0    0.76748    0 1128    2.00000    0.76748  61.6%     -   78s
     0     0    0.76749    0 1129    2.00000    0.76749  61.6%     -   80s
     0     0    0.76754    0 1169    2.00000    0.76754  61.6%     -   81s
     0     0    0.76757    0 1169    2.00000    0.76757  61.6%     -  100s
     0     0    0.76757    0 1072    2.00000    0.76757  61.6%     -  101s
     0     0    0.76757    0 1072    2.00000    0.76757  61.6%     -  103s
     0     0    0.76760    0 1061    2.00000    0.76760  61.6%     -  104s
     0     0    0.76763    0 1009    2.00000    0.76763  61.6%     -  107s
     0     2    1.00000    0 1008    2.00000    1.00000  50.0%     -  110s
    13    15    1.00000   13  767    2.00000    1.00000  50.0%   444  115s
    34    36    1.00000   34  702    2.00000    1.00000  50.0%   305  120s
    53    55    1.00000   53  634    2.00000    1.00000  50.0%   267  125s
    73    75    1.00000   73  482    2.00000    1.00000  50.0%   248  130s
    91    93    1.00000   91  456    2.00000    1.00000  50.0%   224  135s
   107   109    1.00000  107  460    2.00000    1.00000  50.0%   209  140s
   125   127    1.00000  125  316    2.00000    1.00000  50.0%   201  145s
   152   154    1.00000  152  304    2.00000    1.00000  50.0%   196  150s
   180   179    1.00000  180  189    2.00000    1.00000  50.0%   183  155s
   313    51 infeasible   44         2.00000    1.00000  50.0%   160  160s
   340    24     cutoff   13         2.00000    1.00000  50.0%   210  165s
   354    10     cutoff   10         2.00000    1.00000  50.0%   267  170s
   361     3     cutoff   26         2.00000    1.00000  50.0%   301  175s

Cutting planes:
  Cover: 1
  Implied bound: 4
  MIR: 10
  Zero half: 1
  RLT: 53
  Relax-and-lift: 12
  BQP: 595

Explored 365 nodes (162083 simplex iterations) in 177.99 seconds (205.47 work units)
Thread count was 1 (of 16 available processors)

Solution count 6: 2 3 4 ... 42

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0000%

User-callback calls 43226, time in user-callback 0.06 sec

 sepatime0 0 0
2.0Stat(MathOptInterface.OPTIMAL, 2.0, 2.0, 0.0, 0.0, 1.304786, 177.99402618408203, 365, Main.CFLG.LEFPAD, "", #undef)
