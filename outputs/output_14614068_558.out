Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_A
Instance: treeA.600.60
Result path: /scratch/opt/lxu/CFLG/results/tree_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_A treeA.600.60 /scratch/opt/lxu/CFLG/results/tree_A Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_A treeA.600.60 LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/tree_A/treeA.600.60

 read graph
data loaded


after absorb:383 600

max_piece:40
problem_graph/original graph: node: 383/600 edge: 442/659 dlt: 0.3739600769623488 break_avg_len: 2.230223445413463 break_max_len: 14.840463067393014Vbar/V, Ebar/E(172, 383, 231, 442)
(7, 57)(8, 190)(13, 366)(19, 66)(20, 364)(20, 85)(20, 344)(24, 248)(24, 366)(33, 196)(39, 113)(40, 196)(39, 40)(41, 207)(45, 108)(46, 222)(28, 52)(52, 224)(54, 131)(54, 94)(55, 334)(55, 251)(59, 186)(59, 235)(59, 355)(59, 131)(60, 224)(60, 197)(42, 64)(64, 257)(65, 328)(66, 286)(67, 223)(67, 140)(76, 111)(85, 121)(65, 88)(88, 278)(88, 286)(90, 111)(90, 163)(23, 94)(95, 280)(94, 95)(99, 343)(99, 338)(100, 174)(100, 239)(100, 289)(101, 208)(101, 113)(101, 111)(104, 113)(104, 316)(105, 373)(107, 237)(109, 322)(44, 109)(110, 119)(94, 110)(110, 131)(27, 112)(55, 115)(115, 206)(122, 186)(124, 194)(124, 276)(125, 156)(125, 152)(125, 197)(125, 243)(129, 291)(129, 211)(119, 135)(135, 307)(137, 243)(76, 138)(138, 222)(138, 146)(140, 372)(143, 334)(146, 292)(147, 156)(147, 203)(140, 147)(148, 174)(148, 270)(57, 149)(149, 329)(96, 149)(24, 152)(154, 206)(8, 162)(162, 285)(98, 162)(162, 172)(163, 257)(112, 169)(169, 373)(169, 199)(173, 235)(122, 173)(52, 173)(174, 301)(178, 213)(178, 367)(178, 241)(131, 190)(66, 195)(195, 229)(197, 291)(146, 197)(198, 299)(63, 198)(27, 199)(201, 249)(143, 201)(124, 203)(208, 223)(208, 301)(46, 210)(23, 213)(207, 222)(196, 222)(226, 347)(228, 334)(33, 228)(108, 229)(28, 229)(208, 230)(44, 230)(45, 230)(96, 235)(210, 237)(98, 243)(244, 247)(105, 244)(249, 302)(190, 250)(250, 285)(27, 251)(112, 252)(8, 253)(156, 253)(261, 327)(261, 323)(241, 261)(263, 299)(263, 268)(263, 322)(264, 306)(60, 264)(26, 264)(250, 267)(140, 267)(23, 268)(268, 372)(7, 270)(194, 276)(234, 276)(172, 276)(42, 278)(42, 280)(254, 282)(279, 282)(239, 286)(289, 364)(241, 289)(280, 294)(57, 294)(41, 294)(96, 302)(294, 304)(95, 304)(306, 323)(113, 306)(26, 308)(107, 308)(148, 308)(44, 310)(310, 362)(198, 312)(67, 313)(315, 338)(39, 315)(226, 316)(234, 319)(137, 319)(312, 319)(307, 322)(254, 323)(324, 371)(252, 324)(235, 327)(299, 328)(207, 328)(313, 332)(327, 332)(20, 332)(154, 338)(339, 378)(329, 339)(131, 339)(19, 340)(85, 340)(135, 343)(237, 343)(44, 344)(347, 349)(340, 349)(313, 355)(328, 355)(143, 355)(292, 362)(121, 363)(247, 363)(94, 363)(121, 366)(24, 367)(292, 367)(301, 370)(279, 370)(211, 370)(95, 370)(329, 371)(248, 372)(13, 373)(198, 378)(65, 380)(63, 380)(364, 380)(Dict(56 => 7.0, 55 => 2.0, 114 => 2.0, 110 => 2.0, 32 => 3.0, 136 => 1.0, 117 => 2.0, 45 => 4.0, 145 => 5.0, 73 => 2.0, 115 => 9.0, 112 => 2.0, 151 => 5.0, 90 => 4.0, 139 => 3.0, 4 => 2.0, 13 => 22.0, 63 => 4.0, 104 => 3.0, 91 => 5.0, 62 => 2.0, 122 => 14.0, 28 => 4.0, 75 => 7.0, 111 => 6.0, 92 => 2.0, 41 => 4.0, 171 => 9.0, 69 => 5.0, 68 => 7.0, 11 => 6.0, 36 => 2.0, 82 => 4.0, 118 => 3.0, 119 => 1.0, 130 => 13.0, 84 => 15.0, 77 => 6.0, 95 => 3.0, 108 => 4.0, 71 => 10.0, 66 => 14.0, 103 => 1.0, 34 => 5.0, 93 => 2.0, 59 => 7.0, 2 => 6.0, 10 => 3.0, 124 => 4.0, 42 => 4.0, 144 => 5.0, 127 => 2.0, 87 => 2.0, 157 => 1.0, 116 => 3.0, 132 => 7.0, 140 => 2.0, 16 => 2.0, 20 => 2.0, 141 => 8.0, 160 => 11.0, 19 => 11.0, 49 => 5.0, 44 => 2.0, 135 => 4.0, 9 => 3.0, 146 => 8.0, 74 => 18.0, 138 => 4.0, 106 => 2.0, 109 => 13.0, 94 => 4.0, 29 => 2.0, 161 => 2.0, 57 => 2.0, 128 => 6.0, 159 => 8.0, 70 => 3.0, 152 => 2.0, 21 => 18.0, 88 => 19.0, 129 => 5.0, 163 => 3.0, 131 => 3.0, 120 => 4.0, 101 => 4.0, 105 => 2.0, 72 => 4.0, 8 => 18.0, 37 => 10.0, 53 => 2.0, 22 => 4.0, 83 => 21.0, 154 => 2.0, 99 => 3.0, 166 => 3.0, 14 => 14.0, 96 => 2.0, 51 => 12.0, 33 => 4.0, 155 => 2.0, 143 => 2.0, 48 => 2.0, 113 => 2.0, 15 => 2.0, 165 => 2.0, 134 => 1.0), [2, 8, 10, 19, 22, 28, 34, 37, 41, 45, 48, 53, 56, 57, 68, 69, 71, 73, 74, 77, 82, 83, 84, 90, 92, 93, 94, 95, 96, 99, 105, 106, 111, 112, 119, 127, 128, 131, 134, 136, 143, 144, 151, 157, 159, 160, 161, 165, 171, 4, 9, 11, 13, 14, 15, 16, 20, 21, 29, 32, 33, 36, 42, 44, 49, 51, 55, 59, 62, 63, 66, 70, 72, 75, 87, 88, 91, 101, 103, 104, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 122, 124, 129, 130, 132, 135, 138, 139, 140, 141, 145, 146, 152, 154, 155, 163, 166], 279, 338)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 617 rows, 1014 columns and 1690 nonzeros
Model fingerprint: 0x96f69fb6
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 617 rows and 1014 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0700000e+02   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  1.070000000e+02

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.897143 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.102857

 more cuts: false 0.3739600769623488 false
is_attach:trueformulation:LEFPAI0 338 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.102857
MIPGapAbs  0.999998
Threads  1

Optimize a model with 2879 rows, 3116 columns and 6530 nonzeros
Model fingerprint: 0xfb6ba741
Model has 1206 simple general constraints
  1206 INDICATOR
Variable types: 955 continuous, 2161 integer (2161 binary)
Coefficient statistics:
  Matrix range     [3e-03, 1e+01]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-03, 1e+01]
  RHS range        [1e-06, 1e+01]
  GenCon rhs range [2e-03, 1e+01]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 2879 rows and 3116 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 859 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.590000000000e+02, best bound 8.590000000000e+02, gap 0.0000%

User-callback calls 732, time in user-callback 0.00 sec

 sepatime0 0 0
859.0Stat(MathOptInterface.OPTIMAL, 859.0, 859.0, 0.0, 0.0, 1.897143, 0.010291099548339844, 0, Main.CFLG.LEFPAI, "", #undef)
