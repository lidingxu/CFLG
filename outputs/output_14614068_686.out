Data path: /scratch/opt/lxu/CFLG/benchmarks/tree_B
Instance: treeB.500.75
Result path: /scratch/opt/lxu/CFLG/results/tree_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Small
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/tree_B treeB.500.75 /scratch/opt/lxu/CFLG/results/tree_B Gurobi 7200 LEFPAI Small
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/tree_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/tree_B treeB.500.75 LEFPAI Small
/scratch/opt/lxu/CFLG/benchmarks/tree_B/treeB.500.75

 read graph
data loaded


after absorb:361 500

max_piece:22
problem_graph/original graph: node: 361/500 edge: 435/574 dlt: 0.372824851975933 break_avg_len: 1.9678295635327412 break_max_len: 7.6208088307286905Vbar/V, Ebar/E(165, 361, 239, 435)
(5, 328)(3, 11)(12, 39)(12, 276)(12, 58)(14, 86)(14, 170)(15, 224)(16, 352)(9, 18)(9, 20)(24, 224)(3, 31)(36, 356)(37, 170)(38, 78)(38, 64)(38, 306)(39, 257)(39, 66)(41, 257)(41, 98)(43, 90)(43, 238)(43, 206)(44, 192)(44, 58)(49, 360)(49, 138)(50, 209)(50, 70)(24, 52)(52, 55)(56, 253)(70, 126)(71, 333)(75, 151)(55, 75)(78, 131)(85, 281)(73, 86)(86, 92)(21, 87)(87, 311)(85, 87)(88, 284)(88, 173)(88, 344)(90, 176)(69, 93)(93, 159)(98, 238)(107, 144)(103, 107)(112, 196)(92, 112)(115, 131)(115, 308)(115, 272)(117, 138)(118, 317)(118, 131)(93, 118)(92, 118)(123, 270)(123, 151)(125, 175)(125, 291)(103, 125)(125, 356)(5, 129)(135, 159)(20, 135)(122, 136)(136, 356)(136, 151)(136, 344)(138, 144)(145, 328)(108, 145)(145, 170)(159, 194)(159, 182)(129, 164)(4, 164)(73, 164)(164, 287)(26, 167)(11, 167)(168, 338)(168, 253)(116, 168)(122, 169)(169, 253)(44, 173)(173, 321)(173, 206)(175, 315)(177, 181)(66, 177)(179, 302)(179, 232)(180, 224)(180, 333)(92, 180)(180, 199)(181, 276)(181, 294)(71, 182)(187, 302)(72, 187)(187, 352)(75, 194)(199, 242)(199, 307)(78, 200)(196, 200)(167, 200)(178, 208)(136, 208)(135, 208)(178, 209)(209, 284)(212, 221)(73, 212)(151, 212)(52, 216)(220, 276)(3, 220)(192, 221)(108, 221)(233, 280)(220, 233)(234, 319)(236, 319)(126, 236)(236, 344)(237, 310)(237, 242)(237, 281)(102, 238)(239, 302)(192, 239)(234, 239)(131, 239)(56, 239)(241, 276)(36, 241)(56, 242)(1, 243)(243, 360)(78, 247)(102, 247)(71, 247)(247, 339)(247, 270)(103, 251)(251, 321)(90, 254)(169, 254)(52, 257)(176, 257)(11, 265)(265, 342)(44, 265)(238, 266)(266, 352)(232, 267)(176, 267)(265, 267)(206, 271)(120, 271)(37, 272)(277, 308)(170, 277)(120, 281)(16, 286)(216, 286)(21, 286)(71, 287)(9, 291)(251, 292)(292, 315)(164, 292)(9, 292)(31, 294)(143, 294)(69, 295)(291, 295)(295, 315)(102, 298)(251, 298)(32, 298)(303, 310)(143, 303)(116, 303)(31, 305)(21, 305)(3, 306)(143, 307)(280, 308)(310, 333)(117, 311)(107, 311)(311, 359)(15, 315)(280, 315)(144, 320)(32, 320)(1, 321)(108, 325)(298, 325)(224, 336)(253, 336)(317, 336)(26, 337)(32, 337)(338, 342)(201, 339)(126, 339)(37, 343)(64, 343)(305, 347)(58, 347)(52, 350)(176, 350)(342, 350)(284, 352)(234, 355)(18, 355)(317, 355)(201, 358)(169, 358)(72, 359)(58, 359)(4, 360)(303, 361)(270, 361)(50, 361)(Dict(5 => 2.0, 110 => 5.0, 60 => 2.0, 32 => 4.0, 136 => 2.0, 117 => 5.0, 145 => 7.0, 73 => 8.0, 153 => 4.0, 112 => 4.0, 64 => 4.0, 151 => 9.0, 90 => 11.0, 13 => 2.0, 86 => 2.0, 63 => 2.0, 104 => 7.0, 91 => 4.0, 62 => 3.0, 158 => 3.0, 122 => 11.0, 58 => 4.0, 52 => 5.0, 12 => 3.0, 28 => 4.0, 75 => 6.0, 111 => 3.0, 23 => 1.0, 92 => 2.0, 41 => 2.0, 43 => 6.0, 69 => 2.0, 36 => 3.0, 68 => 2.0, 98 => 5.0, 85 => 4.0, 82 => 5.0, 118 => 2.0, 125 => 4.0, 162 => 2.0, 84 => 21.0, 77 => 3.0, 25 => 4.0, 108 => 4.0, 76 => 5.0, 156 => 3.0, 34 => 5.0, 59 => 4.0, 93 => 2.0, 124 => 6.0, 27 => 2.0, 26 => 5.0, 147 => 4.0, 87 => 4.0, 144 => 10.0, 42 => 5.0, 116 => 4.0, 140 => 8.0, 100 => 6.0, 127 => 2.0, 79 => 3.0, 16 => 4.0, 20 => 5.0, 81 => 9.0, 157 => 5.0, 49 => 4.0, 135 => 7.0, 9 => 5.0, 31 => 2.0, 146 => 2.0, 138 => 7.0, 161 => 2.0, 102 => 5.0, 128 => 4.0, 159 => 7.0, 152 => 10.0, 88 => 5.0, 131 => 4.0, 120 => 5.0, 101 => 4.0, 78 => 4.0, 105 => 3.0, 24 => 2.0, 8 => 6.0, 1 => 4.0, 53 => 1.0, 22 => 3.0, 83 => 5.0, 137 => 2.0, 154 => 2.0, 99 => 2.0, 121 => 6.0, 3 => 3.0, 96 => 6.0, 143 => 12.0, 48 => 3.0, 113 => 2.0, 15 => 3.0, 97 => 13.0, 165 => 5.0, 142 => 5.0), [8, 15, 16, 22, 34, 41, 48, 58, 73, 75, 76, 78, 79, 83, 86, 87, 88, 92, 108, 116, 131, 140, 144, 162, 1, 3, 9, 12, 20, 59, 77, 81, 85, 97, 102, 110, 111, 117, 118, 121, 138, 145, 161, 13, 23, 24, 25, 26, 31, 36, 42, 49, 52, 60, 62, 68, 69, 90, 91, 96, 98, 99, 104, 112, 113, 125, 135, 136, 142, 143, 147, 151, 152, 153, 165, 5, 27, 28, 32, 43, 53, 63, 64, 82, 84, 93, 100, 101, 105, 120, 122, 124, 127, 128, 137, 146, 154, 156, 157, 158, 159], 266, 340)Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 606 rows, 1020 columns and 1700 nonzeros
Model fingerprint: 0x5586d177
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 606 rows and 1020 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0100000e+02   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  1.010000000e+02

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.39961 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter MIPGapAbs to value 0.999998
Set parameter TimeLimit to value 7198.60039

 more cuts: false 0.372824851975933 false
is_attach:trueformulation:LEFPAI0 340 0

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.60039
MIPGapAbs  0.999998
Threads  1

Optimize a model with 2866 rows, 3095 columns and 6541 nonzeros
Model fingerprint: 0xb86d4dba
Model has 1203 simple general constraints
  1203 INDICATOR
Variable types: 946 continuous, 2149 integer (2149 binary)
Coefficient statistics:
  Matrix range     [5e-03, 8e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [5e-03, 8e+00]
  RHS range        [1e-06, 8e+00]
  GenCon rhs range [9e-04, 7e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve removed 2866 rows and 3095 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.01 work units)
Thread count was 1 (of 16 available processors)

Solution count 1: 763 

Optimal solution found (tolerance 1.00e-04)
Best objective 7.630000000000e+02, best bound 7.630000000000e+02, gap 0.0000%

User-callback calls 878, time in user-callback 0.00 sec

 sepatime0 0 0
763.0Stat(MathOptInterface.OPTIMAL, 763.0, 763.0, 0.0, 0.0, 1.39961, 0.008320093154907227, 0, Main.CFLG.LEFPAI, "", #undef)
