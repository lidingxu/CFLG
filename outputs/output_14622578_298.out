Data path: /scratch/opt/lxu/CFLG/benchmarks/random_A
Instance: r_10_0.2_9.txt
Result path: /scratch/opt/lxu/CFLG/results/random_A
Solver: Gurobi
Time limit: 7200
Formulation: EFP
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_A r_10_0.2_9.txt /scratch/opt/lxu/CFLG/results/random_A Gurobi 7200 EFP Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_A r_10_0.2_9.txt EFP Large
/scratch/opt/lxu/CFLG/benchmarks/random_A/r_10_0.2_9.txt

 read graph
data loaded

problem_graph/original graph: node: 10/10 edge: 9/9 dlt: 0.9411961376803664 break_avg_len: 0.4705980688401832 break_max_len: 0.8466035273230632elapsed CPU time: 0.027264 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7199.972736

 more cuts: false 0.9411961376803664 false
is_attach:falseformulation:EFP0 9 0

 model loaded

Min ye[1] + ye[2] + ye[3] + ye[4] + ye[5] + ye[6] + ye[7] + ye[8] + ye[9]
Subject to
 q[1,a] ≥ 0
 q[2,a] ≥ 0
 q[3,a] ≥ 0
 q[4,a] ≥ 0
 q[5,a] ≥ 0
 q[6,a] ≥ 0
 q[7,a] ≥ 0
 q[8,a] ≥ 0
 q[9,a] ≥ 0
 q[1,b] ≥ 0
 q[2,b] ≥ 0
 q[3,b] ≥ 0
 q[4,b] ≥ 0
 q[5,b] ≥ 0
 q[6,b] ≥ 0
 q[7,b] ≥ 0
 q[8,b] ≥ 0
 q[9,b] ≥ 0
 rv[1] ≥ 0
 rv[2] ≥ 0
 rv[3] ≥ 0
 rv[4] ≥ 0
 rv[5] ≥ 0
 rv[6] ≥ 0
 rv[7] ≥ 0
 rv[8] ≥ 0
 rv[9] ≥ 0
 rv[10] ≥ 0
 -ye[1] + w[1] ≤ 0
 -ye[2] + w[2] ≤ 0
 -ye[3] - ye[4] - ye[7] + w[3] ≤ 0
 -ye[3] - ye[4] - ye[9] + w[4] ≤ 0
 -ye[5] + w[5] ≤ 0
 -ye[6] + w[6] ≤ 0
 -ye[3] - ye[7] - ye[8] + w[7] ≤ 0
 -ye[7] - ye[8] + w[8] ≤ 0
 -ye[4] - ye[9] + w[9] ≤ 0
 -0.8466053739265905 w[1] - rv[1] - rv[6] ≤ -0.8466053739265905
 -0.5032650675750587 w[2] - rv[1] - rv[8] ≤ -0.5032650675750587
 -0.3786231356480751 w[3] - rv[2] - rv[4] ≤ -0.3786231356480751
 -0.48194910821176323 w[4] - rv[2] - rv[10] ≤ -0.48194910821176323
 -0.7078876648396948 w[5] - rv[3] - rv[4] ≤ -0.7078876648396948
 -0.3600829235629159 w[6] - rv[3] - rv[9] ≤ -0.3600829235629159
 -0.27381844126815974 w[7] - rv[4] - rv[7] ≤ -0.27381844126815974
 -0.37965882562150377 w[8] - rv[5] - rv[7] ≤ -0.37965882562150377
 -0.3035053142905061 w[9] - rv[6] - rv[10] ≤ -0.3035053142905061
 -ye[1] + ze[1,(1, :b)] ≤ 0
 -ye[1] + ze[1,(1, :a)] ≤ 0
 -ye[2] + ze[1,(2, :b)] ≤ 0
 -ye[2] + ze[1,(2, :a)] ≤ 0
[[...201 constraints skipped...]]
 ze[4,(9, :b)] binary
 ze[4,(8, :a)] binary
 ze[4,(3, :b)] binary
 ze[4,(7, :b)] binary
 ze[4,(6, :a)] binary
 ze[4,(3, :a)] binary
 ze[4,(4, :b)] binary
 ze[4,(7, :a)] binary
 ze[4,(5, :b)] binary
 ze[4,(4, :a)] binary
 ze[5,(3, :b)] binary
 ze[5,(5, :b)] binary
 ze[6,(1, :b)] binary
 ze[6,(3, :a)] binary
 ze[6,(1, :a)] binary
 ze[6,(4, :b)] binary
 ze[6,(4, :a)] binary
 ze[6,(2, :a)] binary
 ze[6,(9, :b)] binary
 ze[6,(9, :a)] binary
 ze[7,(3, :b)] binary
 ze[7,(3, :a)] binary
 ze[7,(5, :b)] binary
 ze[7,(4, :a)] binary
 ze[8,(1, :a)] binary
 ze[9,(5, :a)] binary
 ze[10,(3, :b)] binary
 ze[10,(1, :b)] binary
 ze[10,(3, :a)] binary
 ze[10,(5, :b)] binary
 ze[10,(7, :a)] binary
 q[1,a] - q[1,b] = 0
 q[2,a] - q[2,b] = 0
 q[3,a] - q[3,b] = 0
 q[4,a] - q[4,b] = 0
 q[5,a] - q[5,b] = 0
 q[6,a] - q[6,b] = 0
 q[7,a] - q[7,b] = 0
 q[8,a] - q[8,b] = 0
 q[9,a] - q[9,b] = 0
 x[1] + ze[1,(1, :b)] + ze[1,(1, :a)] + ze[1,(2, :b)] + ze[1,(2, :a)] + ze[1,(9, :a)] = 1
 x[2] + ze[2,(8, :b)] + ze[2,(1, :b)] + ze[2,(5, :b)] + ze[2,(7, :b)] + ze[2,(7, :a)] + ze[2,(9, :b)] + ze[2,(9, :a)] = 1
 x[3] + ze[3,(3, :b)] + ze[3,(5, :b)] + ze[3,(5, :a)] + ze[3,(6, :b)] + ze[3,(6, :a)] + ze[3,(7, :a)] = 1
 x[4] + ze[4,(8, :b)] + ze[4,(5, :a)] + ze[4,(9, :b)] + ze[4,(8, :a)] + ze[4,(3, :b)] + ze[4,(7, :b)] + ze[4,(6, :a)] + ze[4,(3, :a)] + ze[4,(4, :b)] + ze[4,(7, :a)] + ze[4,(5, :b)] + ze[4,(4, :a)] = 1
 x[5] + ze[5,(3, :b)] + ze[5,(5, :b)] = 1
 x[6] + ze[6,(1, :b)] + ze[6,(3, :a)] + ze[6,(1, :a)] + ze[6,(4, :b)] + ze[6,(4, :a)] + ze[6,(2, :a)] + ze[6,(9, :b)] + ze[6,(9, :a)] = 1
 x[7] + ze[7,(3, :b)] + ze[7,(3, :a)] + ze[7,(5, :b)] + ze[7,(4, :a)] = 1
 x[8] + ze[8,(1, :a)] = 1
 x[9] + ze[9,(5, :a)] = 1
 x[10] + ze[10,(3, :b)] + ze[10,(1, :b)] + ze[10,(3, :a)] + ze[10,(5, :b)] + ze[10,(7, :a)] = 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7199.972736
Threads  1

Optimize a model with 166 rows, 107 columns and 441 nonzeros
Model fingerprint: 0x14826d35
Variable types: 28 continuous, 79 integer (79 binary)
Coefficient statistics:
  Matrix range     [4e-02, 2e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 8e-01]
  RHS range        [3e-01, 2e+00]
Found heuristic solution: objective 6.0000000
Presolve removed 64 rows and 37 columns
Presolve time: 0.00s
Presolved: 102 rows, 70 columns, 353 nonzeros
Variable types: 15 continuous, 55 integer (55 binary)
Found heuristic solution: objective 5.0000000

Root relaxation: objective 1.568879e+00, 62 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    1.56888    0   18    5.00000    1.56888  68.6%     -    0s
H    0     0                       3.0000000    1.56888  47.7%     -    0s
H    0     0                       2.0000000    1.56888  21.6%     -    0s
     0     0    1.56888    0   18    2.00000    1.56888  21.6%     -    0s

Explored 1 nodes (107 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 16 available processors)

Solution count 4: 2 3 5 6 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0000%

User-callback calls 631, time in user-callback 0.01 sec

 sepatime0 0 0
2.0Stat(MathOptInterface.OPTIMAL, 2.0, 2.0, 0.0, 0.0, 0.027264, 0.007463932037353516, 1, Main.CFLG.EFP, "", #undef)
