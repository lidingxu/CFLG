Data path: /scratch/opt/lxu/CFLG/benchmarks/random_A
Instance: r_10_0.3_12.txt
Result path: /scratch/opt/lxu/CFLG/results/random_A
Solver: Gurobi
Time limit: 7200
Formulation: EFP
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_A r_10_0.3_12.txt /scratch/opt/lxu/CFLG/results/random_A Gurobi 7200 EFP Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_A r_10_0.3_12.txt EFP Large
/scratch/opt/lxu/CFLG/benchmarks/random_A/r_10_0.3_12.txt

 read graph
data loaded

problem_graph/original graph: node: 10/10 edge: 12/12 dlt: 1.221004914463064 break_avg_len: 0.610502457231532 break_max_len: 0.9875583338039858elapsed CPU time: 0.026471 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7199.973529

 more cuts: false 1.221004914463064 false
is_attach:falseformulation:EFP0 12 0

 model loaded

Min ye[1] + ye[2] + ye[3] + ye[4] + ye[5] + ye[6] + ye[7] + ye[8] + ye[9] + ye[10] + ye[11] + ye[12]
Subject to
 q[1,a] ≥ 0
 q[2,a] ≥ 0
 q[3,a] ≥ 0
 q[4,a] ≥ 0
 q[5,a] ≥ 0
 q[6,a] ≥ 0
 q[7,a] ≥ 0
 q[8,a] ≥ 0
 q[9,a] ≥ 0
 q[10,a] ≥ 0
 q[11,a] ≥ 0
 q[12,a] ≥ 0
 q[1,b] ≥ 0
 q[2,b] ≥ 0
 q[3,b] ≥ 0
 q[4,b] ≥ 0
 q[5,b] ≥ 0
 q[6,b] ≥ 0
 q[7,b] ≥ 0
 q[8,b] ≥ 0
 q[9,b] ≥ 0
 q[10,b] ≥ 0
 q[11,b] ≥ 0
 q[12,b] ≥ 0
 rv[1] ≥ 0
 rv[2] ≥ 0
 rv[3] ≥ 0
 rv[4] ≥ 0
 rv[5] ≥ 0
 rv[6] ≥ 0
 rv[7] ≥ 0
 rv[8] ≥ 0
 rv[9] ≥ 0
 rv[10] ≥ 0
 -ye[1] - ye[2] - ye[6] - ye[8] + w[1] ≤ 0
 -ye[1] - ye[2] - ye[6] - ye[9] + w[2] ≤ 0
 -ye[3] + w[3] ≤ 0
 -ye[4] + w[4] ≤ 0
 -ye[5] + w[5] ≤ 0
 -ye[1] - ye[2] - ye[6] - ye[8] + w[6] ≤ 0
 -ye[7] + w[7] ≤ 0
 -ye[1] - ye[6] - ye[8] + w[8] ≤ 0
 -ye[2] - ye[9] + w[9] ≤ 0
 -ye[10] + w[10] ≤ 0
 -ye[11] + w[11] ≤ 0
 -ye[12] + w[12] ≤ 0
 -0.2992493328570236 w[1] - rv[1] - rv[4] ≤ -0.2992493328570236
 -0.45231002978367224 w[2] - rv[1] - rv[5] ≤ -0.45231002978367224
 -0.9875603213623196 w[3] - rv[2] - rv[3] ≤ -0.9875603213623196
 -0.36556280351855097 w[4] - rv[3] - rv[8] ≤ -0.36556280351855097
[[...463 constraints skipped...]]
 ze[8,(4, :b)] binary
 ze[8,(7, :a)] binary
 ze[8,(5, :b)] binary
 ze[8,(4, :a)] binary
 ze[8,(2, :a)] binary
 ze[8,(10, :a)] binary
 ze[8,(12, :b)] binary
 ze[9,(8, :b)] binary
 ze[9,(1, :b)] binary
 ze[9,(6, :b)] binary
 ze[9,(11, :b)] binary
 ze[9,(9, :b)] binary
 ze[9,(8, :a)] binary
 ze[9,(1, :a)] binary
 ze[9,(6, :a)] binary
 ze[9,(11, :a)] binary
 ze[9,(10, :b)] binary
 ze[9,(7, :a)] binary
 ze[9,(2, :a)] binary
 ze[9,(10, :a)] binary
 ze[10,(12, :a)] binary
 ze[10,(3, :b)] binary
 ze[10,(5, :b)] binary
 ze[10,(4, :b)] binary
 ze[10,(5, :a)] binary
 ze[10,(4, :a)] binary
 ze[10,(7, :b)] binary
 ze[10,(12, :b)] binary
 q[1,a] - q[1,b] = 0
 q[2,a] - q[2,b] = 0
 q[3,a] - q[3,b] = 0
 q[4,a] - q[4,b] = 0
 q[5,a] - q[5,b] = 0
 q[6,a] - q[6,b] = 0
 q[7,a] - q[7,b] = 0
 q[8,a] - q[8,b] = 0
 q[9,a] - q[9,b] = 0
 q[10,a] - q[10,b] = 0
 q[11,a] - q[11,b] = 0
 q[12,a] - q[12,b] = 0
 x[1] + ze[1,(8, :b)] + ze[1,(11, :b)] + ze[1,(9, :b)] + ze[1,(12, :a)] + ze[1,(8, :a)] + ze[1,(7, :b)] + ze[1,(11, :a)] + ze[1,(9, :a)] + ze[1,(4, :b)] + ze[1,(7, :a)] + ze[1,(10, :b)] + ze[1,(10, :a)] = 1
 x[2] + ze[2,(5, :a)] + ze[2,(4, :a)] = 1
 x[3] + ze[3,(1, :b)] + ze[3,(5, :a)] + ze[3,(12, :a)] + ze[3,(8, :a)] + ze[3,(3, :b)] + ze[3,(7, :b)] + ze[3,(6, :a)] + ze[3,(3, :a)] + ze[3,(4, :b)] + ze[3,(7, :a)] + ze[3,(5, :b)] + ze[3,(4, :a)] + ze[3,(12, :b)] = 1
 x[4] + ze[4,(8, :b)] + ze[4,(1, :b)] + ze[4,(5, :a)] + ze[4,(6, :b)] + ze[4,(11, :b)] + ze[4,(9, :b)] + ze[4,(12, :a)] + ze[4,(8, :a)] + ze[4,(3, :b)] + ze[4,(1, :a)] + ze[4,(7, :b)] + ze[4,(6, :a)] + ze[4,(11, :a)] + ze[4,(9, :a)] + ze[4,(4, :b)] + ze[4,(2, :b)] + ze[4,(7, :a)] + ze[4,(10, :b)] + ze[4,(4, :a)] + ze[4,(2, :a)] + ze[4,(10, :a)] = 1
 x[5] + ze[5,(8, :a)] + ze[5,(1, :b)] + ze[5,(1, :a)] + ze[5,(6, :b)] + ze[5,(6, :a)] + ze[5,(7, :a)] + ze[5,(10, :b)] + ze[5,(10, :a)] + ze[5,(11, :a)] = 1
 x[6] + ze[6,(8, :b)] + ze[6,(1, :b)] + ze[6,(6, :b)] + ze[6,(11, :b)] + ze[6,(9, :b)] + ze[6,(12, :a)] + ze[6,(8, :a)] + ze[6,(1, :a)] + ze[6,(7, :b)] + ze[6,(6, :a)] + ze[6,(11, :a)] + ze[6,(9, :a)] + ze[6,(4, :b)] + ze[6,(2, :b)] + ze[6,(7, :a)] + ze[6,(10, :b)] + ze[6,(2, :a)] + ze[6,(10, :a)] = 1
 x[7] + ze[7,(8, :b)] + ze[7,(1, :b)] + ze[7,(6, :b)] + ze[7,(11, :b)] + ze[7,(9, :b)] + ze[7,(8, :a)] + ze[7,(1, :a)] + ze[7,(6, :a)] + ze[7,(11, :a)] + ze[7,(9, :a)] + ze[7,(2, :b)] + ze[7,(7, :a)] + ze[7,(10, :b)] + ze[7,(2, :a)] + ze[7,(10, :a)] = 1
 x[8] + ze[8,(1, :b)] + ze[8,(5, :a)] + ze[8,(6, :b)] + ze[8,(12, :a)] + ze[8,(8, :a)] + ze[8,(3, :b)] + ze[8,(1, :a)] + ze[8,(7, :b)] + ze[8,(6, :a)] + ze[8,(4, :b)] + ze[8,(7, :a)] + ze[8,(5, :b)] + ze[8,(4, :a)] + ze[8,(2, :a)] + ze[8,(10, :a)] + ze[8,(12, :b)] = 1
 x[9] + ze[9,(8, :b)] + ze[9,(1, :b)] + ze[9,(6, :b)] + ze[9,(11, :b)] + ze[9,(9, :b)] + ze[9,(8, :a)] + ze[9,(1, :a)] + ze[9,(6, :a)] + ze[9,(11, :a)] + ze[9,(10, :b)] + ze[9,(7, :a)] + ze[9,(2, :a)] + ze[9,(10, :a)] = 1
 x[10] + ze[10,(12, :a)] + ze[10,(3, :b)] + ze[10,(5, :b)] + ze[10,(4, :b)] + ze[10,(5, :a)] + ze[10,(4, :a)] + ze[10,(7, :b)] + ze[10,(12, :b)] = 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7199.973529
Threads  1

Optimize a model with 334 rows, 195 columns and 936 nonzeros
Model fingerprint: 0x3dde2f2d
Variable types: 34 continuous, 161 integer (161 binary)
Coefficient statistics:
  Matrix range     [1e-06, 2e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 1e+00]
  RHS range        [3e-01, 2e+00]
Found heuristic solution: objective 5.0000000
Presolve removed 114 rows and 42 columns
Presolve time: 0.01s
Presolved: 220 rows, 153 columns, 1100 nonzeros
Variable types: 21 continuous, 132 integer (132 binary)

Root relaxation: objective 9.708075e-01, 125 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.97081    0   37    5.00000    0.97081  80.6%     -    0s
H    0     0                       4.0000000    0.97081  75.7%     -    0s
H    0     0                       3.0000000    0.97081  67.6%     -    0s
     0     0    1.50000    0   30    3.00000    1.50000  50.0%     -    0s
     0     0    1.50000    0   32    3.00000    1.50000  50.0%     -    0s
     0     0    1.50000    0   33    3.00000    1.50000  50.0%     -    0s
     0     0    2.00000    0   13    3.00000    2.00000  33.3%     -    0s
H    0     0                       2.0000000    2.00000  0.00%     -    0s
     0     0    2.00000    0   13    2.00000    2.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 3
  Implied bound: 1
  Clique: 1
  MIR: 4

Explored 1 nodes (227 simplex iterations) in 0.03 seconds (0.01 work units)
Thread count was 1 (of 16 available processors)

Solution count 4: 2 3 4 5 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0000%

User-callback calls 580, time in user-callback 0.00 sec

 sepatime0 0 0
2.0Stat(MathOptInterface.OPTIMAL, 2.0, 2.0, 0.0, 0.0, 0.026471, 0.02668309211730957, 1, Main.CFLG.EFP, "", #undef)
