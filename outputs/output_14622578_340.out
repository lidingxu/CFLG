Data path: /scratch/opt/lxu/CFLG/benchmarks/random_A
Instance: r_15_0.2_22.txt
Result path: /scratch/opt/lxu/CFLG/results/random_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_A r_15_0.2_22.txt /scratch/opt/lxu/CFLG/results/random_A Gurobi 7200 LEFPAI Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_A r_15_0.2_22.txt LEFPAI Large
/scratch/opt/lxu/CFLG/benchmarks/random_A/r_15_0.2_22.txt

 read graph
data loaded

problem_graph/original graph: node: 15/15 edge: 22/22 dlt: 1.192558056712511 break_avg_len: 0.5962790283562555 break_max_len: 0.9759077962648577Vbar/V, Ebar/E(11, 15, 18, 22)
(Dict{Int64, Bool}(6 => 1, 1 => 0), Dict(6 => 1.0419778446407384, 1 => 0.19621102833688853))Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 33 rows, 60 columns and 100 nonzeros
Model fingerprint: 0x3dbbe04f
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 33 rows and 60 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    2.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  2.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.673248 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7198.326752

 more cuts: false 1.192558056712511 false
is_attach:trueformulation:LEFPAI0 20 0

 model loaded

Min ye[1] + ye[2] + ye[3] + ye[4] + ye[5] + ye[6] + ye[7] + ye[8] + ye[9] + ye[10] + ye[11] + ye[12] + ye[13] + ye[14] + ye[15] + ye[16] + ye[17] + ye[18] + yv[1] + yv[2] + yv[3] + yv[4] + yv[5] + yv[6] + yv[7] + yv[8] + yv[9] + yv[10] + yv[11] + yv[12] + yv[13] + 1
Subject to
 q[1,a] ≥ 0
 q[2,a] ≥ 0
 q[3,a] ≥ 0
 q[4,a] ≥ 0
 q[5,a] ≥ 0
 q[6,a] ≥ 0
 q[7,a] ≥ 0
 q[8,a] ≥ 0
 q[9,a] ≥ 0
 q[10,a] ≥ 0
 q[11,a] ≥ 0
 q[12,a] ≥ 0
 q[13,a] ≥ 0
 q[14,a] ≥ 0
 q[15,a] ≥ 0
 q[16,a] ≥ 0
 q[17,a] ≥ 0
 q[18,a] ≥ 0
 q[19,a] ≥ 0
 q[20,a] ≥ 0
 q[1,b] ≥ 0
 q[2,b] ≥ 0
 q[3,b] ≥ 0
 q[4,b] ≥ 0
 q[5,b] ≥ 0
 q[6,b] ≥ 0
 q[7,b] ≥ 0
 q[8,b] ≥ 0
 q[9,b] ≥ 0
 q[10,b] ≥ 0
 q[11,b] ≥ 0
 q[12,b] ≥ 0
 q[13,b] ≥ 0
 q[14,b] ≥ 0
 q[15,b] ≥ 0
 q[16,b] ≥ 0
 q[17,b] ≥ 0
 q[18,b] ≥ 0
 q[19,b] ≥ 0
 q[20,b] ≥ 0
 rv[1] ≥ 0
 rv[2] ≥ 0
 rv[3] ≥ 0
 rv[4] ≥ 0
 rv[5] ≥ 0
 rv[6] ≥ 0
 rv[7] ≥ 0
 rv[8] ≥ 0
 rv[9] ≥ 0
 rv[10] ≥ 0
[[...703 constraints skipped...]]
 yv[1] binary
 yv[2] binary
 yv[3] binary
 yv[4] binary
 yv[5] binary
 yv[6] binary
 yv[7] binary
 yv[8] binary
 yv[9] binary
 yv[10] binary
 yv[11] binary
 yv[12] binary
 yv[13] binary
 q[1,a] - q[1,b] = 0
 q[2,a] - q[2,b] = 0
 q[3,a] - q[3,b] = 0
 q[4,a] - q[4,b] = 0
 q[5,a] - q[5,b] = 0
 q[6,a] - q[6,b] = 0
 q[7,a] - q[7,b] = 0
 q[8,a] - q[8,b] = 0
 q[9,a] - q[9,b] = 0
 q[10,a] - q[10,b] = 0
 q[11,a] - q[11,b] = 0
 q[12,a] - q[12,b] = 0
 q[13,a] - q[13,b] = 0
 q[14,a] - q[14,b] = 0
 q[15,a] - q[15,b] = 0
 q[16,a] - q[16,b] = 0
 q[17,a] - q[17,b] = 0
 q[18,a] - q[18,b] = 0
 q[19,a] - q[19,b] = 0
 q[20,a] - q[20,b] = 0
 x[1] + ze[1,(1, :b)] + ze[1,(20, :a)] + ze[1,(9, :b)] + ze[1,(14, :b)] + ze[1,(3, :b)] + ze[1,(17, :a)] + ze[1,(1, :a)] + ze[1,(9, :a)] + ze[1,(14, :a)] + ze[1,(3, :a)] + ze[1,(2, :b)] + ze[1,(7, :a)] + ze[1,(10, :b)] + ze[1,(13, :a)] + ze[1,(15, :a)] + ze[1,(2, :a)] + ze[1,(10, :a)] = 1
 x[2] + ze[2,(8, :b)] + ze[2,(1, :b)] + ze[2,(16, :a)] + ze[2,(20, :a)] + ze[2,(11, :b)] + ze[2,(9, :b)] + ze[2,(14, :b)] + ze[2,(3, :b)] + ze[2,(17, :a)] + ze[2,(1, :a)] + ze[2,(9, :a)] + ze[2,(14, :a)] + ze[2,(3, :a)] + ze[2,(13, :b)] + ze[2,(2, :b)] + ze[2,(7, :a)] + ze[2,(10, :b)] + ze[2,(5, :b)] + ze[2,(13, :a)] + ze[2,(15, :a)] + ze[2,(2, :a)] + ze[2,(10, :a)] = 1
 x[3] + ze[3,(17, :b)] + ze[3,(1, :b)] + ze[3,(6, :b)] + ze[3,(20, :a)] + ze[3,(9, :b)] + ze[3,(12, :a)] + ze[3,(8, :a)] + ze[3,(1, :a)] + ze[3,(19, :a)] + ze[3,(7, :b)] + ze[3,(6, :a)] + ze[3,(11, :a)] + ze[3,(9, :a)] + ze[3,(14, :a)] + ze[3,(3, :a)] + ze[3,(4, :b)] + ze[3,(15, :b)] + ze[3,(2, :b)] + ze[3,(7, :a)] + ze[3,(10, :b)] + ze[3,(18, :b)] + ze[3,(16, :b)] + ze[3,(13, :a)] + ze[3,(15, :a)] + ze[3,(2, :a)] + ze[3,(10, :a)] + ze[3,(12, :b)] + ze[3,(18, :a)] = 1
 x[4] + ze[4,(1, :b)] + ze[4,(20, :a)] + ze[4,(9, :b)] + ze[4,(12, :a)] + ze[4,(14, :b)] + ze[4,(3, :b)] + ze[4,(17, :a)] + ze[4,(1, :a)] + ze[4,(9, :a)] + ze[4,(14, :a)] + ze[4,(3, :a)] + ze[4,(15, :b)] + ze[4,(2, :b)] + ze[4,(7, :a)] + ze[4,(10, :b)] + ze[4,(20, :b)] + ze[4,(13, :a)] + ze[4,(15, :a)] + ze[4,(2, :a)] + ze[4,(10, :a)] + ze[4,(18, :a)] = 1
 x[5] + ze[5,(8, :b)] + ze[5,(5, :a)] + ze[5,(6, :b)] + ze[5,(16, :a)] + ze[5,(11, :b)] + ze[5,(12, :a)] + ze[5,(8, :a)] + ze[5,(19, :a)] + ze[5,(7, :b)] + ze[5,(6, :a)] + ze[5,(11, :a)] + ze[5,(4, :b)] + ze[5,(15, :b)] + ze[5,(13, :b)] + ze[5,(7, :a)] + ze[5,(10, :b)] + ze[5,(5, :b)] + ze[5,(4, :a)] + ze[5,(15, :a)] + ze[5,(2, :a)] + ze[5,(12, :b)] + ze[5,(18, :a)] = 1
 x[6] + ze[6,(17, :b)] + ze[6,(1, :b)] + ze[6,(20, :a)] + ze[6,(9, :b)] + ze[6,(14, :b)] + ze[6,(3, :b)] + ze[6,(17, :a)] + ze[6,(1, :a)] + ze[6,(9, :a)] + ze[6,(14, :a)] + ze[6,(3, :a)] + ze[6,(2, :b)] + ze[6,(18, :b)] + ze[6,(16, :b)] + ze[6,(13, :a)] + ze[6,(10, :a)] = 1
 x[7] + ze[7,(8, :b)] + ze[7,(17, :b)] + ze[7,(1, :b)] + ze[7,(6, :b)] + ze[7,(16, :a)] + ze[7,(20, :a)] + ze[7,(11, :b)] + ze[7,(12, :a)] + ze[7,(8, :a)] + ze[7,(19, :a)] + ze[7,(7, :b)] + ze[7,(6, :a)] + ze[7,(11, :a)] + ze[7,(3, :a)] + ze[7,(4, :b)] + ze[7,(15, :b)] + ze[7,(13, :b)] + ze[7,(2, :b)] + ze[7,(7, :a)] + ze[7,(10, :b)] + ze[7,(18, :b)] + ze[7,(5, :b)] + ze[7,(16, :b)] + ze[7,(15, :a)] + ze[7,(2, :a)] + ze[7,(12, :b)] + ze[7,(18, :a)] = 1
 x[8] + ze[8,(8, :b)] + ze[8,(17, :b)] + ze[8,(8, :a)] + ze[8,(19, :a)] + ze[8,(13, :b)] + ze[8,(7, :b)] + ze[8,(18, :b)] + ze[8,(12, :b)] = 1
 x[9] + ze[9,(8, :b)] + ze[9,(17, :b)] + ze[9,(19, :b)] + ze[9,(5, :a)] + ze[9,(6, :b)] + ze[9,(16, :a)] + ze[9,(11, :b)] + ze[9,(12, :a)] + ze[9,(8, :a)] + ze[9,(19, :a)] + ze[9,(7, :b)] + ze[9,(6, :a)] + ze[9,(11, :a)] + ze[9,(4, :b)] + ze[9,(13, :b)] + ze[9,(15, :b)] + ze[9,(7, :a)] + ze[9,(10, :b)] + ze[9,(18, :b)] + ze[9,(5, :b)] + ze[9,(16, :b)] + ze[9,(4, :a)] + ze[9,(15, :a)] + ze[9,(2, :a)] + ze[9,(12, :b)] + ze[9,(18, :a)] = 1
 x[10] + ze[10,(8, :b)] + ze[10,(17, :b)] + ze[10,(5, :a)] + ze[10,(6, :b)] + ze[10,(16, :a)] + ze[10,(11, :b)] + ze[10,(9, :b)] + ze[10,(12, :a)] + ze[10,(8, :a)] + ze[10,(1, :a)] + ze[10,(19, :a)] + ze[10,(7, :b)] + ze[10,(6, :a)] + ze[10,(11, :a)] + ze[10,(14, :a)] + ze[10,(13, :b)] + ze[10,(4, :b)] + ze[10,(15, :b)] + ze[10,(18, :b)] + ze[10,(5, :b)] + ze[10,(16, :b)] + ze[10,(13, :a)] + ze[10,(4, :a)] + ze[10,(12, :b)] + ze[10,(18, :a)] = 1
 x[11] + ze[11,(8, :b)] + ze[11,(17, :b)] + ze[11,(5, :a)] + ze[11,(6, :b)] + ze[11,(16, :a)] + ze[11,(11, :b)] + ze[11,(12, :a)] + ze[11,(14, :b)] + ze[11,(3, :b)] + ze[11,(17, :a)] + ze[11,(19, :a)] + ze[11,(11, :a)] + ze[11,(13, :b)] + ze[11,(15, :b)] + ze[11,(4, :b)] + ze[11,(7, :a)] + ze[11,(10, :b)] + ze[11,(18, :b)] + ze[11,(5, :b)] + ze[11,(16, :b)] + ze[11,(4, :a)] + ze[11,(15, :a)] + ze[11,(2, :a)] + ze[11,(12, :b)] + ze[11,(18, :a)] = 1
 x[12] + ze[12,(4, :b)] + ze[12,(6, :b)] + ze[12,(11, :a)] + ze[12,(12, :b)] = 1
 x[13] + ze[13,(1, :b)] + ze[13,(3, :a)] + ze[13,(2, :b)] = 1
 ye[19] = 0
 ye[20] = 1
 q[19,a] = 0
 q[20,a] = 0.9963470283756224
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.326752
Threads  1

Optimize a model with 387 rows, 363 columns and 1065 nonzeros
Model fingerprint: 0x82184b14
Model has 257 simple general constraints
  257 INDICATOR
Variable types: 53 continuous, 310 integer (310 binary)
Coefficient statistics:
  Matrix range     [3e-01, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 1e+00]
  RHS range        [1e-06, 1e+00]
  GenCon rhs range [8e-03, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve added 39 rows and 0 columns
Presolve removed 0 rows and 109 columns
Presolve time: 0.02s
Presolved: 426 rows, 254 columns, 2294 nonzeros
Variable types: 29 continuous, 225 integer (225 binary)
Found heuristic solution: objective 19.0000000
Found heuristic solution: objective 18.0000000
Found heuristic solution: objective 11.0000000
Found heuristic solution: objective 10.0000000

Root relaxation: objective 2.249919e+00, 233 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    2.24992    0   38   10.00000    2.24992  77.5%     -    0s
H    0     0                       7.0000000    2.24992  67.9%     -    0s
H    0     0                       6.0000000    2.24992  62.5%     -    0s
H    0     0                       5.0000000    2.24992  55.0%     -    0s
     0     0    2.50000    0   37    5.00000    2.50000  50.0%     -    0s
H    0     0                       4.0000000    2.50000  37.5%     -    0s
     0     0    3.00000    0   29    4.00000    3.00000  25.0%     -    0s
H    0     0                       3.0000000    3.00000  0.00%     -    0s
     0     0    3.00000    0   29    3.00000    3.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 4
  MIR: 6
  Flow cover: 4
  Zero half: 3

Explored 1 nodes (351 simplex iterations) in 0.06 seconds (0.03 work units)
Thread count was 1 (of 16 available processors)

Solution count 9: 3 4 5 ... 19

Optimal solution found (tolerance 1.00e-04)
Best objective 3.000000000000e+00, best bound 3.000000000000e+00, gap 0.0000%

User-callback calls 928, time in user-callback 0.00 sec

 sepatime0 0 0
3.0Stat(MathOptInterface.OPTIMAL, 3.0, 3.0, 0.0, 0.0, 1.673248, 0.05689406394958496, 1, Main.CFLG.LEFPAI, "", #undef)
