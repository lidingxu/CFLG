Data path: /scratch/opt/lxu/CFLG/benchmarks/random_A
Instance: r_20_0.2_34.txt
Result path: /scratch/opt/lxu/CFLG/results/random_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPAI
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_A r_20_0.2_34.txt /scratch/opt/lxu/CFLG/results/random_A Gurobi 7200 LEFPAI Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_A r_20_0.2_34.txt LEFPAI Large
/scratch/opt/lxu/CFLG/benchmarks/random_A/r_20_0.2_34.txt

 read graph
data loaded

problem_graph/original graph: node: 20/20 edge: 34/34 dlt: 1.2285408330163121 break_avg_len: 0.6142704165081561 break_max_len: 0.9824660469310703Vbar/V, Ebar/E(17, 20, 31, 34)
(Dict{Int64, Bool}(20 => 1, 11 => 1, 17 => 1), Dict(20 => 0.32411156817389586, 11 => 0.2916658715864598, 17 => 0.7476438235991612))Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 54 rows, 102 columns and 170 nonzeros
Model fingerprint: 0xba1a4afd
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 54 rows and 102 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  3.000000000e+00

User-callback calls 35, time in user-callback 0.00 sec
elapsed CPU time: 1.637365 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7198.362635

 more cuts: false 1.2285408330163121 false
is_attach:trueformulation:LEFPAI0 34 0

 model loaded

Min ye[1] + ye[2] + ye[3] + ye[4] + ye[5] + ye[6] + ye[7] + ye[8] + ye[9] + ye[10] + ye[11] + ye[12] + ye[13] + ye[14] + ye[15] + ye[16] + ye[17] + ye[18] + ye[19] + ye[20] + ye[21] + ye[22] + ye[23] + ye[24] + ye[25] + ye[26] + ye[27] + ye[28] + ye[29] + ye[30] + ye[31] + yv[1] + yv[2] + yv[3] + yv[4] + yv[5] + yv[6] + yv[7] + yv[8] + yv[9] + yv[10] + yv[11] + yv[12] + yv[13] + yv[14] + yv[15] + yv[16] + yv[17] + yv[18] + yv[19] + yv[20]
Subject to
 q[1,a] ≥ 0
 q[2,a] ≥ 0
 q[3,a] ≥ 0
 q[4,a] ≥ 0
 q[5,a] ≥ 0
 q[6,a] ≥ 0
 q[7,a] ≥ 0
 q[8,a] ≥ 0
 q[9,a] ≥ 0
 q[10,a] ≥ 0
 q[11,a] ≥ 0
 q[12,a] ≥ 0
 q[13,a] ≥ 0
 q[14,a] ≥ 0
 q[15,a] ≥ 0
 q[16,a] ≥ 0
 q[17,a] ≥ 0
 q[18,a] ≥ 0
 q[19,a] ≥ 0
 q[20,a] ≥ 0
 q[21,a] ≥ 0
 q[22,a] ≥ 0
 q[23,a] ≥ 0
 q[24,a] ≥ 0
 q[25,a] ≥ 0
 q[26,a] ≥ 0
 q[27,a] ≥ 0
 q[28,a] ≥ 0
 q[29,a] ≥ 0
 q[30,a] ≥ 0
 q[31,a] ≥ 0
 q[32,a] ≥ 0
 q[33,a] ≥ 0
 q[34,a] ≥ 0
 q[1,b] ≥ 0
 q[2,b] ≥ 0
 q[3,b] ≥ 0
 q[4,b] ≥ 0
 q[5,b] ≥ 0
 q[6,b] ≥ 0
 q[7,b] ≥ 0
 q[8,b] ≥ 0
 q[9,b] ≥ 0
 q[10,b] ≥ 0
 q[11,b] ≥ 0
 q[12,b] ≥ 0
 q[13,b] ≥ 0
 q[14,b] ≥ 0
 q[15,b] ≥ 0
 q[16,b] ≥ 0
[[...1869 constraints skipped...]]
 q[11,a] - q[11,b] = 0
 q[12,a] - q[12,b] = 0
 q[13,a] - q[13,b] = 0
 q[14,a] - q[14,b] = 0
 q[15,a] - q[15,b] = 0
 q[16,a] - q[16,b] = 0
 q[17,a] - q[17,b] = 0
 q[18,a] - q[18,b] = 0
 q[19,a] - q[19,b] = 0
 q[20,a] - q[20,b] = 0
 q[21,a] - q[21,b] = 0
 q[22,a] - q[22,b] = 0
 q[23,a] - q[23,b] = 0
 q[24,a] - q[24,b] = 0
 q[25,a] - q[25,b] = 0
 q[26,a] - q[26,b] = 0
 q[27,a] - q[27,b] = 0
 q[28,a] - q[28,b] = 0
 q[29,a] - q[29,b] = 0
 q[30,a] - q[30,b] = 0
 q[31,a] - q[31,b] = 0
 q[32,a] - q[32,b] = 0
 q[33,a] - q[33,b] = 0
 q[34,a] - q[34,b] = 0
 x[1] + ze[1,(28, :b)] + ze[1,(26, :a)] + ze[1,(21, :a)] + ze[1,(1, :b)] + ze[1,(23, :b)] + ze[1,(22, :b)] + ze[1,(5, :a)] + ze[1,(16, :a)] + ze[1,(11, :b)] + ze[1,(12, :a)] + ze[1,(30, :a)] + ze[1,(28, :a)] + ze[1,(8, :a)] + ze[1,(3, :b)] + ze[1,(1, :a)] + ze[1,(23, :a)] + ze[1,(22, :a)] + ze[1,(32, :a)] + ze[1,(11, :a)] + ze[1,(31, :a)] + ze[1,(14, :a)] + ze[1,(3, :a)] + ze[1,(13, :b)] + ze[1,(15, :b)] + ze[1,(2, :b)] + ze[1,(7, :a)] + ze[1,(25, :a)] + ze[1,(33, :a)] + ze[1,(27, :b)] + ze[1,(16, :b)] + ze[1,(34, :a)] + ze[1,(4, :a)] + ze[1,(15, :a)] + ze[1,(2, :a)] + ze[1,(27, :a)] + ze[1,(12, :b)] + ze[1,(10, :a)] = 1
 x[2] + ze[2,(28, :b)] + ze[2,(23, :b)] + ze[2,(12, :a)] + ze[2,(28, :a)] + ze[2,(23, :a)] + ze[2,(7, :b)] + ze[2,(25, :b)] + ze[2,(11, :a)] + ze[2,(2, :b)] + ze[2,(7, :a)] + ze[2,(25, :a)] + ze[2,(27, :b)] + ze[2,(16, :b)] + ze[2,(34, :a)] + ze[2,(2, :a)] + ze[2,(27, :a)] + ze[2,(18, :a)] + ze[2,(26, :a)] + ze[2,(16, :a)] + ze[2,(31, :b)] + ze[2,(31, :a)] + ze[2,(29, :a)] + ze[2,(21, :a)] + ze[2,(24, :b)] + ze[2,(1, :b)] + ze[2,(22, :b)] + ze[2,(24, :a)] + ze[2,(3, :b)] + ze[2,(1, :a)] + ze[2,(22, :a)] + ze[2,(33, :b)] + ze[2,(14, :a)] + ze[2,(3, :a)] + ze[2,(15, :b)] + ze[2,(33, :a)] + ze[2,(5, :b)] + ze[2,(15, :a)] + ze[2,(30, :b)] + ze[2,(5, :a)] + ze[2,(6, :b)] + ze[2,(30, :a)] + ze[2,(6, :a)] + ze[2,(13, :b)] + ze[2,(4, :b)] + ze[2,(4, :a)] = 1
 x[3] + ze[3,(28, :b)] + ze[3,(11, :b)] + ze[3,(12, :a)] + ze[3,(28, :a)] + ze[3,(23, :a)] + ze[3,(7, :b)] + ze[3,(25, :b)] + ze[3,(2, :b)] + ze[3,(7, :a)] + ze[3,(25, :a)] + ze[3,(18, :b)] + ze[3,(27, :b)] + ze[3,(16, :b)] + ze[3,(34, :a)] + ze[3,(10, :a)] + ze[3,(18, :a)] + ze[3,(26, :a)] + ze[3,(20, :a)] + ze[3,(31, :b)] + ze[3,(19, :a)] + ze[3,(31, :a)] + ze[3,(9, :a)] + ze[3,(21, :b)] + ze[3,(21, :a)] + ze[3,(24, :b)] + ze[3,(17, :b)] + ze[3,(1, :b)] + ze[3,(24, :a)] + ze[3,(14, :b)] + ze[3,(8, :a)] + ze[3,(17, :a)] + ze[3,(3, :b)] + ze[3,(1, :a)] + ze[3,(22, :a)] + ze[3,(3, :a)] + ze[3,(5, :b)] + ze[3,(30, :b)] + ze[3,(32, :b)] + ze[3,(5, :a)] + ze[3,(6, :b)] + ze[3,(30, :a)] + ze[3,(32, :a)] + ze[3,(4, :b)] + ze[3,(13, :b)] + ze[3,(4, :a)] + ze[3,(12, :b)] = 1
 x[4] + ze[4,(28, :b)] + ze[4,(17, :b)] + ze[4,(1, :b)] + ze[4,(19, :b)] + ze[4,(22, :b)] + ze[4,(32, :b)] + ze[4,(5, :a)] + ze[4,(23, :b)] + ze[4,(6, :b)] + ze[4,(14, :b)] + ze[4,(28, :a)] + ze[4,(3, :b)] + ze[4,(1, :a)] + ze[4,(19, :a)] + ze[4,(22, :a)] + ze[4,(32, :a)] + ze[4,(29, :b)] + ze[4,(7, :b)] + ze[4,(11, :a)] + ze[4,(33, :b)] + ze[4,(31, :a)] + ze[4,(14, :a)] + ze[4,(13, :b)] + ze[4,(15, :b)] + ze[4,(2, :b)] + ze[4,(7, :a)] + ze[4,(25, :a)] + ze[4,(33, :a)] + ze[4,(27, :b)] + ze[4,(18, :b)] + ze[4,(26, :b)] + ze[4,(5, :b)] + ze[4,(20, :b)] + ze[4,(15, :a)] + ze[4,(4, :a)] + ze[4,(2, :a)] + ze[4,(27, :a)] + ze[4,(26, :a)] = 1
 x[5] + ze[5,(28, :b)] + ze[5,(23, :b)] + ze[5,(11, :b)] + ze[5,(12, :a)] + ze[5,(28, :a)] + ze[5,(23, :a)] + ze[5,(25, :b)] + ze[5,(11, :a)] + ze[5,(34, :b)] + ze[5,(2, :b)] + ze[5,(7, :a)] + ze[5,(25, :a)] + ze[5,(10, :b)] + ze[5,(26, :b)] + ze[5,(27, :b)] + ze[5,(16, :b)] + ze[5,(20, :b)] + ze[5,(34, :a)] + ze[5,(2, :a)] + ze[5,(10, :a)] + ze[5,(18, :a)] + ze[5,(26, :a)] + ze[5,(27, :a)] + ze[5,(19, :b)] + ze[5,(20, :a)] + ze[5,(31, :b)] + ze[5,(9, :b)] + ze[5,(29, :b)] + ze[5,(31, :a)] + ze[5,(9, :a)] + ze[5,(21, :b)] + ze[5,(21, :a)] + ze[5,(24, :b)] + ze[5,(8, :b)] + ze[5,(1, :b)] + ze[5,(22, :b)] + ze[5,(24, :a)] + ze[5,(8, :a)] + ze[5,(17, :a)] + ze[5,(3, :b)] + ze[5,(1, :a)] + ze[5,(22, :a)] + ze[5,(33, :b)] + ze[5,(3, :a)] + ze[5,(15, :b)] + ze[5,(33, :a)] + ze[5,(30, :b)] + ze[5,(5, :a)] + ze[5,(30, :a)] + ze[5,(32, :a)] + ze[5,(4, :b)] + ze[5,(13, :b)] + ze[5,(4, :a)] + ze[5,(13, :a)] + ze[5,(12, :b)] = 1
 x[6] + ze[6,(28, :b)] + ze[6,(23, :b)] + ze[6,(11, :b)] + ze[6,(12, :a)] + ze[6,(28, :a)] + ze[6,(23, :a)] + ze[6,(25, :b)] + ze[6,(11, :a)] + ze[6,(34, :b)] + ze[6,(2, :b)] + ze[6,(7, :a)] + ze[6,(25, :a)] + ze[6,(27, :b)] + ze[6,(16, :b)] + ze[6,(34, :a)] + ze[6,(2, :a)] + ze[6,(10, :a)] + ze[6,(27, :a)] + ze[6,(26, :a)] + ze[6,(18, :a)] + ze[6,(16, :a)] + ze[6,(20, :a)] + ze[6,(31, :b)] + ze[6,(31, :a)] + ze[6,(9, :a)] + ze[6,(21, :b)] + ze[6,(21, :a)] + ze[6,(24, :b)] + ze[6,(1, :b)] + ze[6,(22, :b)] + ze[6,(24, :a)] + ze[6,(8, :a)] + ze[6,(17, :a)] + ze[6,(3, :b)] + ze[6,(1, :a)] + ze[6,(22, :a)] + ze[6,(14, :a)] + ze[6,(3, :a)] + ze[6,(15, :b)] + ze[6,(33, :a)] + ze[6,(15, :a)] + ze[6,(30, :b)] + ze[6,(5, :a)] + ze[6,(30, :a)] + ze[6,(32, :a)] + ze[6,(4, :b)] + ze[6,(13, :b)] + ze[6,(4, :a)] + ze[6,(12, :b)] = 1
 x[7] + ze[7,(28, :b)] + ze[7,(1, :b)] + ze[7,(19, :b)] + ze[7,(32, :b)] + ze[7,(5, :a)] + ze[7,(6, :b)] + ze[7,(20, :a)] + ze[7,(28, :a)] + ze[7,(17, :a)] + ze[7,(32, :a)] + ze[7,(22, :a)] + ze[7,(6, :a)] + ze[7,(29, :b)] + ze[7,(7, :b)] + ze[7,(31, :a)] + ze[7,(9, :a)] + ze[7,(13, :b)] + ze[7,(21, :b)] + ze[7,(29, :a)] + ze[7,(7, :a)] + ze[7,(25, :a)] + ze[7,(27, :b)] + ze[7,(26, :b)] + ze[7,(5, :b)] + ze[7,(16, :b)] + ze[7,(20, :b)] + ze[7,(26, :a)] = 1
 x[8] + ze[8,(30, :b)] + ze[8,(8, :b)] + ze[8,(27, :a)] + ze[8,(18, :a)] + ze[8,(23, :b)] + ze[8,(19, :b)] + ze[8,(22, :b)] + ze[8,(11, :b)] + ze[8,(20, :a)] + ze[8,(9, :b)] + ze[8,(31, :b)] + ze[8,(30, :a)] + ze[8,(24, :a)] + ze[8,(8, :a)] + ze[8,(17, :a)] + ze[8,(3, :b)] + ze[8,(23, :a)] + ze[8,(1, :a)] + ze[8,(29, :b)] + ze[8,(25, :b)] + ze[8,(11, :a)] + ze[8,(9, :a)] + ze[8,(3, :a)] + ze[8,(34, :b)] + ze[8,(4, :b)] + ze[8,(15, :b)] + ze[8,(21, :b)] + ze[8,(2, :b)] + ze[8,(33, :a)] + ze[8,(10, :b)] + ze[8,(26, :b)] + ze[8,(34, :a)] + ze[8,(20, :b)] + ze[8,(13, :a)] + ze[8,(4, :a)] + ze[8,(21, :a)] + ze[8,(2, :a)] + ze[8,(10, :a)] + ze[8,(24, :b)] = 1
 x[9] + ze[9,(28, :b)] + ze[9,(1, :b)] + ze[9,(5, :a)] + ze[9,(11, :b)] + ze[9,(12, :a)] + ze[9,(30, :a)] + ze[9,(8, :a)] + ze[9,(23, :a)] + ze[9,(22, :a)] + ze[9,(3, :a)] + ze[9,(13, :b)] + ze[9,(10, :b)] + ze[9,(27, :b)] + ze[9,(16, :b)] + ze[9,(34, :a)] + ze[9,(13, :a)] + ze[9,(21, :a)] + ze[9,(10, :a)] + ze[9,(12, :b)] + ze[9,(26, :a)] = 1
 x[10] + ze[10,(28, :b)] + ze[10,(23, :b)] + ze[10,(12, :a)] + ze[10,(28, :a)] + ze[10,(23, :a)] + ze[10,(7, :b)] + ze[10,(25, :b)] + ze[10,(11, :a)] + ze[10,(2, :b)] + ze[10,(7, :a)] + ze[10,(25, :a)] + ze[10,(27, :b)] + ze[10,(10, :b)] + ze[10,(26, :b)] + ze[10,(18, :b)] + ze[10,(16, :b)] + ze[10,(20, :b)] + ze[10,(34, :a)] + ze[10,(2, :a)] + ze[10,(27, :a)] + ze[10,(18, :a)] + ze[10,(26, :a)] + ze[10,(19, :b)] + ze[10,(16, :a)] + ze[10,(20, :a)] + ze[10,(31, :b)] + ze[10,(19, :a)] + ze[10,(29, :b)] + ze[10,(31, :a)] + [[...2 terms omitted...]] + ze[10,(29, :a)] + ze[10,(21, :a)] + ze[10,(24, :b)] + ze[10,(17, :b)] + ze[10,(1, :b)] + ze[10,(22, :b)] + ze[10,(24, :a)] + ze[10,(14, :b)] + ze[10,(3, :b)] + ze[10,(17, :a)] + ze[10,(1, :a)] + ze[10,(22, :a)] + ze[10,(33, :b)] + ze[10,(14, :a)] + ze[10,(3, :a)] + ze[10,(15, :b)] + ze[10,(33, :a)] + ze[10,(5, :b)] + ze[10,(15, :a)] + ze[10,(30, :b)] + ze[10,(32, :b)] + ze[10,(5, :a)] + ze[10,(6, :b)] + ze[10,(30, :a)] + ze[10,(32, :a)] + ze[10,(6, :a)] + ze[10,(13, :b)] + ze[10,(4, :b)] + ze[10,(13, :a)] + ze[10,(4, :a)] = 1
 x[11] + ze[11,(28, :b)] + ze[11,(30, :b)] + ze[11,(26, :a)] + ze[11,(1, :b)] + ze[11,(23, :b)] + ze[11,(22, :b)] + ze[11,(5, :a)] + ze[11,(16, :a)] + ze[11,(31, :b)] + ze[11,(24, :a)] + ze[11,(28, :a)] + ze[11,(22, :a)] + ze[11,(7, :b)] + ze[11,(25, :b)] + ze[11,(31, :a)] + ze[11,(14, :a)] + ze[11,(13, :b)] + ze[11,(15, :b)] + ze[11,(4, :b)] + ze[11,(29, :a)] + ze[11,(7, :a)] + ze[11,(25, :a)] + ze[11,(33, :a)] + ze[11,(27, :b)] + ze[11,(5, :b)] + ze[11,(16, :b)] + ze[11,(15, :a)] + ze[11,(18, :a)] + ze[11,(24, :b)] = 1
 x[12] + ze[12,(28, :b)] + ze[12,(11, :b)] + ze[12,(12, :a)] + ze[12,(23, :a)] + ze[12,(25, :b)] + ze[12,(2, :b)] + ze[12,(27, :b)] + ze[12,(18, :b)] + ze[12,(26, :b)] + ze[12,(16, :b)] + ze[12,(34, :a)] + ze[12,(10, :a)] + ze[12,(18, :a)] + ze[12,(26, :a)] + ze[12,(19, :b)] + ze[12,(9, :b)] + ze[12,(31, :b)] + ze[12,(19, :a)] + ze[12,(29, :b)] + ze[12,(9, :a)] + ze[12,(21, :b)] + ze[12,(29, :a)] + ze[12,(21, :a)] + ze[12,(24, :b)] + ze[12,(8, :b)] + ze[12,(17, :b)] + ze[12,(1, :b)] + ze[12,(24, :a)] + ze[12,(14, :b)] + ze[12,(8, :a)] + ze[12,(17, :a)] + ze[12,(3, :b)] + ze[12,(1, :a)] + ze[12,(22, :a)] + ze[12,(3, :a)] + ze[12,(30, :b)] + ze[12,(5, :a)] + ze[12,(30, :a)] + ze[12,(6, :a)] + ze[12,(4, :b)] + ze[12,(13, :b)] + ze[12,(4, :a)] + ze[12,(12, :b)] = 1
 x[13] + ze[13,(28, :b)] + ze[13,(11, :b)] + ze[13,(12, :a)] + ze[13,(28, :a)] + ze[13,(23, :a)] + ze[13,(7, :b)] + ze[13,(25, :b)] + ze[13,(2, :b)] + ze[13,(7, :a)] + ze[13,(25, :a)] + ze[13,(18, :b)] + ze[13,(27, :b)] + ze[13,(16, :b)] + ze[13,(34, :a)] + ze[13,(10, :a)] + ze[13,(18, :a)] + ze[13,(26, :a)] + ze[13,(20, :a)] + ze[13,(31, :b)] + ze[13,(19, :a)] + ze[13,(31, :a)] + ze[13,(9, :a)] + ze[13,(21, :b)] + ze[13,(21, :a)] + ze[13,(24, :b)] + ze[13,(17, :b)] + ze[13,(1, :b)] + ze[13,(24, :a)] + ze[13,(14, :b)] + ze[13,(8, :a)] + ze[13,(17, :a)] + ze[13,(3, :b)] + ze[13,(1, :a)] + ze[13,(22, :a)] + ze[13,(3, :a)] + ze[13,(5, :b)] + ze[13,(30, :b)] + ze[13,(32, :b)] + ze[13,(5, :a)] + ze[13,(6, :b)] + ze[13,(30, :a)] + ze[13,(32, :a)] + ze[13,(4, :b)] + ze[13,(13, :b)] + ze[13,(4, :a)] + ze[13,(12, :b)] = 1
 x[14] + ze[14,(28, :b)] + ze[14,(24, :b)] + ze[14,(17, :b)] + ze[14,(26, :a)] + ze[14,(1, :b)] + ze[14,(19, :b)] + ze[14,(5, :a)] + ze[14,(16, :a)] + ze[14,(20, :a)] + ze[14,(31, :b)] + ze[14,(24, :a)] + ze[14,(14, :b)] + ze[14,(17, :a)] + ze[14,(19, :a)] + ze[14,(22, :a)] + ze[14,(29, :b)] + ze[14,(25, :b)] + ze[14,(9, :a)] + ze[14,(14, :a)] + ze[14,(4, :b)] + ze[14,(13, :b)] + ze[14,(21, :b)] + ze[14,(27, :b)] + ze[14,(18, :b)] + ze[14,(26, :b)] + ze[14,(16, :b)] + ze[14,(20, :b)] + ze[14,(15, :a)] + ze[14,(18, :a)] + ze[14,(30, :b)] = 1
 x[15] + ze[15,(28, :b)] + ze[15,(26, :a)] + ze[15,(4, :a)] + ze[15,(23, :b)] + ze[15,(1, :b)] + ze[15,(22, :b)] + ze[15,(32, :b)] + ze[15,(5, :a)] + ze[15,(6, :b)] + ze[15,(16, :a)] + ze[15,(11, :b)] + ze[15,(12, :a)] + ze[15,(30, :a)] + ze[15,(28, :a)] + ze[15,(8, :a)] + ze[15,(3, :b)] + ze[15,(23, :a)] + ze[15,(1, :a)] + ze[15,(22, :a)] + ze[15,(32, :a)] + ze[15,(7, :b)] + ze[15,(11, :a)] + ze[15,(31, :a)] + ze[15,(14, :a)] + ze[15,(3, :a)] + ze[15,(13, :b)] + ze[15,(15, :b)] + ze[15,(2, :b)] + ze[15,(7, :a)] + ze[15,(25, :a)] + ze[15,(27, :b)] + ze[15,(5, :b)] + ze[15,(16, :b)] + ze[15,(34, :a)] + ze[15,(15, :a)] + ze[15,(21, :a)] + ze[15,(2, :a)] + ze[15,(27, :a)] + ze[15,(12, :b)] + ze[15,(10, :a)] = 1
 x[16] + ze[16,(28, :b)] + ze[16,(8, :b)] + ze[16,(17, :b)] + ze[16,(1, :b)] + ze[16,(19, :b)] + ze[16,(5, :a)] + ze[16,(16, :a)] + ze[16,(20, :a)] + ze[16,(11, :b)] + ze[16,(9, :b)] + ze[16,(12, :a)] + ze[16,(30, :a)] + ze[16,(14, :b)] + ze[16,(8, :a)] + ze[16,(17, :a)] + ze[16,(23, :a)] + ze[16,(19, :a)] + ze[16,(22, :a)] + ze[16,(29, :b)] + ze[16,(6, :a)] + ze[16,(9, :a)] + ze[16,(14, :a)] + ze[16,(3, :a)] + ze[16,(13, :b)] + ze[16,(21, :b)] + ze[16,(29, :a)] + ze[16,(27, :b)] + ze[16,(18, :b)] + ze[16,(26, :b)] + ze[16,(16, :b)] + ze[16,(20, :b)] + ze[16,(34, :a)] + ze[16,(15, :a)] + ze[16,(21, :a)] + ze[16,(10, :a)] + ze[16,(12, :b)] + ze[16,(26, :a)] = 1
 x[17] + ze[17,(8, :b)] + ze[17,(19, :b)] + ze[17,(11, :b)] + ze[17,(20, :a)] + ze[17,(9, :b)] + ze[17,(30, :a)] + ze[17,(8, :a)] + ze[17,(17, :a)] + ze[17,(23, :a)] + ze[17,(29, :b)] + ze[17,(9, :a)] + ze[17,(3, :a)] + ze[17,(21, :b)] + ze[17,(26, :b)] + ze[17,(34, :a)] + ze[17,(20, :b)] + ze[17,(21, :a)] + ze[17,(10, :a)] = 1
 x[18] + ze[18,(26, :a)] + ze[18,(1, :b)] + ze[18,(23, :b)] + ze[18,(14, :a)] + ze[18,(13, :b)] + ze[18,(4, :b)] + ze[18,(15, :b)] + ze[18,(29, :a)] + ze[18,(33, :a)] + ze[18,(27, :b)] + ze[18,(15, :a)] + ze[18,(18, :a)] + ze[18,(30, :b)] = 1
 x[19] + ze[19,(1, :b)] + ze[19,(5, :a)] + ze[19,(12, :a)] + ze[19,(30, :a)] + ze[19,(32, :a)] + ze[19,(31, :a)] + ze[19,(14, :a)] + ze[19,(3, :a)] + ze[19,(13, :b)] + ze[19,(7, :a)] + ze[19,(25, :a)] + ze[19,(27, :b)] + ze[19,(34, :a)] + ze[19,(21, :a)] + ze[19,(26, :a)] = 1
 x[20] + ze[20,(11, :b)] + ze[20,(12, :a)] + ze[20,(30, :a)] + ze[20,(8, :a)] + ze[20,(3, :b)] + ze[20,(23, :a)] + ze[20,(1, :a)] + ze[20,(3, :a)] + ze[20,(2, :b)] + ze[20,(4, :a)] + ze[20,(21, :a)] + ze[20,(10, :a)] + ze[20,(12, :b)] = 1
 ye[32] = 0
 ye[33] = 0
 ye[34] = 0
 q[32,a] = 0
 q[33,a] = 0
 q[34,a] = 0
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.362635
Threads  1

Optimize a model with 984 rows, 897 columns and 2795 nonzeros
Model fingerprint: 0x54072159
Model has 721 simple general constraints
  721 INDICATOR
Variable types: 88 continuous, 809 integer (809 binary)
Coefficient statistics:
  Matrix range     [3e-01, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 1e+00]
  RHS range        [1e-06, 1e+00]
  GenCon rhs range [2e-03, 1e+00]
  GenCon coe range [1e+00, 1e+00]
Presolve added 296 rows and 0 columns
Presolve removed 0 rows and 161 columns
Presolve time: 0.06s
Presolved: 1280 rows, 736 columns, 7305 nonzeros
Variable types: 51 continuous, 685 integer (685 binary)
Found heuristic solution: objective 31.0000000
Found heuristic solution: objective 30.0000000
Found heuristic solution: objective 17.0000000
Found heuristic solution: objective 16.0000000

Root relaxation: objective 1.000000e+00, 498 iterations, 0.01 seconds (0.02 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    1.00000    0   54   16.00000    1.00000  93.8%     -    0s
H    0     0                       8.0000000    1.00000  87.5%     -    0s
H    0     0                       5.0000000    1.00000  80.0%     -    0s
H    0     0                       4.0000000    1.00000  75.0%     -    0s
     0     0    1.00000    0  140    4.00000    1.00000  75.0%     -    0s
H    0     0                       3.0000000    1.00000  66.7%     -    0s
     0     0    1.00000    0  158    3.00000    1.00000  66.7%     -    0s
     0     0    1.07722    0  137    3.00000    1.07722  64.1%     -    0s
     0     0    1.07919    0  152    3.00000    1.07919  64.0%     -    0s
     0     0    1.23614    0  178    3.00000    1.23614  58.8%     -    0s
     0     0    1.26624    0  185    3.00000    1.26624  57.8%     -    0s
     0     0    1.35193    0  204    3.00000    1.35193  54.9%     -    0s
     0     0    1.35506    0  203    3.00000    1.35506  54.8%     -    0s
     0     0    1.35624    0  196    3.00000    1.35624  54.8%     -    0s
     0     0    1.35779    0  197    3.00000    1.35779  54.7%     -    0s
     0     0    1.35779    0  199    3.00000    1.35779  54.7%     -    0s
     0     0    1.35872    0  177    3.00000    1.35872  54.7%     -    0s
     0     0    1.36189    0  187    3.00000    1.36189  54.6%     -    0s
     0     0    1.36189    0  165    3.00000    1.36189  54.6%     -    0s
     0     0    1.36189    0  184    3.00000    1.36189  54.6%     -    0s
     0     0    1.36246    0  184    3.00000    1.36246  54.6%     -    0s
     0     0    1.36401    0  184    3.00000    1.36401  54.5%     -    0s
     0     0    1.36401    0  190    3.00000    1.36401  54.5%     -    0s
     0     0    1.36401    0  190    3.00000    1.36401  54.5%     -    0s
     0     0    1.36401    0  170    3.00000    1.36401  54.5%     -    0s
     0     0    1.36401    0  163    3.00000    1.36401  54.5%     -    0s
     0     2    1.36401    0  163    3.00000    1.36401  54.5%     -    0s

Cutting planes:
  Learned: 21
  Cover: 68
  Implied bound: 19
  MIR: 87
  StrongCG: 6
  Flow cover: 37
  GUB cover: 5
  Inf proof: 5
  Zero half: 8
  RLT: 16
  Relax-and-lift: 9
  BQP: 6
  PSD: 1

Explored 308 nodes (23036 simplex iterations) in 1.42 seconds (1.15 work units)
Thread count was 1 (of 16 available processors)

Solution count 8: 3 4 5 ... 31

Optimal solution found (tolerance 1.00e-04)
Best objective 3.000000000000e+00, best bound 3.000000000000e+00, gap 0.0000%

User-callback calls 2080, time in user-callback 0.00 sec

 sepatime0 0 0
3.0Stat(MathOptInterface.OPTIMAL, 3.0, 3.0, 0.0, 0.0, 1.637365, 1.4162499904632568, 308, Main.CFLG.LEFPAI, "", #undef)
