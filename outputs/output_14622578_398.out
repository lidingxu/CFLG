Data path: /scratch/opt/lxu/CFLG/benchmarks/random_B
Instance: r_25_0.1_36.txt
Result path: /scratch/opt/lxu/CFLG/results/random_B
Solver: Gurobi
Time limit: 7200
Formulation: LEFP
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/random_B r_25_0.1_36.txt /scratch/opt/lxu/CFLG/results/random_B Gurobi 7200 LEFP Large
The latest version of Julia in the `release` channel is 1.11.5+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.5+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/random_B Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/random_B r_25_0.1_36.txt LEFP Large
/scratch/opt/lxu/CFLG/benchmarks/random_B/r_25_0.1_36.txt

 read graph
data loaded

problem_graph/original graph: node: 25/25 edge: 36/36 dlt: 1.4522257607055817 break_avg_len: 0.7261128803527909 break_max_len: 0.9874679371971357Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 61 rows, 108 columns and 180 nonzeros
Model fingerprint: 0x350c29bb
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 61 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds (0.00 work units)
Optimal objective  3.000000000e+00

User-callback calls 35, time in user-callback 0.01 sec
elapsed CPU time: 1.22944 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7198.77056

 more cuts: false 1.4522257607055817 false
is_attach:falseformulation:LEFP0 36 0

 model loaded

Min ye[1] + ye[2] + ye[3] + ye[4] + ye[5] + ye[6] + ye[7] + ye[8] + ye[9] + ye[10] + ye[11] + ye[12] + ye[13] + ye[14] + ye[15] + ye[16] + ye[17] + ye[18] + ye[19] + ye[20] + ye[21] + ye[22] + ye[23] + ye[24] + ye[25] + ye[26] + ye[27] + ye[28] + ye[29] + ye[30] + [[...1 terms omitted...]] + ye[32] + ye[33] + ye[34] + ye[35] + ye[36] + yv[1] + yv[2] + yv[3] + yv[4] + yv[5] + yv[6] + yv[7] + yv[8] + yv[9] + yv[10] + yv[11] + yv[12] + yv[13] + yv[14] + yv[15] + yv[16] + yv[17] + yv[18] + yv[19] + yv[20] + yv[21] + yv[22] + yv[23] + yv[24] + yv[25]
Subject to
 q[1,a] ≥ 0
 q[2,a] ≥ 0
 q[3,a] ≥ 0
 q[4,a] ≥ 0
 q[5,a] ≥ 0
 q[6,a] ≥ 0
 q[7,a] ≥ 0
 q[8,a] ≥ 0
 q[9,a] ≥ 0
 q[10,a] ≥ 0
 q[11,a] ≥ 0
 q[12,a] ≥ 0
 q[13,a] ≥ 0
 q[14,a] ≥ 0
 q[15,a] ≥ 0
 q[16,a] ≥ 0
 q[17,a] ≥ 0
 q[18,a] ≥ 0
 q[19,a] ≥ 0
 q[20,a] ≥ 0
 q[21,a] ≥ 0
 q[22,a] ≥ 0
 q[23,a] ≥ 0
 q[24,a] ≥ 0
 q[25,a] ≥ 0
 q[26,a] ≥ 0
 q[27,a] ≥ 0
 q[28,a] ≥ 0
 q[29,a] ≥ 0
 q[30,a] ≥ 0
 q[31,a] ≥ 0
 q[32,a] ≥ 0
 q[33,a] ≥ 0
 q[34,a] ≥ 0
 q[35,a] ≥ 0
 q[36,a] ≥ 0
 q[1,b] ≥ 0
 q[2,b] ≥ 0
 q[3,b] ≥ 0
 q[4,b] ≥ 0
 q[5,b] ≥ 0
 q[6,b] ≥ 0
 q[7,b] ≥ 0
 q[8,b] ≥ 0
 q[9,b] ≥ 0
 q[10,b] ≥ 0
 q[11,b] ≥ 0
 q[12,b] ≥ 0
 q[13,b] ≥ 0
 q[14,b] ≥ 0
[[...1973 constraints skipped...]]
 q[12,a] - q[12,b] = 0
 q[13,a] - q[13,b] = 0
 q[14,a] - q[14,b] = 0
 q[15,a] - q[15,b] = 0
 q[16,a] - q[16,b] = 0
 q[17,a] - q[17,b] = 0
 q[18,a] - q[18,b] = 0
 q[19,a] - q[19,b] = 0
 q[20,a] - q[20,b] = 0
 q[21,a] - q[21,b] = 0
 q[22,a] - q[22,b] = 0
 q[23,a] - q[23,b] = 0
 q[24,a] - q[24,b] = 0
 q[25,a] - q[25,b] = 0
 q[26,a] - q[26,b] = 0
 q[27,a] - q[27,b] = 0
 q[28,a] - q[28,b] = 0
 q[29,a] - q[29,b] = 0
 q[30,a] - q[30,b] = 0
 q[31,a] - q[31,b] = 0
 q[32,a] - q[32,b] = 0
 q[33,a] - q[33,b] = 0
 q[34,a] - q[34,b] = 0
 q[35,a] - q[35,b] = 0
 q[36,a] - q[36,b] = 0
 x[1] + ze[1,(28, :b)] + ze[1,(8, :b)] + ze[1,(1, :b)] + ze[1,(19, :b)] + ze[1,(22, :b)] + ze[1,(35, :a)] + ze[1,(9, :b)] + ze[1,(8, :a)] + ze[1,(17, :a)] + ze[1,(1, :a)] + ze[1,(19, :a)] + ze[1,(33, :b)] + ze[1,(25, :b)] + ze[1,(7, :b)] + ze[1,(9, :a)] + ze[1,(2, :b)] + ze[1,(33, :a)] + ze[1,(10, :b)] + ze[1,(16, :b)] + ze[1,(34, :a)] + ze[1,(2, :a)] + ze[1,(18, :a)] + ze[1,(24, :b)] = 1
 x[2] + ze[2,(26, :a)] + ze[2,(3, :b)] + ze[2,(3, :a)] + ze[2,(4, :b)] + ze[2,(29, :b)] + ze[2,(4, :a)] + ze[2,(13, :b)] + ze[2,(27, :a)] + ze[2,(31, :a)] = 1
 x[3] + ze[3,(28, :b)] + ze[3,(8, :b)] + ze[3,(17, :b)] + ze[3,(19, :b)] + ze[3,(22, :b)] + ze[3,(5, :a)] + ze[3,(6, :b)] + ze[3,(35, :a)] + ze[3,(9, :b)] + ze[3,(17, :a)] + ze[3,(19, :a)] + ze[3,(22, :a)] + ze[3,(7, :b)] + ze[3,(6, :a)] + ze[3,(33, :b)] + ze[3,(25, :b)] + ze[3,(14, :a)] + ze[3,(2, :b)] + ze[3,(7, :a)] + ze[3,(33, :a)] + ze[3,(10, :b)] + ze[3,(18, :b)] + ze[3,(5, :b)] + ze[3,(16, :b)] + ze[3,(34, :a)] + ze[3,(13, :a)] + ze[3,(21, :a)] + ze[3,(18, :a)] + ze[3,(24, :b)] = 1
 x[4] + ze[4,(28, :b)] + ze[4,(17, :b)] + ze[4,(19, :b)] + ze[4,(22, :b)] + ze[4,(6, :b)] + ze[4,(35, :a)] + ze[4,(28, :a)] + ze[4,(17, :a)] + ze[4,(19, :a)] + ze[4,(22, :a)] + ze[4,(33, :b)] + ze[4,(25, :b)] + ze[4,(7, :b)] + ze[4,(10, :b)] + ze[4,(18, :b)] + ze[4,(16, :b)] + ze[4,(21, :a)] + ze[4,(2, :a)] + ze[4,(18, :a)] = 1
 x[5] + ze[5,(28, :b)] + ze[5,(22, :b)] + ze[5,(35, :b)] + ze[5,(11, :b)] + ze[5,(10, :b)] + ze[5,(11, :a)] + ze[5,(10, :a)] + ze[5,(36, :a)] + ze[5,(9, :b)] = 1
 x[6] + ze[6,(5, :a)] + ze[6,(6, :b)] + ze[6,(14, :b)] + ze[6,(3, :b)] + ze[6,(32, :a)] + ze[6,(22, :a)] + ze[6,(6, :a)] + ze[6,(14, :a)] + ze[6,(13, :b)] + ze[6,(7, :a)] + ze[6,(18, :b)] + ze[6,(26, :b)] + ze[6,(5, :b)] + ze[6,(13, :a)] + ze[6,(27, :a)] + ze[6,(26, :a)] = 1
 x[7] + ze[7,(30, :b)] + ze[7,(19, :b)] + ze[7,(35, :a)] + ze[7,(20, :a)] + ze[7,(36, :b)] + ze[7,(31, :b)] + ze[7,(30, :a)] + ze[7,(24, :a)] + ze[7,(23, :a)] + ze[7,(33, :b)] + ze[7,(25, :b)] + ze[7,(7, :b)] + ze[7,(34, :b)] + ze[7,(29, :a)] + ze[7,(33, :a)] + ze[7,(25, :a)] + ze[7,(2, :b)] + ze[7,(27, :b)] + ze[7,(34, :a)] + ze[7,(20, :b)] + ze[7,(24, :b)] = 1
 x[8] + ze[8,(28, :b)] + ze[8,(8, :b)] + ze[8,(17, :b)] + ze[8,(1, :b)] + ze[8,(19, :b)] + ze[8,(22, :b)] + ze[8,(32, :b)] + ze[8,(5, :a)] + ze[8,(6, :b)] + ze[8,(35, :a)] + ze[8,(23, :b)] + ze[8,(9, :b)] + ze[8,(8, :a)] + ze[8,(17, :a)] + ze[8,(1, :a)] + ze[8,(19, :a)] + ze[8,(22, :a)] + ze[8,(33, :b)] + ze[8,(6, :a)] + ze[8,(25, :b)] + ze[8,(7, :b)] + ze[8,(9, :a)] + ze[8,(21, :b)] + ze[8,(2, :b)] + ze[8,(33, :a)] + ze[8,(7, :a)] + ze[8,(10, :b)] + ze[8,(18, :b)] + ze[8,(16, :b)] + ze[8,(34, :a)] + ze[8,(21, :a)] + ze[8,(2, :a)] + ze[8,(18, :a)] + ze[8,(24, :b)] = 1
 x[9] + ze[9,(4, :b)] + ze[9,(16, :a)] + ze[9,(36, :b)] + ze[9,(27, :b)] + ze[9,(31, :a)] = 1
 x[10] + ze[10,(8, :b)] + ze[10,(17, :b)] + ze[10,(23, :b)] + ze[10,(1, :b)] + ze[10,(32, :b)] + ze[10,(19, :b)] + ze[10,(5, :a)] + ze[10,(6, :b)] + ze[10,(35, :a)] + ze[10,(8, :a)] + ze[10,(17, :a)] + ze[10,(19, :a)] + ze[10,(22, :a)] + ze[10,(33, :b)] + ze[10,(6, :a)] + ze[10,(25, :b)] + ze[10,(7, :b)] + ze[10,(9, :a)] + ze[10,(21, :b)] + ze[10,(7, :a)] + ze[10,(18, :b)] + ze[10,(16, :b)] + ze[10,(21, :a)] + ze[10,(18, :a)] = 1
 x[11] + ze[11,(28, :b)] + ze[11,(8, :b)] + ze[11,(17, :b)] + ze[11,(1, :b)] + ze[11,(19, :b)] + ze[11,(22, :b)] + ze[11,(5, :a)] + ze[11,(35, :a)] + ze[11,(9, :b)] + ze[11,(28, :a)] + ze[11,(8, :a)] + ze[11,(17, :a)] + ze[11,(19, :a)] + ze[11,(22, :a)] + ze[11,(7, :b)] + ze[11,(33, :b)] + ze[11,(25, :b)] + ze[11,(9, :a)] + ze[11,(14, :a)] + ze[11,(7, :a)] + ze[11,(10, :b)] + ze[11,(18, :b)] + ze[11,(5, :b)] + ze[11,(16, :b)] + ze[11,(13, :a)] + ze[11,(21, :a)] + ze[11,(18, :a)] = 1
 x[12] + ze[12,(23, :b)] + ze[12,(19, :b)] + ze[12,(32, :b)] + ze[12,(35, :a)] + ze[12,(16, :a)] + ze[12,(31, :b)] + ze[12,(24, :a)] + ze[12,(14, :b)] + ze[12,(23, :a)] + ze[12,(32, :a)] + ze[12,(33, :b)] + ze[12,(25, :b)] + ze[12,(7, :b)] + ze[12,(34, :b)] + ze[12,(21, :b)] + ze[12,(2, :b)] + ze[12,(33, :a)] + ze[12,(25, :a)] + ze[12,(26, :b)] + ze[12,(16, :b)] + ze[12,(34, :a)] + ze[12,(15, :a)] + ze[12,(24, :b)] = 1
 x[13] + ze[13,(26, :a)] + ze[13,(36, :b)] + ze[13,(14, :b)] + ze[13,(3, :b)] + ze[13,(32, :a)] + ze[13,(14, :a)] + ze[13,(3, :a)] + ze[13,(13, :b)] + ze[13,(27, :b)] + ze[13,(26, :b)] + ze[13,(5, :b)] + ze[13,(13, :a)] + ze[13,(4, :a)] + ze[13,(27, :a)] + ze[13,(30, :b)] = 1
 x[14] + ze[14,(8, :a)] + ze[14,(1, :b)] + ze[14,(6, :b)] + ze[14,(10, :b)] + ze[14,(18, :b)] = 1
 x[15] + ze[15,(19, :b)] + ze[15,(16, :a)] + ze[15,(35, :a)] + ze[15,(11, :b)] + ze[15,(36, :b)] + ze[15,(29, :b)] + ze[15,(33, :b)] + ze[15,(25, :b)] + ze[15,(7, :b)] + ze[15,(36, :a)] + ze[15,(31, :a)] + ze[15,(4, :b)] + ze[15,(15, :b)] + ze[15,(29, :a)] + ze[15,(27, :b)] + ze[15,(16, :b)] + ze[15,(35, :b)] + ze[15,(15, :a)] = 1
 x[16] + ze[16,(28, :b)] + ze[16,(8, :b)] + ze[16,(1, :b)] + ze[16,(22, :b)] + ze[16,(5, :a)] + ze[16,(6, :b)] + ze[16,(9, :b)] + ze[16,(12, :a)] + ze[16,(28, :a)] + ze[16,(8, :a)] + ze[16,(17, :a)] + ze[16,(1, :a)] + ze[16,(19, :a)] + ze[16,(22, :a)] + ze[16,(6, :a)] + ze[16,(11, :a)] + ze[16,(9, :a)] + ze[16,(7, :a)] + ze[16,(10, :b)] + ze[16,(18, :b)] + ze[16,(2, :a)] + ze[16,(10, :a)] + ze[16,(12, :b)] + ze[16,(18, :a)] = 1
 x[17] + ze[17,(30, :b)] + ze[17,(20, :a)] + ze[17,(36, :b)] + ze[17,(31, :b)] + ze[17,(30, :a)] + ze[17,(29, :b)] + ze[17,(31, :a)] + ze[17,(3, :a)] + ze[17,(34, :b)] + ze[17,(4, :b)] + ze[17,(15, :b)] + ze[17,(29, :a)] + ze[17,(33, :a)] + ze[17,(2, :b)] + ze[17,(27, :b)] + ze[17,(34, :a)] + ze[17,(20, :b)] + ze[17,(4, :a)] + ze[17,(24, :b)] = 1
 x[18] + ze[18,(23, :b)] + ze[18,(32, :b)] + ze[18,(24, :a)] + ze[18,(14, :b)] + ze[18,(3, :b)] + ze[18,(23, :a)] + ze[18,(32, :a)] + ze[18,(14, :a)] + ze[18,(13, :b)] + ze[18,(21, :b)] + ze[18,(25, :a)] + ze[18,(26, :b)] + ze[18,(5, :b)] + ze[18,(13, :a)] + ze[18,(27, :a)] + ze[18,(26, :a)] = 1
 x[19] + ze[19,(8, :b)] + ze[19,(17, :b)] + ze[19,(23, :b)] + ze[19,(19, :b)] + ze[19,(32, :b)] + ze[19,(35, :a)] + ze[19,(24, :a)] + ze[19,(14, :b)] + ze[19,(17, :a)] + ze[19,(23, :a)] + ze[19,(19, :a)] + ze[19,(32, :a)] + ze[19,(33, :b)] + ze[19,(25, :b)] + ze[19,(7, :b)] + ze[19,(21, :b)] + ze[19,(25, :a)] + ze[19,(26, :b)] + ze[19,(16, :b)] + ze[19,(21, :a)] + ze[19,(18, :a)] = 1
 x[20] + ze[20,(8, :b)] + ze[20,(19, :b)] + ze[20,(5, :a)] + ze[20,(35, :a)] + ze[20,(16, :a)] + ze[20,(11, :b)] + ze[20,(31, :b)] + ze[20,(24, :a)] + ze[20,(17, :a)] + ze[20,(23, :a)] + ze[20,(19, :a)] + ze[20,(1, :a)] + ze[20,(29, :b)] + ze[20,(6, :a)] + ze[20,(33, :b)] + ze[20,(25, :b)] + ze[20,(36, :a)] + ze[20,(7, :b)] + ze[20,(31, :a)] + ze[20,(34, :b)] + ze[20,(4, :b)] + ze[20,(2, :b)] + ze[20,(33, :a)] + ze[20,(25, :a)] + ze[20,(7, :a)] + ze[20,(35, :b)] + ze[20,(16, :b)] + ze[20,(34, :a)] + ze[20,(15, :a)] + ze[20,(2, :a)] + ze[20,(18, :a)] + ze[20,(24, :b)] = 1
 x[21] + ze[21,(23, :b)] + ze[21,(11, :b)] + ze[21,(23, :a)] + ze[21,(7, :b)] + ze[21,(25, :b)] + ze[21,(36, :a)] + ze[21,(34, :b)] + ze[21,(2, :b)] + ze[21,(7, :a)] + ze[21,(25, :a)] + ze[21,(18, :b)] + ze[21,(16, :b)] + ze[21,(20, :b)] + ze[21,(34, :a)] + ze[21,(2, :a)] + ze[21,(18, :a)] + ze[21,(19, :b)] + ze[21,(16, :a)] + ze[21,(31, :b)] + ze[21,(19, :a)] + ze[21,(9, :a)] + ze[21,(21, :b)] + ze[21,(29, :a)] + ze[21,(21, :a)] + ze[21,(24, :b)] + ze[21,(8, :b)] + ze[21,(17, :b)] + ze[21,(1, :b)] + ze[21,(24, :a)] + ze[21,(8, :a)] + ze[21,(17, :a)] + ze[21,(1, :a)] + ze[21,(22, :a)] + ze[21,(33, :b)] + ze[21,(15, :b)] + ze[21,(33, :a)] + ze[21,(35, :b)] + ze[21,(15, :a)] + ze[21,(32, :b)] + ze[21,(5, :a)] + ze[21,(6, :b)] + ze[21,(35, :a)] + ze[21,(30, :a)] + ze[21,(6, :a)] = 1
 x[22] + ze[22,(30, :b)] + ze[22,(19, :b)] + ze[22,(35, :a)] + ze[22,(11, :b)] + ze[22,(36, :b)] + ze[22,(12, :a)] + ze[22,(30, :a)] + ze[22,(33, :b)] + ze[22,(25, :b)] + ze[22,(7, :b)] + ze[22,(11, :a)] + ze[22,(36, :a)] + ze[22,(15, :b)] + ze[22,(29, :a)] + ze[22,(33, :a)] + ze[22,(2, :b)] + ze[22,(27, :b)] + ze[22,(35, :b)] + ze[22,(16, :b)] + ze[22,(20, :b)] + ze[22,(34, :a)] + ze[22,(10, :a)] + ze[22,(12, :b)] + ze[22,(24, :b)] = 1
 x[23] + ze[23,(28, :b)] + ze[23,(22, :b)] + ze[23,(35, :b)] + ze[23,(36, :a)] + ze[23,(9, :b)] = 1
 x[24] + ze[24,(26, :a)] + ze[24,(16, :a)] + ze[24,(20, :a)] + ze[24,(11, :b)] + ze[24,(36, :b)] + ze[24,(30, :a)] + ze[24,(3, :b)] + ze[24,(29, :b)] + ze[24,(36, :a)] + ze[24,(31, :a)] + ze[24,(13, :b)] + ze[24,(15, :b)] + ze[24,(4, :b)] + ze[24,(29, :a)] + ze[24,(27, :b)] + ze[24,(35, :b)] + ze[24,(20, :b)] + ze[24,(15, :a)] + ze[24,(27, :a)] + ze[24,(30, :b)] = 1
 x[25] + ze[25,(19, :b)] + ze[25,(35, :a)] + ze[25,(16, :a)] + ze[25,(24, :a)] + ze[25,(23, :a)] + ze[25,(29, :b)] + ze[25,(33, :b)] + ze[25,(25, :b)] + ze[25,(7, :b)] + ze[25,(4, :b)] + ze[25,(2, :b)] + ze[25,(33, :a)] + ze[25,(25, :a)] + ze[25,(16, :b)] + ze[25,(15, :a)] + ze[25,(24, :b)] = 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5122 CPU @ 3.60GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7198.77056
Threads  1

Optimize a model with 1259 rows, 717 columns and 3591 nonzeros
Model fingerprint: 0xd62cef62
Variable types: 97 continuous, 620 integer (620 binary)
Coefficient statistics:
  Matrix range     [1e-06, 2e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-01, 1e+00]
  RHS range        [1e-06, 2e+00]
Found heuristic solution: objective 7.0000000
Presolve removed 259 rows and 108 columns
Presolve time: 0.03s
Presolved: 1000 rows, 609 columns, 5223 nonzeros
Variable types: 61 continuous, 548 integer (548 binary)

Root relaxation: objective 1.745924e+00, 617 iterations, 0.01 seconds (0.01 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    1.74592    0  144    7.00000    1.74592  75.1%     -    0s
     0     0    2.23972    0  172    7.00000    2.23972  68.0%     -    0s
H    0     0                       6.0000000    2.24637  62.6%     -    0s
     0     0    2.24637    0  171    6.00000    2.24637  62.6%     -    0s
     0     0    2.52127    0  167    6.00000    2.52127  58.0%     -    0s
H    0     0                       5.0000000    2.57690  48.5%     -    0s
     0     0    2.57690    0  165    5.00000    2.57690  48.5%     -    0s
     0     0    2.57690    0  163    5.00000    2.57690  48.5%     -    0s
     0     0    2.67958    0  172    5.00000    2.67958  46.4%     -    0s
     0     0    2.71875    0  182    5.00000    2.71875  45.6%     -    0s
     0     0    2.74418    0  164    5.00000    2.74418  45.1%     -    0s
     0     0    2.74684    0  180    5.00000    2.74684  45.1%     -    0s
     0     0    2.74728    0  183    5.00000    2.74728  45.1%     -    0s
     0     0    2.74728    0  183    5.00000    2.74728  45.1%     -    0s
     0     0    3.00000    0  124    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  126    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  119    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  119    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0   78    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0   85    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0   88    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  107    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0   62    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  142    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0  114    5.00000    3.00000  40.0%     -    0s
     0     0    3.00000    0   96    5.00000    3.00000  40.0%     -    0s
     0     2    3.00000    0   75    5.00000    3.00000  40.0%     -    0s
* 1211     0              14       4.0000000    4.00000  0.00%  33.2    2s

Cutting planes:
  Cover: 36
  Implied bound: 35
  MIR: 50
  StrongCG: 8
  GUB cover: 40
  Inf proof: 4
  RLT: 32
  Relax-and-lift: 6
  BQP: 9
  PSD: 2

Explored 1212 nodes (46901 simplex iterations) in 2.10 seconds (1.68 work units)
Thread count was 1 (of 16 available processors)

Solution count 4: 4 5 6 7 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%

User-callback calls 3940, time in user-callback 0.00 sec

 sepatime0 0 0
4.0Stat(MathOptInterface.OPTIMAL, 4.0, 4.0, 0.0, 0.0, 1.22944, 2.104412078857422, 1212, Main.CFLG.LEFP, "", #undef)
