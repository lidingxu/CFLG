Data path: /scratch/opt/lxu/CFLG/benchmarks/Kgroup_A
Instance: K100.4.con.red
Result path: /scratch/opt/lxu/CFLG/results/Kgroup_A
Solver: Gurobi
Time limit: 7200
Formulation: LEFPA
Cover: Large
julia --project=. src/main.jl /scratch/opt/lxu/CFLG/benchmarks/Kgroup_A K100.4.con.red /scratch/opt/lxu/CFLG/results/Kgroup_A Gurobi 7200 LEFPA Large
The latest version of Julia in the `release` channel is 1.11.6+0.x64.linux.gnu. You currently have `1.11.4+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.6+0.x64.linux.gnu and update the `release` channel to that version.
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_A Gurobi 7200.0 /scratch/opt/lxu/CFLG/results/Kgroup_A K100.4.con.red LEFPA Large
/scratch/opt/lxu/CFLG/benchmarks/Kgroup_A/K100.4.con.red

 read graph
data loaded


after absorb:29 29

max_piece:4
problem_graph/original graph: node: 40/29 edge: 124/113 dlt: 0.6125142061016242 break_avg_len: 0.27908913423178855 break_max_len: 0.6125135935874181Vbar/V, Ebar/E(39, 40, 123, 124)
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
Threads  1

Optimize a model with 164 rows, 372 columns and 620 nonzeros
Model fingerprint: 0x052b9886
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 24 rows and 35 columns
Presolve time: 0.00s
Presolved: 140 rows, 337 columns, 561 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.2400000e+02   1.470000e+02   0.000000e+00      0s
     100    3.9000000e+01   0.000000e+00   0.000000e+00      0s

Solved in 100 iterations and 0.00 seconds (0.00 work units)
Optimal objective  3.900000000e+01

User-callback calls 179, time in user-callback 0.00 sec
elapsed CPU time: 0.968589 seconds
Set parameter TokenServer to value "solice01.zib.de"
Set parameter Threads to value 1
Set parameter OutputFlag to value 1
Set parameter MIPGap to value 0.0001
Set parameter TimeLimit to value 7199.031411

 more cuts: false 0.6125142061016242 false
is_attach:trueformulation:LEFPA0 124 40

 model loaded

Gurobi Optimizer version 12.0.1 build v12.0.1rc0 (linux64 - "Debian GNU/Linux 12 (bookworm)")

CPU model: Intel(R) Xeon(R) Gold 5222 CPU @ 3.80GHz, instruction set [SSE2|AVX|AVX2|AVX512]
Thread count: 8 physical cores, 16 logical processors, using up to 1 threads

Non-default parameters:
TimeLimit  7199.031411
Threads  1

Optimize a model with 8936 rows, 4421 columns and 26232 nonzeros
Model fingerprint: 0xbe74f320
Variable types: 288 continuous, 4133 integer (4133 binary)
Coefficient statistics:
  Matrix range     [1e-06, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [3e-02, 6e-01]
  RHS range        [3e-02, 1e+01]
Found heuristic solution: objective 60.0000000
Presolve removed 2123 rows and 325 columns
Presolve time: 0.06s
Presolved: 6813 rows, 4096 columns, 22885 nonzeros
Variable types: 163 continuous, 3933 integer (3933 binary)

Root relaxation: objective 2.333333e+00, 2592 iterations, 0.08 seconds (0.12 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    2.33333    0  105   60.00000    2.33333  96.1%     -    0s
H    0     0                       8.0000000    2.33333  70.8%     -    0s
H    0     0                       7.0000000    2.33333  66.7%     -    0s
     0     0    2.33333    0  160    7.00000    2.33333  66.7%     -    0s
H    0     0                       6.0000000    2.33333  61.1%     -    0s
     0     0    3.00000    0  200    6.00000    3.00000  50.0%     -    0s
     0     0    3.00000    0  119    6.00000    3.00000  50.0%     -    1s
     0     0    3.00000    0  212    6.00000    3.00000  50.0%     -    1s
     0     0    3.00000    0  198    6.00000    3.00000  50.0%     -    1s
     0     0    3.00000    0  127    6.00000    3.00000  50.0%     -    1s
     0     2    3.00000    0  127    6.00000    3.00000  50.0%     -    2s
   136    97    3.00000   10  168    6.00000    3.00000  50.0%   156    5s
H  217   125                       5.0000000    3.00000  40.0%   151    5s
   688   338    3.01884   10  114    5.00000    3.00000  40.0%   129   10s
   713   361    3.56417   27  209    5.00000    3.00000  40.0%   126   15s
   721   366    3.28302   37  263    5.00000    3.28302  34.3%   124   20s
   731   373    3.51881   19  388    5.00000    3.28492  34.3%   123   25s
   741   380    4.00000   64  420    5.00000    3.29688  34.1%   121   31s
   749   385    3.33183   74  465    5.00000    3.30487  33.9%   120   35s
   759   392    4.00000   13  498    5.00000    3.30667  33.9%   118   40s
   771   400    3.31450   22  503    5.00000    3.31450  33.7%   116   45s
   783   408    3.31641   15  678    5.00000    3.31641  33.7%   115   50s
   794   416    3.84081   16  127    5.00000    3.31641  33.7%   333   55s
   801   421    4.00000   42  425    5.00000    3.32195  33.6%   330   60s
H  806   402                       4.0000000    3.33576  16.6%   328   65s

Cutting planes:
  Learned: 19
  Gomory: 1
  Cover: 23
  Implied bound: 5
  Clique: 45
  MIR: 6
  StrongCG: 1
  Flow cover: 46
  GUB cover: 14
  Zero half: 17
  RLT: 6
  Relax-and-lift: 1
  BQP: 1

Explored 806 nodes (330478 simplex iterations) in 65.45 seconds (90.44 work units)
Thread count was 1 (of 16 available processors)

Solution count 9: 4 5 5 ... 60

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0000%

User-callback calls 15052, time in user-callback 0.01 sec

 sepatime0 0 0
4.0
Stat(MathOptInterface.OPTIMAL, 4.0, 4.0, 0.0, 0.0, 0.968589, 65.4532561302185, 806, Main.CFLG.LEFPA, "", #undef)
